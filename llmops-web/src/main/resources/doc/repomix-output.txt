This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.github/
  workflows/
    maven.yml
llmops-client/
  src/
    main/
      java/
        com/
          emcikem/
            llm/
              client/
                Main.java
  pom.xml
llmops-common/
  src/
    main/
      java/
        com/
          emcikem/
            llm/
              common/
                entity/
                  ApiResponse.java
                enums/
                  ChatMessageRoleTypeEnum.java
                  ChatModelEnum.java
                  ResponseStatusEnum.java
                gateway/
                  RedisGateway.java
                  RedisLockGateway.java
                util/
                  GsonUtil.java
                vo/
                  apitools/
                    ApiProviderListVO.java
                    ApiProviderToolVO.java
                    ApiProviderVO.java
                    ApiToolHeaderVO.java
                    ApiToolInputVO.java
                    ApiToolsDetailVO.java
                    ApiValidateOpenApiSchemaVO.java
                    CreateProviderDetailVO.java
                    Paginator.java
                    UpdateProviderDetailVO.java
                  AiChatResponse.java
                  ChatDialogVO.java
                  ChatHistoryVO.java
                  ChatVO.java
  pom.xml
llmops-dao/
  src/
    main/
      java/
        com/
          emcikem/
            llm/
              dao/
                entity/
                  LlmOpsApiToolDO.java
                  LlmOpsApiToolProviderDO.java
                  LlmOpsChatDialogDO.java
                  LlmOpsChatHistoryDO.java
                example/
                  LlmOpsApiToolDOExample.java
                  LlmOpsApiToolProviderDOExample.java
                  LlmOpsChatDialogDOExample.java
                  LlmOpsChatHistoryDOExample.java
                mapper/
                  LlmOpsApiToolDOMapper.java
                  LlmOpsApiToolProviderDOMapper.java
                  LlmOpsChatDialogDOMapper.java
                  LlmOpsChatHistoryDOMapper.java
      resources/
        docs/
          ddl.md
        mapper/
          LlmOpsApiToolDOMapper.xml
          LlmOpsApiToolProviderDOMapper.xml
          LlmOpsChatDialogDOMapper.xml
          LlmOpsChatHistoryDOMapper.xml
        default-comment.ftl
        generatorConfig.xml
  pom.xml
llmops-service/
  src/
    main/
      java/
        com/
          emcikem/
            llm/
              service/
                aiservice/
                  factory/
                    AbsAssistantBuildService.java
                    AssistantBuildService.java
                    AssistantFactory.java
                    DeepSeekBuildServiceImpl.java
                    KimiBuildServiceImpl.java
                  tools/
                    crawler/
                      CommonCrawler.java
                      ConfigUtil.java
                      IpPoolCrawler.java
                      IpPort.java
                      SearchCrawler.java
                      WeiBoCrawler.java
                    AiNetworkSearchServiceTools.java
                  Assistant.java
                  AssistantTools.java
                  PersistentChatMemoryStore.java
                config/
                  CorsConfig.java
                  RestTemplateConfig.java
                  ThreadPoolConfig.java
                constant/
                  Constant.java
                convert/
                  ChatDialogConvert.java
                service/
                  BingWebSearchSample.java
                  BuiltinToolService.java
                  ChatAssistService.java
                  ChatDialogService.java
                  WebContentSample.java
                util/
                  CacheUtil.java
                  CommonUtil.java
                  ConfigUtil.java
                  CrawlerUtil.java
                  FileUtil.java
  pom.xml
llmops-web/
  src/
    main/
      java/
        com/
          emcikem/
            llm/
              web/
                controller/
                  ApiToolsController.java
                  AssistantController.java
                  ChatDialogController.java
                  PersonSpaceController.java
                  PingController.java
                  PluginController.java
                ApplicationLoader.java
      resources/
        doc/
          接口文档/
            插件模块.md
            文件上传模块.md
            知识库模块.md
          LLMOps数据库ER图.drawio
          openApischeme.json
        application.properties
        log4j2.xml
  pom.xml
.gitignore
pom.xml
README.md

================================================================
Files
================================================================

================
File: .github/workflows/maven.yml
================
# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Upload JAR file
      uses: actions/upload-artifact@v4
      with:
        name: llmops-package.jar
        path: llmops-web/target/*.jar
  deploy:
    runs-on: ubuntu-latest
    needs: build  # 依赖 build Job
    environment: prod
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: llmops-package.jar
          path: llmops-web/target/

      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVICE_HOST }}
          username: ${{ secrets.SERVICE_NAME }}
          key: ${{ secrets.SSHKEY_PRIVATE }}
          source: llmops-web/target/*.jar
          target: /opt/llmops/
          overwrite: true

      - name: Start application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVICE_HOST }}
          username: ${{ secrets.SERVICE_NAME }}
          key: ${{ secrets.SSHKEY_PRIVATE }}
          script: |
            echo "starting deploy"
            cd /opt/llmops/llmops-web/target
            ls -l
            if pgrep -fa llmops-web; then
              echo "stop application"
              pgrep -f "llmops-web" | grep -v $$ | xargs kill > /dev/null 2>&1 || true
              sleep 60  
            fi
            echo "Starting application..."
            nohup java -jar llmops-web-1.0-SNAPSHOT.jar > app.log 2>&1 &
            echo "end"

================
File: llmops-client/src/main/java/com/emcikem/llm/client/Main.java
================
package com.emcikem.llm.client;

/**
 * Create with Emcikem on ${DATE}
 *
 * @author Emcikem
 * @version 1.0.0
 */
public class Main {
    public static void main(String[] args) {
        System.out.println("Hello world!");
    }
}

================
File: llmops-client/pom.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.emcikem</groupId>
        <artifactId>llmops</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.emcikem</groupId>
    <artifactId>llmops-client</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

</project>

================
File: llmops-common/src/main/java/com/emcikem/llm/common/entity/ApiResponse.java
================
package com.emcikem.llm.common.entity;

import com.emcikem.llm.common.enums.ResponseStatusEnum;
import lombok.Data;

/**
 * Create with Emcikem on 2025/1/19
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiResponse<T> {

    private Integer code;

    private String message;

    private T data;

    public ApiResponse() {
    }

    public ApiResponse(Integer code, String message) {
        this.code = code;
        this.message = message;
    }

    public ApiResponse(Integer code, T data) {
        this.code = code;
        this.data = data;
    }

    public static<T> ApiResponse<T> success(T data) {
        return new ApiResponse<>(ResponseStatusEnum.SUCCESS.getCode(), data);
    }

    public static <T> ApiResponse<T> error(int code, String msg) {
        return new ApiResponse<>(code, msg);
    }

    public static <T> ApiResponse<T> error(ResponseStatusEnum statusEnum) {
        return new ApiResponse<>(statusEnum.getCode(), statusEnum.getMsg());
    }
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/enums/ChatMessageRoleTypeEnum.java
================
package com.emcikem.llm.common.enums;

/**
 * Create with Emcikem on 2025/1/18
 *
 * @author Emcikem
 * @version 1.0.0
 */
public enum ChatMessageRoleTypeEnum {
    AI(1, "ai消息"),
    USER(2, "用户消息"),
    ;

    private final Integer role;

    private final String desc;

    ChatMessageRoleTypeEnum(Integer role, String desc) {
        this.role = role;
        this.desc = desc;
    }

    public Integer getRole() {
        return role;
    }

    public String getDesc() {
        return desc;
    }
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/enums/ChatModelEnum.java
================
package com.emcikem.llm.common.enums;

import java.util.Arrays;

/**
 * Create with Emcikem on 2025/1/20
 *
 * @author Emcikem
 * @version 1.0.0
 */
public enum ChatModelEnum {
    DEEP_SEEK(1, "deepseek-chat", "https://api.deepseek.com"),
    KIMI(2, "moonshot-v1-8k", "https://api.moonshot.cn/v1"),
    ;

    private final Integer modeId;

    private final String modelName;

    private final String baseUrl;

    ChatModelEnum(Integer modeId, String modelName, String baseUrl) {
        this.modeId = modeId;
        this.modelName = modelName;
        this.baseUrl = baseUrl;
    }

    public Integer getModeId() {
        return modeId;
    }

    public String getModelName() {
        return modelName;
    }

    public String getBaseUrl() {
        return baseUrl;
    }

    public static ChatModelEnum findByModeId(Integer modelId) {
        return Arrays.stream(values()).filter(x -> x.getModeId().equals(modelId))
                .findFirst()
                .orElse(null);
    }
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/enums/ResponseStatusEnum.java
================
package com.emcikem.llm.common.enums;

/**
 * Create with Emcikem on 2025/1/31
 *
 * @author Emcikem
 * @version 1.0.0
 */
public enum ResponseStatusEnum {

    SUCCESS(0, "成功"),
    SYSTEM_ERROR(1, "系统繁忙"),
    ;

    private final int code;

    private final String msg;

    ResponseStatusEnum(int code, String msg) {
        this.code = code;
        this.msg = msg;
    }

    public int getCode() {
        return code;
    }

    public String getMsg() {
        return msg;
    }
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/gateway/RedisGateway.java
================
package com.emcikem.llm.common.gateway;

/**
 * Create with Emcikem on 2024/11/21
 *
 * @author Emcikem
 * @version 1.0.0
 */
public class RedisGateway {
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/gateway/RedisLockGateway.java
================
package com.emcikem.llm.common.gateway;

/**
 * Create with Emcikem on 2024/11/21
 *
 * @author Emcikem
 * @version 1.0.0
 */
public class RedisLockGateway {
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/util/GsonUtil.java
================
package com.emcikem.llm.common.util;

import com.google.gson.*;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.math.NumberUtils;
import org.apache.commons.lang3.time.DateUtils;

import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.text.ParseException;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * Create with Emcikem on 2024/11/21
 *
 * @author Emcikem
 * @version 1.0.0
 */
public class GsonUtil {

    private final static Gson GSON = new GsonBuilder().registerTypeAdapter(Date.class, new DateTypeAdapter()).create();

    public static String toJSONString(Object object) {
        if (object == null) {
            return "";
        }
        return GSON.toJson(object);
    }

    public static <T> T parseObject(String json, Class<T> clz) {
        if (StringUtils.isBlank(json)) {
            return null;
        }
        return GSON.fromJson(json, clz);
    }

    public static <T> List<T> parseList(String json, Class<T> clazz) {
        if (StringUtils.isBlank(json)) {
            return Collections.emptyList();
        }
        Type type = new ParameterizedType() {
            @Override
            public Type[] getActualTypeArguments() {
                return new Type[]{clazz};
            }

            @Override
            public Type getRawType() {
                return List.class;
            }

            @Override
            public Type getOwnerType() {
                return null;
            }
        };
        return GSON.fromJson(json, type);
    }

    public static <T> Map<String, T> gsonToMaps(String gsonString) {
        Map<String, T> map = null;
        if (GSON != null) {
            map = GSON.fromJson(gsonString, new TypeToken<Map<String, T>>() {
            }.getType());
        }
        return map;
    }

    public static class DateTypeAdapter implements JsonSerializer<Date>, JsonDeserializer<Date> {
        @Override
        public Date deserialize(JsonElement json, Type type, JsonDeserializationContext context) throws JsonParseException {
            try {
                return NumberUtils.isParsable(json.getAsJsonPrimitive().getAsString()) ? new Date(json.getAsJsonPrimitive().getAsLong()) : DateUtils.parseDate(json.getAsJsonPrimitive().getAsString(), new String[]{"yyyy-MM-dd HH:mm:ss"});
            } catch (ParseException e) {
                throw new IllegalArgumentException("DateTypeAdapter.deserialize fail!", e);
            }
        }

        @Override
        public JsonElement serialize(Date date, Type type, JsonSerializationContext jsonSerializationContext) {
            return new JsonPrimitive(date.getTime());
        }
    }
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/ApiProviderListVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

import java.util.List;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiProviderListVO {

    private List<ApiProviderVO> list;

    private Paginator paginator;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/ApiProviderToolVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

import java.util.List;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiProviderToolVO {

    private String id;

    private String description;

    private String name;

    private List<ApiToolInputVO> inputs;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/ApiProviderVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

import java.util.List;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiProviderVO {

    private String id;

    private String name;

    private String icon;

    private String description;

    private List<ApiProviderToolVO> tools;

    private List<ApiToolHeaderVO> headers;

    private Long created_at;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/ApiToolHeaderVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiToolHeaderVO {

    private String key;

    private String value;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/ApiToolInputVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiToolInputVO {

    private String type;

    private boolean required;

    private String name;

    private String description;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/ApiToolsDetailVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

import java.util.List;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiToolsDetailVO {

    private String id;

    private String name;

    private String icon;

    private String openapi_schema;

    private List<ApiToolHeaderVO> headers;

    private Long created_at;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/ApiValidateOpenApiSchemaVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ApiValidateOpenApiSchemaVO {

    private String openapi_scheme;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/CreateProviderDetailVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

import java.util.List;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class CreateProviderDetailVO {

    private String name;

    private String icon;

    private String openapi_schema;

    private List<ApiToolHeaderVO> headers;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/Paginator.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class Paginator {

    private Integer current_page;

    private Integer page_size;

    private Integer total_page;

    private Integer total_record;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/apitools/UpdateProviderDetailVO.java
================
package com.emcikem.llm.common.vo.tools;

import lombok.Data;

import java.util.List;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class UpdateProviderDetailVO {

    private String name;

    private String icon;

    private String openapi_schema;

    private List<ApiToolHeaderVO> headers;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/AiChatResponse.java
================
package com.emcikem.llm.common.vo;

import lombok.Data;

@Data
public class AiChatResponse {

    private String content;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/ChatDialogVO.java
================
package com.emcikem.llm.common.vo;

import lombok.Data;

/**
 * Create with Emcikem on 2025/1/19
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Data
public class ChatDialogVO {

    private Long id;

    private String name;

    private Long tenantId;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/ChatHistoryVO.java
================
package com.emcikem.llm.common.vo;

import lombok.Data;

/**
 * @author wx40217
 * @date 2025/1/19
 */
@Data
public class ChatHistoryVO {

    private Long userId;

    private Integer page;

    private Integer size;
}

================
File: llmops-common/src/main/java/com/emcikem/llm/common/vo/ChatVO.java
================
package com.emcikem.llm.common.vo;

import lombok.Data;

/**
 * @author wx40217
 * @date 2025/1/19
 */
@Data
public class ChatVO {
    /**
     * 租户ID
     */
    private Long tenantId;

    /**
     * 对话ID
     */
    private Long dialogId;

    /**
     * 模型类型
     */
    private Integer modelType;

    /**
     * 用户输入的prompt
     */
    private String prompt;

    /**
     * 是否联网
     */
    private Boolean isOnline;

}

================
File: llmops-common/pom.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.emcikem</groupId>
        <artifactId>llmops</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>llmops-common</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

</project>

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/entity/LlmOpsApiToolDO.java
================
package com.emcikem.llm.dao.entity;

import lombok.Data;

import java.util.Date;

/**
 * Database Table Remarks:
 *   API工具表
 *
 * @mbg.generated do_not_delete_during_merge
 */
@Data
public class LlmOpsApiToolDO {

    /**
     * Database Column Remarks:
     *   API工具自增主键
     *
     * @mbg.generated
     */
    private Long id;

    /**
     * Database Column Remarks:
     *   关联的用户id
     *
     * @mbg.generated
     */
    private String accountId;

    /**
     * Database Column Remarks:
     *   关联的提供者id
     *
     * @mbg.generated
     */
    private String providerId;

    /**
     * Database Column Remarks:
     *   工具名称
     *
     * @mbg.generated
     */
    private String name;

    /**
     * Database Column Remarks:
     *   工具API地址
     *
     * @mbg.generated
     */
    private String url;

    /**
     * Database Column Remarks:
     *   调用方法
     *
     * @mbg.generated
     */
    private String method;

    /**
     * Database Column Remarks:
     *   工具描述
     *
     * @mbg.generated
     */
    private String description;

    /**
     * Database Column Remarks:
     *   工具参数
     *
     * @mbg.generated
     */
    private String parameters;

    /**
     * Database Column Remarks:
     *   最后更新时间
     *
     * @mbg.generated
     */
    private Date updatedAt;

    /**
     * Database Column Remarks:
     *   创建时间
     *
     * @mbg.generated
     */
    private Date createdAt;
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/entity/LlmOpsApiToolProviderDO.java
================
package com.emcikem.llm.dao.entity;

import lombok.Data;

import java.util.Date;

/**
 * Database Table Remarks:
 *   API工具提供者表
 *
 * @mbg.generated do_not_delete_during_merge
 */
@Data
public class LlmOpsApiToolProviderDO {

    /**
     * Database Column Remarks:
     *   API工具提供者自增主键
     *
     * @mbg.generated
     */
    private Long id;

    /**
     * Database Column Remarks:
     *   工具提供商唯一标识
     *
     * @mbg.generated
     */
    private String providerId;

    /**
     * Database Column Remarks:
     *   关联的用户id
     *
     * @mbg.generated
     */
    private String accountId;

    /**
     * Database Column Remarks:
     *   提供商名称
     *
     * @mbg.generated
     */
    private String name;

    /**
     * Database Column Remarks:
     *   提供商图标
     *
     * @mbg.generated
     */
    private String icon;

    /**
     * Database Column Remarks:
     *   提供商描述
     *
     * @mbg.generated
     */
    private String description;

    /**
     * Database Column Remarks:
     *   规范描述
     *
     * @mbg.generated
     */
    private String openapiSchema;

    /**
     * Database Column Remarks:
     *   提供商对应的请求头
     *
     * @mbg.generated
     */
    private String headers;

    /**
     * Database Column Remarks:
     *   最后更新时间
     *
     * @mbg.generated
     */
    private Date updatedAt;

    /**
     * Database Column Remarks:
     *   创建时间
     *
     * @mbg.generated
     */
    private Date createdAt;
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/entity/LlmOpsChatDialogDO.java
================
package com.emcikem.llm.dao.entity;

import java.util.Date;
import lombok.Data;

/**
 * Database Table Remarks:
 *   对话概要表
 *
 * @mbg.generated do_not_delete_during_merge
 */
@Data
public class LlmOpsChatDialogDO {
    /**
     * Database Column Remarks:
     *   兑换id
     *
     * @mbg.generated
     */
    private Long id;

    /**
     * Database Column Remarks:
     *   对话概要
     *
     * @mbg.generated
     */
    private String title;

    /**
     * Database Column Remarks:
     *   租户id
     *
     * @mbg.generated
     */
    private Long tenantId;

    /**
     * Database Column Remarks:
     *   创建人
     *
     * @mbg.generated
     */
    private String creator;

    /**
     * Database Column Remarks:
     *   最后修改人
     *
     * @mbg.generated
     */
    private String operator;

    /**
     * Database Column Remarks:
     *   创建时间
     *
     * @mbg.generated
     */
    private Date ctime;

    /**
     * Database Column Remarks:
     *   最后修改时间
     *
     * @mbg.generated
     */
    private Date utime;

    /**
     * Database Column Remarks:
     *   对话内容
     *
     * @mbg.generated
     */
    private String content;
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/entity/LlmOpsChatHistoryDO.java
================
package com.emcikem.llm.dao.entity;

import java.util.Date;
import lombok.Data;

/**
 * Database Table Remarks:
 *   对话记录表
 *
 * @mbg.generated do_not_delete_during_merge
 */
@Data
public class LlmOpsChatHistoryDO {
    /**
     * Database Column Remarks:
     *   聊天id
     *
     * @mbg.generated
     */
    private Long id;

    /**
     * Database Column Remarks:
     *   角色类型，1:assist，2:user
     *
     * @mbg.generated
     */
    private Integer role;

    /**
     * Database Column Remarks:
     *   租户id
     *
     * @mbg.generated
     */
    private Long tenantId;

    /**
     * Database Column Remarks:
     *   对话id
     *
     * @mbg.generated
     */
    private Long dialogId;

    /**
     * Database Column Remarks:
     *   token数
     *
     * @mbg.generated
     */
    private Long token;

    /**
     * Database Column Remarks:
     *   创建人
     *
     * @mbg.generated
     */
    private String creator;

    /**
     * Database Column Remarks:
     *   创建时间
     *
     * @mbg.generated
     */
    private Date ctime;

    /**
     * Database Column Remarks:
     *   对话内容
     *
     * @mbg.generated
     */
    private String content;
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/example/LlmOpsApiToolDOExample.java
================
package com.emcikem.llm.dao.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LlmOpsApiToolDOExample {
    /**
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * @mbg.generated
     */
    protected Integer rows;

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LlmOpsApiToolDOExample example = new LlmOpsApiToolDOExample();
        return example.createCriteria();
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolDOExample distinct(boolean distinct) {
        this.setDistinct(distinct);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("account_id is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("account_id is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(String value) {
            addCriterion("account_id =", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(String value) {
            addCriterion("account_id <>", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(String value) {
            addCriterion("account_id >", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("account_id >=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(String value) {
            addCriterion("account_id <", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(String value) {
            addCriterion("account_id <=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLike(String value) {
            addCriterion("account_id like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotLike(String value) {
            addCriterion("account_id not like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<String> values) {
            addCriterion("account_id in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<String> values) {
            addCriterion("account_id not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(String value1, String value2) {
            addCriterion("account_id between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(String value1, String value2) {
            addCriterion("account_id not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andProviderIdIsNull() {
            addCriterion("provider_id is null");
            return (Criteria) this;
        }

        public Criteria andProviderIdIsNotNull() {
            addCriterion("provider_id is not null");
            return (Criteria) this;
        }

        public Criteria andProviderIdEqualTo(String value) {
            addCriterion("provider_id =", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotEqualTo(String value) {
            addCriterion("provider_id <>", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdGreaterThan(String value) {
            addCriterion("provider_id >", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdGreaterThanOrEqualTo(String value) {
            addCriterion("provider_id >=", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdLessThan(String value) {
            addCriterion("provider_id <", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdLessThanOrEqualTo(String value) {
            addCriterion("provider_id <=", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdLike(String value) {
            addCriterion("provider_id like", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotLike(String value) {
            addCriterion("provider_id not like", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdIn(List<String> values) {
            addCriterion("provider_id in", values, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotIn(List<String> values) {
            addCriterion("provider_id not in", values, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdBetween(String value1, String value2) {
            addCriterion("provider_id between", value1, value2, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotBetween(String value1, String value2) {
            addCriterion("provider_id not between", value1, value2, "providerId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("url is null");
            return (Criteria) this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("url is not null");
            return (Criteria) this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("url =", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("url <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("url >", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("url >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("url <", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("url <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("url like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("url not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlIn(List<String> values) {
            addCriterion("url in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotIn(List<String> values) {
            addCriterion("url not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("url between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("url not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andMethodIsNull() {
            addCriterion("method is null");
            return (Criteria) this;
        }

        public Criteria andMethodIsNotNull() {
            addCriterion("method is not null");
            return (Criteria) this;
        }

        public Criteria andMethodEqualTo(String value) {
            addCriterion("method =", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotEqualTo(String value) {
            addCriterion("method <>", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThan(String value) {
            addCriterion("method >", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThanOrEqualTo(String value) {
            addCriterion("method >=", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodLessThan(String value) {
            addCriterion("method <", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodLessThanOrEqualTo(String value) {
            addCriterion("method <=", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodLike(String value) {
            addCriterion("method like", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotLike(String value) {
            addCriterion("method not like", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodIn(List<String> values) {
            addCriterion("method in", values, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotIn(List<String> values) {
            addCriterion("method not in", values, "method");
            return (Criteria) this;
        }

        public Criteria andMethodBetween(String value1, String value2) {
            addCriterion("method between", value1, value2, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotBetween(String value1, String value2) {
            addCriterion("method not between", value1, value2, "method");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * @mbg.generated
         */
        private LlmOpsApiToolDOExample example;

        /**
         *
         * @mbg.generated
         */
        protected Criteria(LlmOpsApiToolDOExample example) {
            super();
            this.example = example;
        }

        /**
         *
         * @mbg.generated
         */
        public LlmOpsApiToolDOExample example() {
            return this.example;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public interface ICriteriaAdd {
            /**
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public interface ICriteriaWhen {
        /**
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public interface IExampleWhen {
        /**
         *
         * @mbg.generated
         */
        void example(com.emcikem.llm.dao.example.LlmOpsApiToolDOExample example);
    }
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/example/LlmOpsApiToolProviderDOExample.java
================
package com.emcikem.llm.dao.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LlmOpsApiToolProviderDOExample {
    /**
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * @mbg.generated
     */
    protected Integer rows;

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LlmOpsApiToolProviderDOExample example = new LlmOpsApiToolProviderDOExample();
        return example.createCriteria();
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsApiToolProviderDOExample distinct(boolean distinct) {
        this.setDistinct(distinct);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProviderIdIsNull() {
            addCriterion("provider_id is null");
            return (Criteria) this;
        }

        public Criteria andProviderIdIsNotNull() {
            addCriterion("provider_id is not null");
            return (Criteria) this;
        }

        public Criteria andProviderIdEqualTo(String value) {
            addCriterion("provider_id =", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotEqualTo(String value) {
            addCriterion("provider_id <>", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdGreaterThan(String value) {
            addCriterion("provider_id >", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdGreaterThanOrEqualTo(String value) {
            addCriterion("provider_id >=", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdLessThan(String value) {
            addCriterion("provider_id <", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdLessThanOrEqualTo(String value) {
            addCriterion("provider_id <=", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdLike(String value) {
            addCriterion("provider_id like", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotLike(String value) {
            addCriterion("provider_id not like", value, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdIn(List<String> values) {
            addCriterion("provider_id in", values, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotIn(List<String> values) {
            addCriterion("provider_id not in", values, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdBetween(String value1, String value2) {
            addCriterion("provider_id between", value1, value2, "providerId");
            return (Criteria) this;
        }

        public Criteria andProviderIdNotBetween(String value1, String value2) {
            addCriterion("provider_id not between", value1, value2, "providerId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("account_id is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("account_id is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(String value) {
            addCriterion("account_id =", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(String value) {
            addCriterion("account_id <>", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(String value) {
            addCriterion("account_id >", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("account_id >=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(String value) {
            addCriterion("account_id <", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(String value) {
            addCriterion("account_id <=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLike(String value) {
            addCriterion("account_id like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotLike(String value) {
            addCriterion("account_id not like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<String> values) {
            addCriterion("account_id in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<String> values) {
            addCriterion("account_id not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(String value1, String value2) {
            addCriterion("account_id between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(String value1, String value2) {
            addCriterion("account_id not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andIconIsNull() {
            addCriterion("icon is null");
            return (Criteria) this;
        }

        public Criteria andIconIsNotNull() {
            addCriterion("icon is not null");
            return (Criteria) this;
        }

        public Criteria andIconEqualTo(String value) {
            addCriterion("icon =", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconNotEqualTo(String value) {
            addCriterion("icon <>", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconGreaterThan(String value) {
            addCriterion("icon >", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconGreaterThanOrEqualTo(String value) {
            addCriterion("icon >=", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconLessThan(String value) {
            addCriterion("icon <", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconLessThanOrEqualTo(String value) {
            addCriterion("icon <=", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconLike(String value) {
            addCriterion("icon like", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconNotLike(String value) {
            addCriterion("icon not like", value, "icon");
            return (Criteria) this;
        }

        public Criteria andIconIn(List<String> values) {
            addCriterion("icon in", values, "icon");
            return (Criteria) this;
        }

        public Criteria andIconNotIn(List<String> values) {
            addCriterion("icon not in", values, "icon");
            return (Criteria) this;
        }

        public Criteria andIconBetween(String value1, String value2) {
            addCriterion("icon between", value1, value2, "icon");
            return (Criteria) this;
        }

        public Criteria andIconNotBetween(String value1, String value2) {
            addCriterion("icon not between", value1, value2, "icon");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * @mbg.generated
         */
        private LlmOpsApiToolProviderDOExample example;

        /**
         *
         * @mbg.generated
         */
        protected Criteria(LlmOpsApiToolProviderDOExample example) {
            super();
            this.example = example;
        }

        /**
         *
         * @mbg.generated
         */
        public LlmOpsApiToolProviderDOExample example() {
            return this.example;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public interface ICriteriaAdd {
            /**
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public interface ICriteriaWhen {
        /**
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public interface IExampleWhen {
        /**
         *
         * @mbg.generated
         */
        void example(com.emcikem.llm.dao.example.LlmOpsApiToolProviderDOExample example);
    }
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/example/LlmOpsChatDialogDOExample.java
================
package com.emcikem.llm.dao.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LlmOpsChatDialogDOExample {
    /**
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * @mbg.generated
     */
    protected Integer rows;

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LlmOpsChatDialogDOExample example = new LlmOpsChatDialogDOExample();
        return example.createCriteria();
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatDialogDOExample distinct(boolean distinct) {
        this.setDistinct(distinct);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("title =", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("title <>", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("title >", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("title >=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("title <", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("title <=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("title like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("title not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("title in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("title not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(Long value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(Long value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(Long value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(Long value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(Long value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(Long value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<Long> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<Long> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(Long value1, Long value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(Long value1, Long value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("creator is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("creator is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(String value) {
            addCriterion("creator =", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(String value) {
            addCriterion("creator <>", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(String value) {
            addCriterion("creator >", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(String value) {
            addCriterion("creator >=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(String value) {
            addCriterion("creator <", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(String value) {
            addCriterion("creator <=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLike(String value) {
            addCriterion("creator like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotLike(String value) {
            addCriterion("creator not like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<String> values) {
            addCriterion("creator in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<String> values) {
            addCriterion("creator not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(String value1, String value2) {
            addCriterion("creator between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(String value1, String value2) {
            addCriterion("creator not between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("operator is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("operator is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorEqualTo(String value) {
            addCriterion("operator =", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotEqualTo(String value) {
            addCriterion("operator <>", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThan(String value) {
            addCriterion("operator >", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(String value) {
            addCriterion("operator >=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThan(String value) {
            addCriterion("operator <", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLessThanOrEqualTo(String value) {
            addCriterion("operator <=", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorLike(String value) {
            addCriterion("operator like", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotLike(String value) {
            addCriterion("operator not like", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorIn(List<String> values) {
            addCriterion("operator in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotIn(List<String> values) {
            addCriterion("operator not in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorBetween(String value1, String value2) {
            addCriterion("operator between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotBetween(String value1, String value2) {
            addCriterion("operator not between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNull() {
            addCriterion("ctime is null");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNotNull() {
            addCriterion("ctime is not null");
            return (Criteria) this;
        }

        public Criteria andCtimeEqualTo(Date value) {
            addCriterion("ctime =", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotEqualTo(Date value) {
            addCriterion("ctime <>", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThan(Date value) {
            addCriterion("ctime >", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ctime >=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThan(Date value) {
            addCriterion("ctime <", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThanOrEqualTo(Date value) {
            addCriterion("ctime <=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeIn(List<Date> values) {
            addCriterion("ctime in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotIn(List<Date> values) {
            addCriterion("ctime not in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeBetween(Date value1, Date value2) {
            addCriterion("ctime between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotBetween(Date value1, Date value2) {
            addCriterion("ctime not between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andUtimeIsNull() {
            addCriterion("utime is null");
            return (Criteria) this;
        }

        public Criteria andUtimeIsNotNull() {
            addCriterion("utime is not null");
            return (Criteria) this;
        }

        public Criteria andUtimeEqualTo(Date value) {
            addCriterion("utime =", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeNotEqualTo(Date value) {
            addCriterion("utime <>", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeGreaterThan(Date value) {
            addCriterion("utime >", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("utime >=", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeLessThan(Date value) {
            addCriterion("utime <", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeLessThanOrEqualTo(Date value) {
            addCriterion("utime <=", value, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeIn(List<Date> values) {
            addCriterion("utime in", values, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeNotIn(List<Date> values) {
            addCriterion("utime not in", values, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeBetween(Date value1, Date value2) {
            addCriterion("utime between", value1, value2, "utime");
            return (Criteria) this;
        }

        public Criteria andUtimeNotBetween(Date value1, Date value2) {
            addCriterion("utime not between", value1, value2, "utime");
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * @mbg.generated
         */
        private LlmOpsChatDialogDOExample example;

        /**
         *
         * @mbg.generated
         */
        protected Criteria(LlmOpsChatDialogDOExample example) {
            super();
            this.example = example;
        }

        /**
         *
         * @mbg.generated
         */
        public LlmOpsChatDialogDOExample example() {
            return this.example;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public interface ICriteriaAdd {
            /**
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public interface ICriteriaWhen {
        /**
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public interface IExampleWhen {
        /**
         *
         * @mbg.generated
         */
        void example(com.emcikem.llm.dao.example.LlmOpsChatDialogDOExample example);
    }
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/example/LlmOpsChatHistoryDOExample.java
================
package com.emcikem.llm.dao.example;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LlmOpsChatHistoryDOExample {
    /**
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * @mbg.generated
     */
    protected Integer offset;

    /**
     * @mbg.generated
     */
    protected Integer rows;

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     *
     * @mbg.generated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     *
     * @mbg.generated
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     *
     * @mbg.generated
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LlmOpsChatHistoryDOExample example = new LlmOpsChatHistoryDOExample();
        return example.createCriteria();
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    public LlmOpsChatHistoryDOExample distinct(boolean distinct) {
        this.setDistinct(distinct);
        return this;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRoleIsNull() {
            addCriterion("role is null");
            return (Criteria) this;
        }

        public Criteria andRoleIsNotNull() {
            addCriterion("role is not null");
            return (Criteria) this;
        }

        public Criteria andRoleEqualTo(Integer value) {
            addCriterion("role =", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleNotEqualTo(Integer value) {
            addCriterion("role <>", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleGreaterThan(Integer value) {
            addCriterion("role >", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleGreaterThanOrEqualTo(Integer value) {
            addCriterion("role >=", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleLessThan(Integer value) {
            addCriterion("role <", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleLessThanOrEqualTo(Integer value) {
            addCriterion("role <=", value, "role");
            return (Criteria) this;
        }

        public Criteria andRoleIn(List<Integer> values) {
            addCriterion("role in", values, "role");
            return (Criteria) this;
        }

        public Criteria andRoleNotIn(List<Integer> values) {
            addCriterion("role not in", values, "role");
            return (Criteria) this;
        }

        public Criteria andRoleBetween(Integer value1, Integer value2) {
            addCriterion("role between", value1, value2, "role");
            return (Criteria) this;
        }

        public Criteria andRoleNotBetween(Integer value1, Integer value2) {
            addCriterion("role not between", value1, value2, "role");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(Long value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(Long value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(Long value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(Long value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(Long value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(Long value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<Long> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<Long> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(Long value1, Long value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(Long value1, Long value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andDialogIdIsNull() {
            addCriterion("dialog_id is null");
            return (Criteria) this;
        }

        public Criteria andDialogIdIsNotNull() {
            addCriterion("dialog_id is not null");
            return (Criteria) this;
        }

        public Criteria andDialogIdEqualTo(Long value) {
            addCriterion("dialog_id =", value, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdNotEqualTo(Long value) {
            addCriterion("dialog_id <>", value, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdGreaterThan(Long value) {
            addCriterion("dialog_id >", value, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdGreaterThanOrEqualTo(Long value) {
            addCriterion("dialog_id >=", value, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdLessThan(Long value) {
            addCriterion("dialog_id <", value, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdLessThanOrEqualTo(Long value) {
            addCriterion("dialog_id <=", value, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdIn(List<Long> values) {
            addCriterion("dialog_id in", values, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdNotIn(List<Long> values) {
            addCriterion("dialog_id not in", values, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdBetween(Long value1, Long value2) {
            addCriterion("dialog_id between", value1, value2, "dialogId");
            return (Criteria) this;
        }

        public Criteria andDialogIdNotBetween(Long value1, Long value2) {
            addCriterion("dialog_id not between", value1, value2, "dialogId");
            return (Criteria) this;
        }

        public Criteria andTokenIsNull() {
            addCriterion("token is null");
            return (Criteria) this;
        }

        public Criteria andTokenIsNotNull() {
            addCriterion("token is not null");
            return (Criteria) this;
        }

        public Criteria andTokenEqualTo(Long value) {
            addCriterion("token =", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotEqualTo(Long value) {
            addCriterion("token <>", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenGreaterThan(Long value) {
            addCriterion("token >", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenGreaterThanOrEqualTo(Long value) {
            addCriterion("token >=", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLessThan(Long value) {
            addCriterion("token <", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLessThanOrEqualTo(Long value) {
            addCriterion("token <=", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenIn(List<Long> values) {
            addCriterion("token in", values, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotIn(List<Long> values) {
            addCriterion("token not in", values, "token");
            return (Criteria) this;
        }

        public Criteria andTokenBetween(Long value1, Long value2) {
            addCriterion("token between", value1, value2, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotBetween(Long value1, Long value2) {
            addCriterion("token not between", value1, value2, "token");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("creator is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("creator is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(String value) {
            addCriterion("creator =", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(String value) {
            addCriterion("creator <>", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(String value) {
            addCriterion("creator >", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(String value) {
            addCriterion("creator >=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(String value) {
            addCriterion("creator <", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(String value) {
            addCriterion("creator <=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLike(String value) {
            addCriterion("creator like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotLike(String value) {
            addCriterion("creator not like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<String> values) {
            addCriterion("creator in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<String> values) {
            addCriterion("creator not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(String value1, String value2) {
            addCriterion("creator between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(String value1, String value2) {
            addCriterion("creator not between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNull() {
            addCriterion("ctime is null");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNotNull() {
            addCriterion("ctime is not null");
            return (Criteria) this;
        }

        public Criteria andCtimeEqualTo(Date value) {
            addCriterion("ctime =", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotEqualTo(Date value) {
            addCriterion("ctime <>", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThan(Date value) {
            addCriterion("ctime >", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ctime >=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThan(Date value) {
            addCriterion("ctime <", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThanOrEqualTo(Date value) {
            addCriterion("ctime <=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeIn(List<Date> values) {
            addCriterion("ctime in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotIn(List<Date> values) {
            addCriterion("ctime not in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeBetween(Date value1, Date value2) {
            addCriterion("ctime between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotBetween(Date value1, Date value2) {
            addCriterion("ctime not between", value1, value2, "ctime");
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * @mbg.generated
         */
        private LlmOpsChatHistoryDOExample example;

        /**
         *
         * @mbg.generated
         */
        protected Criteria(LlmOpsChatHistoryDOExample example) {
            super();
            this.example = example;
        }

        /**
         *
         * @mbg.generated
         */
        public LlmOpsChatHistoryDOExample example() {
            return this.example;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         *
         * @mbg.generated
         */
        @Deprecated
        public interface ICriteriaAdd {
            /**
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public interface ICriteriaWhen {
        /**
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    /**
     *
     * @mbg.generated
     */
    public interface IExampleWhen {
        /**
         *
         * @mbg.generated
         */
        void example(com.emcikem.llm.dao.example.LlmOpsChatHistoryDOExample example);
    }
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/mapper/LlmOpsApiToolDOMapper.java
================
package com.emcikem.llm.dao.mapper;

import com.emcikem.llm.dao.entity.LlmOpsApiToolDO;
import com.emcikem.llm.dao.example.LlmOpsApiToolDOExample;
import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface LlmOpsApiToolDOMapper {
    /**
     *
     * @mbg.generated
     */
    long countByExample(LlmOpsApiToolDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByExample(LlmOpsApiToolDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int insert(LlmOpsApiToolDO record);

    /**
     *
     * @mbg.generated
     */
    int insertSelective(LlmOpsApiToolDO record);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsApiToolDO> selectByExampleWithBLOBs(LlmOpsApiToolDOExample example);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsApiToolDO> selectByExample(LlmOpsApiToolDOExample example);

    /**
     *
     * @mbg.generated
     */
    LlmOpsApiToolDO selectByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") LlmOpsApiToolDO record, @Param("example") LlmOpsApiToolDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") LlmOpsApiToolDO record, @Param("example") LlmOpsApiToolDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") LlmOpsApiToolDO record, @Param("example") LlmOpsApiToolDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(LlmOpsApiToolDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(LlmOpsApiToolDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(LlmOpsApiToolDO record);
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/mapper/LlmOpsApiToolProviderDOMapper.java
================
package com.emcikem.llm.dao.mapper;

import com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO;
import com.emcikem.llm.dao.example.LlmOpsApiToolProviderDOExample;
import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface LlmOpsApiToolProviderDOMapper {
    /**
     *
     * @mbg.generated
     */
    long countByExample(LlmOpsApiToolProviderDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByExample(LlmOpsApiToolProviderDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int insert(LlmOpsApiToolProviderDO record);

    /**
     *
     * @mbg.generated
     */
    int insertSelective(LlmOpsApiToolProviderDO record);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsApiToolProviderDO> selectByExampleWithBLOBs(LlmOpsApiToolProviderDOExample example);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsApiToolProviderDO> selectByExample(LlmOpsApiToolProviderDOExample example);

    /**
     *
     * @mbg.generated
     */
    LlmOpsApiToolProviderDO selectByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") LlmOpsApiToolProviderDO record, @Param("example") LlmOpsApiToolProviderDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") LlmOpsApiToolProviderDO record, @Param("example") LlmOpsApiToolProviderDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") LlmOpsApiToolProviderDO record, @Param("example") LlmOpsApiToolProviderDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(LlmOpsApiToolProviderDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(LlmOpsApiToolProviderDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(LlmOpsApiToolProviderDO record);
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/mapper/LlmOpsChatDialogDOMapper.java
================
package com.emcikem.llm.dao.mapper;

import com.emcikem.llm.dao.entity.LlmOpsChatDialogDO;
import com.emcikem.llm.dao.example.LlmOpsChatDialogDOExample;
import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface LlmOpsChatDialogDOMapper {
    /**
     *
     * @mbg.generated
     */
    long countByExample(LlmOpsChatDialogDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByExample(LlmOpsChatDialogDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int insert(LlmOpsChatDialogDO record);

    /**
     *
     * @mbg.generated
     */
    int insertSelective(LlmOpsChatDialogDO record);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsChatDialogDO> selectByExampleWithBLOBs(LlmOpsChatDialogDOExample example);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsChatDialogDO> selectByExample(LlmOpsChatDialogDOExample example);

    /**
     *
     * @mbg.generated
     */
    LlmOpsChatDialogDO selectByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") LlmOpsChatDialogDO record, @Param("example") LlmOpsChatDialogDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") LlmOpsChatDialogDO record, @Param("example") LlmOpsChatDialogDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") LlmOpsChatDialogDO record, @Param("example") LlmOpsChatDialogDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(LlmOpsChatDialogDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(LlmOpsChatDialogDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(LlmOpsChatDialogDO record);
}

================
File: llmops-dao/src/main/java/com/emcikem/llm/dao/mapper/LlmOpsChatHistoryDOMapper.java
================
package com.emcikem.llm.dao.mapper;

import com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO;
import com.emcikem.llm.dao.example.LlmOpsChatHistoryDOExample;
import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface LlmOpsChatHistoryDOMapper {
    /**
     *
     * @mbg.generated
     */
    long countByExample(LlmOpsChatHistoryDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByExample(LlmOpsChatHistoryDOExample example);

    /**
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int insert(LlmOpsChatHistoryDO record);

    /**
     *
     * @mbg.generated
     */
    int insertSelective(LlmOpsChatHistoryDO record);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsChatHistoryDO> selectByExampleWithBLOBs(LlmOpsChatHistoryDOExample example);

    /**
     *
     * @mbg.generated
     */
    List<LlmOpsChatHistoryDO> selectByExample(LlmOpsChatHistoryDOExample example);

    /**
     *
     * @mbg.generated
     */
    LlmOpsChatHistoryDO selectByPrimaryKey(Long id);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") LlmOpsChatHistoryDO record, @Param("example") LlmOpsChatHistoryDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") LlmOpsChatHistoryDO record, @Param("example") LlmOpsChatHistoryDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") LlmOpsChatHistoryDO record, @Param("example") LlmOpsChatHistoryDOExample example);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(LlmOpsChatHistoryDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(LlmOpsChatHistoryDO record);

    /**
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(LlmOpsChatHistoryDO record);
}

================
File: llmops-dao/src/main/resources/docs/ddl.md
================
CREATE DATABASE llmops
CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

use llmops;


CREATE TABLE `llmops_chat_history` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '聊天id',
  `role` tinyint(4) NOT NULL DEFAULT '1' COMMENT '角色类型，1:assist，2:user',
  `tenant_id` bigint(20) unsigned NOT NULL COMMENT '租户id',
  `dialog_id` bigint(20) unsigned NOT NULL COMMENT '对话id',
  `content` json DEFAULT NULL COMMENT '对话内容',
  `token` bigint(20) unsigned NOT NULL COMMENT 'token数',
  `creator` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '创建人',
  `ctime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`id`),
  KEY `idx_tenant_id` (`tenant_id`),
  KEY `idx_role` (`role`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='对话记录表';


CREATE TABLE `llmops_chat_dialog` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '兑换id',
  `title` varchar(256) NOT NULL COMMENT '对话概要',
  `tenant_id` bigint(20) unsigned NOT NULL COMMENT '租户id',
  `content` json DEFAULT NULL COMMENT '对话内容',
  `creator` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '创建人',
  `operator` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '最后修改人',
  `ctime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `utime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最后修改时间',
  PRIMARY KEY (`id`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='对话概要表';


--------------------------
重新设计llmops的DDL
--------------------------

CREATE TABLE `llmops_app_config` (
    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '表的自增主键，用于唯一标识每条记录',
    `app_id` varchar(36) NOT NULL COMMENT '关联的应用ID，用于区分不同的应用',
    `model_config` json DEFAULT NULL COMMENT '存储模型相关的配置信息，以JSON格式存储',
    `memory_mode` varchar(255) NOT NULL COMMENT '记录该应用配置的记忆类型',
    `status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '表示当前应用配置的状态，初始为空字符串',
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '记录该条记录的最后更新时间',
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录该条记录的创建时间',
    PRIMARY KEY (`id`),
    KEY `idx_app_id` (`app_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='应用配置表';

CREATE TABLE `llmops_conversation` (
    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '会话自增主键',
    `conversation_id` varchar(255) NOT NULL COMMENT '会话自增主键',
    `account_id` varchar(255) NOT NULL COMMENT '用户id',
    `app_id` varchar(255) NOT NULL COMMENT '应用id',
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最后更新时间',
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    PRIMARY KEY (`id`),
    KEY `idx_account_id` (`account_id`),
    KEY `idx_app_id` (`app_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='会话表';

CREATE TABLE `llmops_message` (
    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '消息自增主键',
    `conversation_id` varchar(255) NOT NULL COMMENT '会话id，关联会话表',
    `account_id` varchar(255) NOT NULL COMMENT '用户id',
    `query` text NOT NULL COMMENT '人类输入内容',
    `answer` text NOT NULL COMMENT 'AI生成内容',
    `answer_tokens` int NOT NULL DEFAULT 0 COMMENT '消耗token数',
    `response_latency` float NOT NULL DEFAULT 0 COMMENT '响应延时',
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最后更新时间',
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    PRIMARY KEY (`id`),
    KEY `idx_conversation_id` (`conversation_id`),
    KEY `idx_account_id` (`account_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='消息表';

CREATE TABLE `llmops_account` (
    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '账号自增主键',
    `account_id` varchar(255) NOT NULL COMMENT '账号id',
    `name` varchar(255) NOT NULL COMMENT '账号名称',
    `email` varchar(255) NOT NULL COMMENT '绑定邮箱',
    `password` varchar(255) NOT NULL COMMENT '密码',
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最后更新时间',
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    PRIMARY KEY (`id`),
    KEY `idx_email` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='账号表';

CREATE TABLE `llmops_api_tool` (
    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT 'API工具自增主键',
    `account_id` varchar(255) NOT NULL COMMENT '关联的用户id',
    `provider_id` varchar(255) NOT NULL COMMENT '关联的提供者id',
    `name` varchar(255) NOT NULL COMMENT '工具名称',
    `description` text NOT NULL COMMENT '工具描述',
    `url` varchar(255) NOT NULL COMMENT '工具API地址',
    `method` varchar(255) NOT NULL COMMENT '调用方法',
    `parameters` json NOT NULL COMMENT '工具参数',
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最后更新时间',
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    PRIMARY KEY (`id`),
    KEY `idx_account_id` (`account_id`),
    KEY `idx_provider_id` (`provider_id`),
    KEY `idx_name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='API工具表';

CREATE TABLE `llmops_api_tool_provider` (
    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT 'API工具提供者自增主键',
    `provider_id` varchar(255) NOT NULL COMMENT '工具提供商唯一标识', 
    `account_id` varchar(255) NOT NULL COMMENT '关联的用户id',
    `name` varchar(255) NOT NULL COMMENT '提供商名称',
    `icon` varchar(255) NOT NULL COMMENT '提供商图标',
    `description` text NOT NULL COMMENT '提供商描述',
    `openapi_schema` json NOT NULL COMMENT '规范描述',
    `headers` json NOT NULL COMMENT '提供商对应的请求头',
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最后更新时间',
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    PRIMARY KEY (`id`),
    KEY `idx_account_id` (`account_id`),
    KEY `idx_name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='API工具提供者表';

CREATE TABLE `llmops_app` (
    `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增主键',
    `app_id` varchar(255) NOT NULL COMMENT 'AI应用唯一标识',
    `account_id` varchar(255) NOT NULL COMMENT '账号id',
    `published_app_config_id` varchar(255) NULL COMMENT '已发布配置id',
    `drafted_app_config_id` varchar(255) NULL COMMENT '草稿配置id',
    `debug_conversion_id` varchar(255) NOT NULL COMMENT '调试会话id',
    `name` varchar(255) NOT NULL COMMENT '应用名称',
    `icon` varchar(255) NOT NULL COMMENT '应用图标',
    `description` text NOT NULL COMMENT '应用描述',
    `status` tinyint(4) NOT NULL DEFAULT '1' COMMENT '应用状态',
    `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '最后更新时间',
    `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    PRIMARY KEY (`id`),
    KEY `idx_account_id` (`account_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='AI应用表';

================
File: llmops-dao/src/main/resources/mapper/LlmOpsApiToolDOMapper.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emcikem.llm.dao.mapper.LlmOpsApiToolDOMapper">
  <resultMap id="BaseResultMap" type="com.emcikem.llm.dao.entity.LlmOpsApiToolDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="provider_id" jdbcType="VARCHAR" property="providerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.emcikem.llm.dao.entity.LlmOpsApiToolDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="parameters" jdbcType="LONGVARCHAR" property="parameters" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    id, account_id, provider_id, name, url, method, updated_at, created_at, parameters
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    description, parameters
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolDOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_api_tool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from llmops_api_tool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_api_tool
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_api_tool
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolDOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_api_tool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_api_tool (id, account_id, provider_id, 
      name, url, method, 
      updated_at, created_at, description, 
      parameters)
    values (#{id,jdbcType=BIGINT}, #{accountId,jdbcType=VARCHAR}, #{providerId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}, 
      #{parameters,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_api_tool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="providerId != null">
        provider_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="parameters != null">
        parameters,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="parameters != null">
        #{parameters,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select count(*) from llmops_api_tool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null">
        provider_id = #{record.providerId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.parameters != null">
        parameters = #{record.parameters,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool
    set id = #{record.id,jdbcType=BIGINT},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR},
      parameters = #{record.parameters,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool
    set id = #{record.id,jdbcType=BIGINT},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        provider_id = #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="parameters != null">
        parameters = #{parameters,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool
    set account_id = #{accountId,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR},
      parameters = #{parameters,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool
    set account_id = #{accountId,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>

================
File: llmops-dao/src/main/resources/mapper/LlmOpsApiToolProviderDOMapper.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emcikem.llm.dao.mapper.LlmOpsApiToolProviderDOMapper">
  <resultMap id="BaseResultMap" type="com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="provider_id" jdbcType="VARCHAR" property="providerId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="openapi_schema" jdbcType="LONGVARCHAR" property="openapiSchema" />
    <result column="headers" jdbcType="LONGVARCHAR" property="headers" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    id, provider_id, account_id, name, icon, updated_at, created_at, openapi_schema, headers
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    description, openapi_schema, headers
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolProviderDOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_api_tool_provider
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolProviderDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from llmops_api_tool_provider
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_api_tool_provider
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_api_tool_provider
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolProviderDOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_api_tool_provider
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_api_tool_provider (id, provider_id, account_id,
      name, icon, updated_at,
      created_at, description, openapi_schema,
      headers)
    values (#{id,jdbcType=BIGINT}, #{providerId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP},
      #{createdAt,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}, #{openapiSchema,jdbcType=LONGVARCHAR},
      #{headers,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_api_tool_provider
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="providerId != null">
        provider_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="openapiSchema != null">
        openapi_schema,
      </if>
      <if test="headers != null">
        headers,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="openapiSchema != null">
        #{openapiSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="headers != null">
        #{headers,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsApiToolProviderDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select count(*) from llmops_api_tool_provider
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool_provider
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.providerId != null">
        provider_id = #{record.providerId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.openapiSchema != null">
        openapi_schema = #{record.openapiSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.headers != null">
        headers = #{record.headers,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool_provider
    set id = #{record.id,jdbcType=BIGINT},
      provider_id = #{record.providerId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR},
      openapi_schema = #{record.openapiSchema,jdbcType=LONGVARCHAR},
      headers = #{record.headers,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool_provider
    set id = #{record.id,jdbcType=BIGINT},
      provider_id = #{record.providerId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool_provider
    <set>
      <if test="providerId != null">
        provider_id = #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="openapiSchema != null">
        openapi_schema = #{openapiSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="headers != null">
        headers = #{headers,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool_provider
    set provider_id = #{providerId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR},
      openapi_schema = #{openapiSchema,jdbcType=LONGVARCHAR},
      headers = #{headers,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_api_tool_provider
    set provider_id = #{providerId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>

================
File: llmops-dao/src/main/resources/mapper/LlmOpsChatDialogDOMapper.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emcikem.llm.dao.mapper.LlmOpsChatDialogDOMapper">
  <resultMap id="BaseResultMap" type="com.emcikem.llm.dao.entity.LlmOpsChatDialogDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.emcikem.llm.dao.entity.LlmOpsChatDialogDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    id, title, tenant_id, creator, operator, ctime, utime
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.emcikem.llm.dao.example.LlmOpsChatDialogDOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_dialog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsChatDialogDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from llmops_chat_dialog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_dialog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_chat_dialog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsChatDialogDOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_chat_dialog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatDialogDO" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_chat_dialog (id, title, tenant_id, 
      creator, operator, ctime, 
      utime, content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{tenantId,jdbcType=BIGINT}, 
      #{creator,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{utime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatDialogDO" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_chat_dialog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsChatDialogDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select count(*) from llmops_chat_dialog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_dialog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_dialog
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_dialog
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatDialogDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_dialog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatDialogDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_dialog
    set title = #{title,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatDialogDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_dialog
    set title = #{title,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>

================
File: llmops-dao/src/main/resources/mapper/LlmOpsChatHistoryDOMapper.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emcikem.llm.dao.mapper.LlmOpsChatHistoryDOMapper">
  <resultMap id="BaseResultMap" type="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="dialog_id" jdbcType="BIGINT" property="dialogId" />
    <result column="token" jdbcType="BIGINT" property="token" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    id, role, tenant_id, dialog_id, token, creator, ctime
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.emcikem.llm.dao.example.LlmOpsChatHistoryDOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsChatHistoryDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_chat_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsChatHistoryDOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    delete from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_chat_history (id, role, tenant_id, 
      dialog_id, token, creator, 
      ctime, content)
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=TINYINT}, #{tenantId,jdbcType=BIGINT}, 
      #{dialogId,jdbcType=BIGINT}, #{token,jdbcType=BIGINT}, #{creator,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into llmops_chat_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="dialogId != null">
        dialog_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=TINYINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="dialogId != null">
        #{dialogId,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        #{token,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.emcikem.llm.dao.example.LlmOpsChatHistoryDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select count(*) from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=TINYINT},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=BIGINT},
      </if>
      <if test="record.dialogId != null">
        dialog_id = #{record.dialogId,jdbcType=BIGINT},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_history
    set id = #{record.id,jdbcType=BIGINT},
      role = #{record.role,jdbcType=TINYINT},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      dialog_id = #{record.dialogId,jdbcType=BIGINT},
      token = #{record.token,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_history
    set id = #{record.id,jdbcType=BIGINT},
      role = #{record.role,jdbcType=TINYINT},
      tenant_id = #{record.tenantId,jdbcType=BIGINT},
      dialog_id = #{record.dialogId,jdbcType=BIGINT},
      token = #{record.token,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_history
    <set>
      <if test="role != null">
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="dialogId != null">
        dialog_id = #{dialogId,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_history
    set role = #{role,jdbcType=TINYINT},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      dialog_id = #{dialogId,jdbcType=BIGINT},
      token = #{token,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update llmops_chat_history
    set role = #{role,jdbcType=TINYINT},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      dialog_id = #{dialogId,jdbcType=BIGINT},
      token = #{token,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>

================
File: llmops-dao/src/main/resources/default-comment.ftl
================
<?xml version="1.0" encoding="UTF-8"?>
<template>
    <!-- #############################################################################################################
    /**
     * This method is called to add a file level comment to a generated java file. This method could be used to add a
     * general file comment (such as a copyright notice). However, note that the Java file merge function in Eclipse
     * does not deal with this comment. If you run the generator repeatedly, you will only retain the comment from the
     * initial run.
     * <p>
     *
     * The default implementation does nothing.
     *
     * @param compilationUnit
     *            the compilation unit
     */
    -->
    <comment ID="addJavaFileComment"></comment>

    <!-- #############################################################################################################
    /**
     * This method should add a suitable comment as a child element of the specified xmlElement to warn users that the
     * element was generated and is subject to regeneration.
     *
     * @param xmlElement
     *            the xml element
     */
    -->
    <comment ID="addComment"><![CDATA[
<!--
  WARNING - ${mgb}
  This element is automatically generated by MyBatis Generator, do not modify.
  @project https://github.com/itfsw/mybatis-generator-plugin
-->
        ]]></comment>

    <!-- #############################################################################################################
    /**
     * This method is called to add a comment as the first child of the root element. This method could be used to add a
     * general file comment (such as a copyright notice). However, note that the XML file merge function does not deal
     * with this comment. If you run the generator repeatedly, you will only retain the comment from the initial run.
     * <p>
     *
     * The default implementation does nothing.
     *
     * @param rootElement
     *            the root element
     */
    -->
    <comment ID="addRootComment"></comment>

    <!-- #############################################################################################################
    /**
     * This method should add a Javadoc comment to the specified field. The field is related to the specified table and
     * is used to hold the value of the specified column.
     * <p>
     *
     * <b>Important:</b> This method should add a  nonstandard JavaDoc tag "@mbg.generated" to the comment. Without
     * this tag, the Eclipse based Java merge feature will fail.
     *
     * @param field
     *            the field
     * @param introspectedTable
     *            the introspected table
     * @param introspectedColumn
     *            the introspected column
     */
    -->
    <comment ID="addFieldComment"><![CDATA[
<#if introspectedColumn??>
/**
    <#if introspectedColumn.remarks?? && introspectedColumn.remarks != ''>
 * Database Column Remarks:
        <#list introspectedColumn.remarks?split("\n") as remark>
 *   ${remark}
        </#list>
    </#if>
 *
 * ${mgb}
 */
<#else>
/**
 * ${mgb}
 */
</#if>
    ]]></comment>

    <!-- #############################################################################################################
    /**
     * Adds a comment for a model class.  The Java code merger should
     * be notified not to delete the entire class in case any manual
     * changes have been made.  So this method will always use the
     * "do not delete" annotation.
     *
     * Because of difficulties with the Java file merger, the default implementation
     * of this method should NOT add comments.  Comments should only be added if
     * specifically requested by the user (for example, by enabling table remark comments).
     *
     * @param topLevelClass
     *            the top level class
     * @param introspectedTable
     *            the introspected table
     */
    -->
    <comment ID="addModelClassComment"><![CDATA[
/**
<#if introspectedTable.remarks?? && introspectedTable.remarks != ''>
 * Database Table Remarks:
<#list introspectedTable.remarks?split("\n") as remark>
 *   ${remark}
</#list>
</#if>
 *
 * ${mgb} do_not_delete_during_merge
 */
        ]]></comment>

    <!-- #############################################################################################################
    /**
     * Adds the inner class comment.
     *
     * @param innerClass
     *            the inner class
     * @param introspectedTable
     *            the introspected table
     * @param markAsDoNotDelete
     *            the mark as do not delete
     */
    -->
    <comment ID="addClassComment"><![CDATA[
/**
 *
 * ${mgb}<#if markAsDoNotDelete?? && markAsDoNotDelete> do_not_delete_during_merge</#if>
 */
        ]]></comment>

    <!-- #############################################################################################################
    /**
     * Adds the enum comment.
     *
     * @param innerEnum
     *            the inner enum
     * @param introspectedTable
     *            the introspected table
     */
    -->
    <comment ID="addEnumComment"><![CDATA[
/**
 *
 * ${mgb}
 */
        ]]></comment>

    <!-- #############################################################################################################
    /**
     * Adds the interface comment.
     *
     * @param innerInterface
     *            the inner interface
     * @param introspectedTable
     *            the introspected table
     */
    -->
    <comment ID="addInterfaceComment"><![CDATA[
/**
 *
 * ${mgb}
 */
        ]]></comment>

    <!-- #############################################################################################################
    /**
     * Adds the getter comment.
     *
     * @param method
     *            the method
     * @param introspectedTable
     *            the introspected table
     * @param introspectedColumn
     *            the introspected column
     */
    -->
    <comment ID="addGetterComment"><![CDATA[
<#if introspectedColumn??>
/**
 *
 * ${mgb}
 */
<#else>
/**
 * This method was generated by MyBatis Generator.
 * This method returns the value of the field ${method.name?replace("get","")?replace("is", "")?uncap_first}
 *
 * @return the value of field ${method.name?replace("get","")?replace("is", "")?uncap_first}
 *
 * ${mgb}
 * @project https://github.com/itfsw/mybatis-generator-plugin
 */
</#if>
        ]]></comment>

    <!-- #############################################################################################################
    /**
     * Adds the setter comment.
     *
     * @param method
     *            the method
     * @param introspectedTable
     *            the introspected table
     * @param introspectedColumn
     *            the introspected column
     */
    -->
    <comment ID="addSetterComment"><![CDATA[
<#if introspectedColumn??>
/**
 *
 * ${mgb}
 */
<#else>
/**
 *
 * ${mgb}
 */
</#if>
        ]]></comment>

    <!-- #############################################################################################################
    /**
     * Adds the general method comment.
     *
     * @param method
     *            the method
     * @param introspectedTable
     *            the introspected table
     */
    -->
    <comment ID="addGeneralMethodComment"><![CDATA[
/**
 *
 * ${mgb}
 */
        ]]></comment>
</template>

================
File: llmops-dao/src/main/resources/generatorConfig.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="mysqlTables" targetRuntime="MyBatis3">
        <!-- MySQL分页插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.LimitPlugin">
            <!-- 通过配置startPage影响Example中的page方法开始分页的页码，默认分页从0开始 -->
            <property name="startPage" value="0"/>
        </plugin>
        <!-- Example Criteria 增强插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.ExampleEnhancedPlugin">
            <!-- 是否支持已经过时的andIf方法（推荐使用when代替），默认支持 -->
            <property name="enableAndIf" value="true"/>
        </plugin>
        <!-- Example 目标包修改插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.ExampleTargetPlugin">
            <!-- 修改Example类生成到目标包下 -->
            <property name="targetPackage" value="com.emcikem.llm.dao.example"/>
        </plugin>
        <!-- Lombok插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.LombokPlugin">
            <!-- @Data 默认开启,同时插件会对子类自动附加@EqualsAndHashCode(callSuper = true)，@ToString(callSuper = true) -->
            <property name="@Data" value="true"/>
            <!-- @Builder 必须在 Lombok 版本 >= 1.18.2 的情况下开启，对存在继承关系的类自动替换成@SuperBuilder -->
            <property name="@Builder" value="false"/>
            <!-- @NoArgsConstructor 和 @AllArgsConstructor 使用规则和Lombok一致 -->
            <property name="@AllArgsConstructor" value="false"/>
            <property name="@NoArgsConstructor" value="false"/>
            <!-- @Getter、@Setter、@Accessors 等使用规则参见官方文档 -->
            <property name="@Accessors(chain = true)" value="false"/>
            <!-- 临时解决IDEA工具对@SuperBuilder的不支持问题，开启后(默认未开启)插件在遇到@SuperBuilder注解时会调用ModelBuilderPlugin来生成相应的builder代码 -->
            <property name="supportSuperBuilderForIdea" value="false"/>
        </plugin>
        <!-- 自定义注释插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.CommentPlugin">
            <!-- 自定义模板路径 -->
            <property name="template" value="src/main/resources/default-comment.ftl" />
        </plugin>

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false"/>
            <property name="suppressDate" value="true"/>
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/llmops"
                        userId="root"
                        password=""
                        >
        </jdbcConnection>

        <javaModelGenerator targetPackage="com.emcikem.llm.dao.entity" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <javaClientGenerator type="XMLMAPPER" targetPackage="com.emcikem.llm.dao.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <table tableName="llmops_chat_history" domainObjectName="LlmOpsChatHistoryDO">
            <columnOverride column="role" property="role" javaType="java.lang.Integer" />
        </table>
        <table tableName="llmops_chat_dialog" domainObjectName="LlmOpsChatDialogDO">
        </table>
        <table tableName="llmops_api_tool_provider" domainObjectName="LlmOpsApiToolProviderDO">
        </table>
        <table tableName="llmops_api_tool" domainObjectName="LlmOpsApiToolDO">
        </table>
    </context>
</generatorConfiguration>

================
File: llmops-dao/pom.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.emcikem</groupId>
        <artifactId>llmops</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>llmops-dao</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- mybatis-generator 自动代码插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.7</version>
                <configuration>
                    <!-- 配置文件 -->
                    <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
                    <!-- 允许移动和修改 -->
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
                <dependencies>
                    <!-- jdbc 依赖 -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>8.0.26</version>
                    </dependency>
                    <dependency>
                        <groupId>com.itfsw</groupId>
                        <artifactId>mybatis-generator-plugin</artifactId>
                        <version>1.3.10</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/factory/AbsAssistantBuildService.java
================
package com.emcikem.llm.service.aiservice.factory;

import com.emcikem.llm.common.enums.ChatModelEnum;
import com.emcikem.llm.service.aiservice.Assistant;
import com.emcikem.llm.service.aiservice.AssistantTools;
import com.emcikem.llm.service.aiservice.PersistentChatMemoryStore;
import com.google.common.collect.Lists;
import dev.langchain4j.memory.chat.ChatMemoryProvider;
import dev.langchain4j.memory.chat.MessageWindowChatMemory;
import dev.langchain4j.memory.chat.TokenWindowChatMemory;
import dev.langchain4j.model.chat.ChatLanguageModel;
import dev.langchain4j.model.openai.OpenAiChatModel;
import dev.langchain4j.model.openai.OpenAiTokenizer;
import dev.langchain4j.service.AiServices;
import jakarta.annotation.Resource;

/**
 * Create with Emcikem on 2025/1/20
 *
 * @author Emcikem
 * @version 1.0.0
 */
public abstract class AbsAssistantBuildService implements AssistantBuildService {

    @Resource
    private PersistentChatMemoryStore persistentChatMemoryStore;

    @Resource
    private AssistantTools assistantTools;
    @Resource
    private OpenAiTokenizer openAiTokenizer;
    @Override
    public String getModelName() {
        return getChatModelEnum().getModelName();
    }

    @Override
    public Assistant getAssistant() {
        ChatMemoryProvider chatMemoryProvider = memoryId -> TokenWindowChatMemory.builder()
                .id(memoryId)
                .maxTokens(1000, openAiTokenizer)
                .chatMemoryStore(persistentChatMemoryStore)
                .build();

        ChatLanguageModel model = getLanguageModel();

        return AiServices.builder(Assistant.class)
                .chatLanguageModel(model)
                .chatMemoryProvider(chatMemoryProvider)
                .tools(assistantTools)
                .build();
    }

    protected ChatLanguageModel getLanguageModel() {
        return OpenAiChatModel.builder()
                .baseUrl(getChatModelEnum().getBaseUrl())
                .apiKey(getApiKey())
                .modelName(getChatModelEnum().getModelName())
                .build();
    }

    abstract String getApiKey();

    abstract ChatModelEnum getChatModelEnum();
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/factory/AssistantBuildService.java
================
package com.emcikem.llm.service.aiservice.factory;

import com.emcikem.llm.service.aiservice.Assistant;

/**
 * Create with Emcikem on 2025/1/20
 *
 * @author Emcikem
 * @version 1.0.0
 */
public interface AssistantBuildService {

    Assistant getAssistant();

    String getModelName();
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/factory/AssistantFactory.java
================
package com.emcikem.llm.service.aiservice.factory;

import com.emcikem.llm.service.aiservice.Assistant;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * Create with Emcikem on 2025/1/20
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Service
public class AssistantFactory {

    private final Map<String, Assistant> assistantMap;

    @Autowired
    public AssistantFactory(List<AssistantBuildService> assistantBuildServices) {
        this.assistantMap = assistantBuildServices.stream()
                .collect(Collectors
                        .toMap(AssistantBuildService::getModelName, AssistantBuildService::getAssistant, (a, b) -> a));
    }

    public Assistant getAssistant(String modelName) {
        return assistantMap.get(modelName);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/factory/DeepSeekBuildServiceImpl.java
================
package com.emcikem.llm.service.aiservice.factory;

import com.emcikem.llm.common.enums.ChatModelEnum;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

/**
 * Create with Emcikem on 2025/1/20
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Service
public class DeepSeekBuildServiceImpl extends AbsAssistantBuildService {

    @Value("${langchain4j.open-ai.chat-model.api-key}")
    private String apiKey;

    @Override
    ChatModelEnum getChatModelEnum() {
        return ChatModelEnum.DEEP_SEEK;
    }

    @Override
    String getApiKey() {
        return this.apiKey;
    }


}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/factory/KimiBuildServiceImpl.java
================
package com.emcikem.llm.service.aiservice.factory;

import com.emcikem.llm.common.enums.ChatModelEnum;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

/**
 * Create with Emcikem on 2025/1/20
 *
 * @author Emcikem
 * @version 1.0.0
 */
//@Service
//public class KimiBuildServiceImpl extends AbsAssistantBuildService {
//
//    @Value("${langchain4j.open-ai.chat-model.kimi-api-key}")
//    private String apiKey;
//
//    @Override
//    ChatModelEnum getChatModelEnum() {
//        return ChatModelEnum.KIMI;
//    }
//
//    @Override
//    String getApiKey() {
//        return this.apiKey;
//    }
//
//
//}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/tools/crawler/CommonCrawler.java
================
package com.emcikem.llm.service.aiservice.tools.crawler;

import com.emcikem.llm.service.constant.LLMOpsConstant;
import com.emcikem.llm.service.util.CrawlerUtil;
import org.jetbrains.annotations.NotNull;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URLEncoder;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class CommonCrawler {
    public static String crawlContent(String url, boolean isPersist) {
        String rootHtml = "";
        try {
            Document doc = CrawlerUtil.getDocument(url);
            rootHtml = Jsoup.clean(doc.html(), CrawlerUtil.SAFELIST);

            if (isPersist) {
                Path filePath = Paths.get(Constant.FILE_PATH.toString(), URLEncoder.encode(url, "utf-8") + ".html");
                try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath.toFile()))) {
                    writer.write(rootHtml);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
//        System.out.println("CommonCrawler: " + rootHtml);
        return rootHtml;
    }

    public static List<String> crawlTreeContent(String url, boolean isPersist) {
        List<String> htmls = new ArrayList<>();
        if (!url.startsWith("https://")) return htmls;
        try {
            Document doc = CrawlerUtil.getDocument(url);
            String rootHtml = doc.html();
            htmls.add(Jsoup.clean(rootHtml, CrawlerUtil.SAFELIST));
            if (isPersist) {
                Path filePath = Paths.get(Constant.FILE_PATH.toString(), URLEncoder.encode(url, "utf-8") + ".html");
                try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath.toFile()))) {
                    writer.write(rootHtml);
                }
            }
            crawlTreeUrls(doc, 2).forEach(item -> {
//                System.out.println(item);
                htmls.add(crawlContent(item, isPersist));
            });
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
//        System.out.println(htmls);
        return htmls;
    }

    @NotNull
    public static List<String> crawlTreeUrls(String url, int limit) {
        List<String> list = new ArrayList<>();
        if (!url.startsWith("https://")) return list;
        try {
            Document doc = CrawlerUtil.getDocument(url);
            list.add(url);
            list = crawlTreeUrls(doc, limit).collect(Collectors.toList());
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        return list;
    }

    @NotNull
    private static Stream<String> crawlTreeUrls(Document doc, int limit) {
        return doc.select("a[href]").stream()
                .map(link -> link.attr("href"))
                .filter(item -> item.startsWith("https://") && CrawlerUtil.IGNORE_URLS.stream().noneMatch(item::contains))
                .distinct()
                .limit(limit);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/tools/crawler/ConfigUtil.java
================
package com.emcikem.llm.service.aiservice.tools.crawler;

import com.emcikem.llm.service.constant.LLMOpsConstant;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import org.jetbrains.annotations.NotNull;
import org.yaml.snakeyaml.Yaml;

import java.io.File;
import java.io.FileReader;
import java.io.InputStream;
import java.util.*;
import java.util.stream.Collectors;

public class ConfigUtil {
    private static final String yamlFilePath = "custom-config.yml";
    private static final Gson gson = new Gson();
    private static JsonObject configJson = new JsonObject();

    static {
        loadDefaultConfig();
    }

    private static void loadDefaultConfig() {
        Yaml yaml = new Yaml();
        try (InputStream in = ConfigUtil.class.getClassLoader().getResourceAsStream(yamlFilePath)) {
            Map<String, Object> config = yaml.load(in);
            String json = gson.toJson(config);
            configJson = gson.fromJson(json, JsonObject.class);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void updateConfigJson(JsonObject oldJson, JsonObject newJson) {
        for (String key : newJson.keySet()) {
            JsonElement newVal = newJson.get(key);
            if (oldJson.has(key) && oldJson.get(key).isJsonObject() && newVal.isJsonObject()) {
                updateConfigJson(oldJson.getAsJsonObject(key), newVal.getAsJsonObject());
            } else {
                oldJson.add(key, newVal);
            }
        }
    }

    public static void loadCustomConfig(String pluginFolder) {
        Yaml yaml = new Yaml();
        String configFilePath = String.format("plugins/%s/%s", pluginFolder, yamlFilePath);
        File configFile = new File(Constant.USER_DIR, configFilePath);
        try (FileReader reader = new FileReader(configFile)) {
            Map<String, Object> config = yaml.load(reader);
            String json = gson.toJson(config);
            JsonObject customConfigJson = gson.fromJson(json, JsonObject.class);
            updateConfigJson(configJson, customConfigJson);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static <T> List<T> getConfigArr(@NotNull String key, Class<T> clazz) {
        try {
            String[] path = key.split("\\.");
            int index = 0;
            JsonObject curJson = configJson;
            while (index < path.length - 1) {
                curJson = curJson.getAsJsonObject(path[index]);
                if (curJson == null) {
                    return null;
                }
                index++;
            }
            String leaf = path[path.length - 1];
            JsonElement leafElement = curJson.get(leaf);
            if (leafElement == null) {
                return null;
            }
            if (leafElement.isJsonArray()) {
                JsonArray jsonArray = leafElement.getAsJsonArray();
                return jsonArray
                        .asList().stream()
                        .map(element -> gson.fromJson(element, clazz))
                        .collect(Collectors.toList());
            } else {
                return Collections.singletonList(gson.fromJson(leafElement, clazz));
            }
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public static List<String> getConfigArr(@NotNull String key) {
        return Optional.ofNullable(getConfigArr(key, Object.class)).orElse(new ArrayList<>()).stream()
                .map(String::valueOf)
                .collect(Collectors.toList());
    }

    public static <T> T getConfig(@NotNull String key, Class<T> clazz, T defaultValue) {
        List<T> list = getConfigArr(key, clazz);
        if (list == null || list.isEmpty()) {
            return defaultValue;
        }
        return list.get(0);
    }

    public static <T> T getConfig(@NotNull String key, Class<T> clazz) {
        return getConfig(key, clazz, null);
    }

    public static String getConfig(@NotNull String key) {
        return getConfig(key, String.class);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/tools/crawler/IpPoolCrawler.java
================
package com.emcikem.llm.service.aiservice.tools.crawler;

import cn.hutool.core.collection.CollectionUtil;
import com.emcikem.llm.service.util.CrawlerUtil;
import com.emcikem.llm.service.util.FileUtil;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.reflect.TypeToken;
import lombok.extern.slf4j.Slf4j;
import org.jetbrains.annotations.NotNull;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.util.CollectionUtils;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

import static com.emcikem.llm.service.constant.LLMOpsConstant.FILE_PATH;

@Slf4j
public class IpPoolCrawler {
    private static final Path ipPoolPath = Paths.get(FILE_PATH.toString(), "ip_pool.json");
    private static final int timeout = 1000;
    private static final List<String> urls = ConfigUtil.getConfigArr("ipPool.urls");
    private static final Gson gson = new Gson();

    private boolean checkHealth(IpPort ipPort) {
        try {
            Jsoup.connect("https://www.baidu.com")
                    .userAgent(CrawlerUtil.getUserAgent())
                    .proxy(ipPort.toProxy())
                    .timeout(timeout)
                    .get();
            return true;
        } catch (Exception e) {
//            e.printStackTrace();
            return false;
        }
    }

    public List<IpPort> recheck(List<IpPort> ipPorts) {
        List<IpPort> result = ipPorts.stream()
                .distinct()
                .filter(this::checkHealth)
                .collect(Collectors.toList());
        FileUtil.writeJson(ipPoolPath, gson.toJson(result));
        return result;
    }

    public List<IpPort> refresh() {
        List<IpPort> ipPorts = new ArrayList<>();
        ipPorts.addAll(getIpPool0());
        ipPorts.addAll(getIpPool1());
        ipPorts.addAll(getIpPool2());
        ipPorts.addAll(getIpPool3());
        List<IpPort> cache = CrawlerUtil.IP_PORT_THREAD_LOCAL.get();
        if (cache == null || cache.isEmpty()) {
            cache = load();
        }
        ipPorts.addAll(cache);
        log.info("[IpPoolCrawler] refresh, size: " + ipPorts.size());
        return recheck(ipPorts);
    }

    public List<IpPort> load() {
        try {
            String json = FileUtil.readJson(ipPoolPath);
            return gson.fromJson(json, new TypeToken<List<IpPort>>() {}.getType());
        } catch (Exception e) {
            e.printStackTrace();
        }
        return new ArrayList<>();
    }

    private List<IpPort> getIpPool0() {
        if (CollectionUtil.isNotEmpty(urls)) {
            try {
                String url = urls.get(0);
                Document doc = CrawlerUtil.getDocument(url);
                String html = doc.select("body").html();
                String substring = "{" + html.substring(html.indexOf("\"TOTAL\":"));

                JsonObject jsonObject = gson.fromJson(substring, JsonObject.class);
                JsonArray lista = jsonObject.getAsJsonArray("LISTA");

                return gson.fromJson(lista, new TypeToken<List<IpPort>>() {}.getType());
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return new ArrayList<>();
    }

    private List<IpPort> getIpPool1() {
        if (CollectionUtil.isNotEmpty(urls)) {
            try {
                String url = urls.get(1);
                Document doc = CrawlerUtil.getDocument(url);
                String html = doc.select("body").html();
                return getIpPortsByPattern(html);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return new ArrayList<>();
    }

    private List<IpPort> getIpPool2() {
        if (CollectionUtil.isNotEmpty(urls)) {
            try {
                String url = urls.get(2);
                Document doc = CrawlerUtil.getDocument(url);
                String html = doc.select("body > script").html();
                return getIpPortsByPattern(html);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return new ArrayList<>();
    }

    private List<IpPort> getIpPool3() {
        if (CollectionUtil.isNotEmpty(urls)) {
            try {
                String url = urls.get(3);
                Document doc = CrawlerUtil.getDocument(url);
                Element lastPageLink = doc.select("a:containsOwn(尾页)").first();
                if (lastPageLink != null) {
                    String lastHref = lastPageLink.attr("href");
                    String seperator = "page=";
                    if (lastHref.contains(seperator)) {
                        int totalPage = Integer.parseInt(lastHref.split(seperator)[1]);
                        List<IpPort> ipPorts = new ArrayList<>();
                        for (int page = 1; page <= totalPage; page++) {
                            if (page > 2) {
                                doc = CrawlerUtil.getDocument(url + lastHref.split(seperator)[0] + seperator + page);
                            }
                            ipPorts.addAll(getIpPortsByTable(doc));
                        }
                        return ipPorts;
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return new ArrayList<>();
    }

    private List<IpPort> getIpPool4() {
        if (CollectionUtil.isNotEmpty(urls)) {
            try {
                String url = urls.get(4) + "inha";
                Document doc = CrawlerUtil.getDocument(url);
                Elements links = doc.select("a");
                System.out.println(doc.html());
                System.out.println(links.html());
                System.out.println(getIpPortsByTable(doc));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return new ArrayList<>();
    }

    @NotNull
    private static List<IpPort> getIpPortsByPattern(String html) {
        String regex = "\\d{1,3}(\\.\\d{1,3}){3}:\\d{1,5}";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(html);

        List<IpPort> ipList = new ArrayList<>();
        while (matcher.find()) {
            String match = matcher.group();
            String[] raw = match.split(":");
            ipList.add(new IpPort(raw[0], Integer.parseInt(raw[1])));
        }
        return ipList;
    }

    private static List<IpPort> getIpPortsByTable(Document doc) {
        List<IpPort> ipPorts = new ArrayList<>();
        Element tbody = doc.select("tbody").first();
        if (tbody != null) {
            Elements rows = tbody.select("tr");
            for (Element row : rows) {
                Element firstTd = row.select("td").first();
                Element secondTd = row.select("td").get(1);
                if (firstTd != null && secondTd != null) {
                    ipPorts.add(new IpPort(firstTd.text(), Integer.parseInt(secondTd.text())));
                }
            }
        }
        return ipPorts;
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/tools/crawler/IpPort.java
================
package com.emcikem.llm.service.aiservice.tools.crawler;

import lombok.AllArgsConstructor;
import lombok.Data;

import java.net.InetSocketAddress;
import java.net.Proxy;

@Data
@AllArgsConstructor
public class IpPort {
    private String ip;

    private Integer port;

    public Proxy toProxy() {
        return new Proxy(Proxy.Type.HTTP, new InetSocketAddress(this.ip, this.port));
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/tools/crawler/SearchCrawler.java
================
package com.emcikem.llm.service.aiservice.tools.crawler;

import com.emcikem.llm.service.constant.LLMOpsConstant;
import com.emcikem.llm.service.util.CommonUtil;
import com.emcikem.llm.service.util.CrawlerUtil;
import com.emcikem.llm.service.util.FileUtil;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.stream.Collectors;

import static com.emcikem.llm.service.constant.LLMOpsConstant.SEARCH_FAILED;

public class SearchCrawler {

    public static final Map<String, String> searchEngines = new HashMap<String, String>() {{
//        put("google", "https://www.google.com/search?q=");
        put("baidu", "https://www.baidu.com/s?wd=");
        put("sogou", "https://www.sogou.com/web?query=");
        put("360", "https://www.so.com/s?q=");
        put("bing", "https://cn.bing.com/search?q=");
        put("quark", "https://quark.sm.cn/s?safe=1&q=");
    }};

    public static final List<String> failureMsg = Arrays.asList(
            "百度安全验证",
            "验证码",
            "操作过于频繁",
            "操作太频繁"
    );

    public static Map<String, Long> failureCache = new ConcurrentHashMap<>();

    public static String crawlFromEngine(String engine, String keyword) {
        String content = "";
        Map<String, String> engines = getValidEngines(failureCache);
        String[] keys = engines.keySet().toArray(new String[0]);
        if (keys.length == 0) {
            return content;
        }
        String webUrl = engines.get(engine);
        if (webUrl == null) {
            engine = keys[CommonUtil.randomIndex(keys.length)];
            webUrl = engines.get(engine);
        }
        content = CommonCrawler.crawlContent(webUrl + keyword, false);
//        System.out.println("crawlContent:\n" + content);
        if (failureMsg.stream().anyMatch(content::contains)) {
            failureCache.put(engine, System.currentTimeMillis());
            content = SEARCH_FAILED;
        }
        return content;
    }

    private static Map<String, String> getValidEngines(Map<String, Long> filter) {
        long current = System.currentTimeMillis();
        return SearchCrawler.searchEngines.entrySet()
                .stream()
                .filter(entry -> current - filter.getOrDefault(entry.getKey(), current) < 60 * 1000)
                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));
    }

    public static void main(String[] args) {
        FileUtil.mkDir(Constant.FILE_PATH);
        IpPoolCrawler ipPoolCrawler = new IpPoolCrawler();
        ipPoolCrawler.refresh();
        CrawlerUtil.IP_PORT_THREAD_LOCAL.set(ipPoolCrawler.load());
        try {
            System.out.println(crawlFromEngine("sogou", "今日双子座运势"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/tools/crawler/WeiBoCrawler.java
================
package com.emcikem.llm.service.aiservice.tools.crawler;

import cn.hutool.http.HttpUtil;
import com.emcikem.llm.service.util.CrawlerUtil;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import lombok.extern.slf4j.Slf4j;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import okhttp3.ResponseBody;
import org.jetbrains.annotations.NotNull;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@Slf4j
public class WeiBoCrawler {
    private static final Gson gson = new Gson();

    public static String crawlWeiboTops() {
        String html = "";
        try {
            String tid = crawlWeiboTid();
            String cookie = crawlWeiBoCookie(tid);

            OkHttpClient httpClient = new OkHttpClient();
            String userAgent = CrawlerUtil.getUserAgent();
            Request request = new Request.Builder()
                    .url("https://s.weibo.com/top/summary?cate=realtimehot")
                    .addHeader("Cookie", cookie)
                    .addHeader("User-Agent", userAgent)
                    .build();
            try (Response response = httpClient.newCall(request).execute()) {
                ResponseBody responseBody = response.body();

                if (response.isSuccessful() && responseBody != null) {
                    html = responseBody.string();
                    Document document = Jsoup.parse(html);
                    Element item = document.getElementsByTag("tbody").first();
                    if (item != null) {
                        List<String> news = item.getElementsByTag("tr").stream()
                                .map(ele -> String.format("%s (https://s.weibo.com%s)", ele.text(),
                                        ele.select("a[href]").attr("href")))
                                .filter(it -> !it.contains("javascript:void(0);"))
                                .skip(1)
                                .collect(Collectors.toList());
                        return String.join("\n", news);
                    }
                } else {
                    log.warn("Request failed");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return html;
    }

    @NotNull
    private static String crawlWeiBoCookie(String tid) {
        String subUrl = "https://passport.weibo.com/visitor/visitor";
        Map<String, Object> params2 = new HashMap<>();
        params2.put("a", "incarnate");
        params2.put("t", tid);
        params2.put("w", "3");
        params2.put("c", "100");
        params2.put("cb", "cross_domain");
        params2.put("from", "weibo");
        String str2 = HttpUtil.get(subUrl, params2, 3000);
        String resultStr = str2.substring(str2.indexOf("(") + 1, str2.indexOf(")"));
        String sub = "";
        String subp = "";
        if (!resultStr.isEmpty()) {
            JsonObject result = gson.fromJson(resultStr, JsonObject.class);
            if (result.get("retcode").getAsInt() == 20000000) {
                sub = result.getAsJsonObject("data").get("sub").getAsString();
                subp = result.getAsJsonObject("data").get("subp").getAsString();
            }
        }
        return "SUB=" + sub + ";SUBP=" + subp + ";";
    }

    private static String crawlWeiboTid() {
        String tidUrl = "https://passport.weibo.com/visitor/genvisitor";
        Map<String, Object> params = new HashMap<>();
        params.put("cb", "gen_callback");
        String str = HttpUtil.get(tidUrl, params, 3000);
        String quStr = str.substring(str.indexOf("(") + 1, str.indexOf(")"));
        String tid = "";
        if (!quStr.isEmpty()) {
            JsonObject result = gson.fromJson(quStr, JsonObject.class);
            if (result.get("retcode").getAsInt() == 20000000) {
                tid = result.getAsJsonObject("data").get("tid").getAsString();
            }
        }
        return tid;
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/tools/AiNetworkSearchServiceTools.java
================
package com.emcikem.llm.service.aiservice.tools;

import org.springframework.stereotype.Service;

@Service
public class AiNetworkSearchServiceTools {

}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/Assistant.java
================
package com.emcikem.llm.service.aiservice;

import dev.langchain4j.service.MemoryId;
import dev.langchain4j.service.SystemMessage;
import dev.langchain4j.service.UserMessage;
import dev.langchain4j.service.spring.AiService;

@AiService
public interface Assistant {

    @SystemMessage("你是一个资深的后端程序员")
    String chat(@MemoryId Long memoryId, @UserMessage String userMessage);
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/AssistantTools.java
================
package com.emcikem.llm.service.aiservice;

import dev.langchain4j.agent.tool.P;
import dev.langchain4j.agent.tool.Tool;
import jakarta.annotation.Resource;
import lombok.extern.slf4j.Slf4j;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import java.time.LocalTime;

@Slf4j
@Component
public class AssistantTools {

    /**
     * This tool is available to {@link Assistant}
     */
    @Resource
    private RestTemplate restTemplate;
    @Tool
    String currentTime() {
        return LocalTime.now().toString();
    }
    @Tool("获取城市的天气")
    String GetWhetherTool(@P("城市名") String city) {
        return "今天有龙卷风";
    }
    @Tool("运算给定数学表达式")
    String calculate(@P("表达式") String expression) {
        try {
            return String.valueOf(new javax.script.ScriptEngineManager().getEngineByName("JavaScript").eval(expression));
        } catch (Exception e) {
            return "计算失败: " + e.getMessage();
        }
    }
    @Tool("请求并返回网页内容")
    String fetchWebContent(@P("链接") String url) {
        try {
            // 设置请求头和超时
            org.springframework.http.HttpHeaders headers = new org.springframework.http.HttpHeaders();
            headers.set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36");

            org.springframework.http.HttpEntity<String> entity = new org.springframework.http.HttpEntity<>(headers);
            org.springframework.http.ResponseEntity<String> response = restTemplate.exchange(
                    url,
                    org.springframework.http.HttpMethod.GET,
                    entity,
                    String.class
            );

            String htmlContent = response.getBody();
            if (htmlContent == null || htmlContent.trim().isEmpty()) {
                return "无法获取页面内容";
            }

            // 使用Jsoup解析文档
            Document doc = Jsoup.parse(htmlContent);
            doc.select("script, style, noscript, iframe, .advertisement").remove();

            // 提取页面标题
            String pageTitle = doc.title();

            // 构建正文内容
            StringBuilder content = new StringBuilder();

            // 扩大选择器范围，包含更多可能的内容容器
            String[] selectors = {
                    "article", "main", ".content", ".article", ".post",
                    "p", "h1", "h2", "h3", "h4", "h5", "h6",
                    ".article-content", "#content", "#main-content"
            };

            for (String selector : selectors) {
                for (Element element : doc.select(selector)) {
                    String text = element.text().trim();
                    if (!text.isEmpty() && text.length() > 10) { // 过滤太短的内容
                        content.append(text).append("\n\n");
                    }
                }
            }

            String result = content.toString().trim();
            if (result.isEmpty()) {
                return "未能提取到有效内容";
            }

            return String.format("标题：%s\n\n正文：\n%s",
                    pageTitle,
                    result.replaceAll("\n{3,}", "\n\n")
            );

        } catch (Exception e) {
            log.error("抓取网页内容失败: {}", url, e);
            return "获取内容失败: " + e.getMessage();
        }
    }


}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/aiservice/PersistentChatMemoryStore.java
================
package com.emcikem.llm.service.aiservice;

import com.emcikem.llm.dao.entity.LlmOpsChatDialogDO;
import com.emcikem.llm.dao.mapper.LlmOpsChatDialogDOMapper;
import com.google.common.collect.Lists;
import dev.langchain4j.data.message.ChatMessage;
import dev.langchain4j.data.message.ChatMessageDeserializer;
import dev.langchain4j.data.message.ChatMessageSerializer;
import dev.langchain4j.store.memory.chat.ChatMemoryStore;
import jakarta.annotation.Resource;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;

@Service
@Slf4j
public class PersistentChatMemoryStore implements ChatMemoryStore {
    @Resource
    private LlmOpsChatDialogDOMapper llmOpsChatDialogDOMapper;

    @Override
    public List<ChatMessage> getMessages(Object memoryId) {
        try {
            Long dialogId = (Long) memoryId;
            LlmOpsChatDialogDO llmOpsChatDialogDO = llmOpsChatDialogDOMapper.selectByPrimaryKey(dialogId);
            if (llmOpsChatDialogDO == null) {
                return Lists.newArrayList();
            }
            String content = llmOpsChatDialogDO.getContent();
            return ChatMessageDeserializer.messagesFromJson(content);
        } catch (Exception ex) {
            throw new RuntimeException();
        }
    }

    @Override
    public void updateMessages(Object memoryId, List<ChatMessage> messages) {
        try {
            // 每次删除第一次日志
//            messages = messages.subList(1, messages.size());
            Long dialogId = (Long) memoryId;
            LlmOpsChatDialogDO chatDialogDO = new LlmOpsChatDialogDO();
            chatDialogDO.setId(dialogId);
            chatDialogDO.setUtime(new Date());
            chatDialogDO.setContent(ChatMessageSerializer.messagesToJson(messages));

            llmOpsChatDialogDOMapper.updateByPrimaryKeySelective(chatDialogDO);
        } catch (Exception ex) {
            throw new RuntimeException();
        }
    }

    @Override
    public void deleteMessages(Object memoryId) {
        log.info("delete");
        // TODO: Implement deleting all messages in the persistent store by memory ID.
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/config/CorsConfig.java
================
package com.emcikem.llm.service.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;
import org.springframework.web.filter.CorsFilter;

@Configuration
public class CorsConfig {

    @Bean
    public CorsFilter corsFilter() {
        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        CorsConfiguration config = new CorsConfiguration();
        config.setAllowCredentials(true);
        config.addAllowedOrigin("http://localhost:5173"); // 明确指定前端地址
        config.addAllowedHeader("*");
        config.addAllowedMethod("*");
        source.registerCorsConfiguration("/**", config);
        return new CorsFilter(source);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/config/RestTemplateConfig.java
================
package com.emcikem.llm.service.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.client.ClientHttpRequestFactory;
import org.springframework.http.client.SimpleClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;

/**
 * @author zhuleiye02
 * @date 2025/1/22
 */
@Configuration
public class RestTemplateConfig {
    @Bean
    public RestTemplate restTemplate(ClientHttpRequestFactory factory) {
        return new RestTemplate(factory);
    }

    @Bean
    public ClientHttpRequestFactory simpleClientHttpRequestFactory() {
        SimpleClientHttpRequestFactory factory = new SimpleClientHttpRequestFactory();
        factory.setReadTimeout(5000);
        factory.setConnectTimeout(15000);
        // 设置代理
        //factory.setProxy(null);
        return factory;
    }

}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/config/ThreadPoolConfig.java
================
package com.emcikem.llm.service.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * Create with Emcikem on 2025/1/22
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Configuration
public class ThreadPoolConfig {

    @Bean("historyPool")
    public ExecutorService historyPool() {
        return Executors.newFixedThreadPool(3);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/constant/Constant.java
================
package com.emcikem.llm.service.constant;

import java.nio.file.Path;
import java.nio.file.Paths;

public interface Constant {
    String USER_DIR = System.getProperty("user.dir");

    Path FILE_PATH = Paths.get(USER_DIR, "data");

    Path DB_PATH = Paths.get(FILE_PATH.toString(), "test.db");

    String SEARCH_FAILED = "搜索失败";
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/convert/ChatDialogConvert.java
================
package com.emcikem.llm.service.convert;

import com.emcikem.llm.common.vo.ChatDialogVO;
import com.emcikem.llm.dao.entity.LlmOpsChatDialogDO;
import com.google.common.collect.Lists;
import org.springframework.util.CollectionUtils;

import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

public class ChatDialogConvert {

  public static List<LlmOpsChatDialogDO> convert2ChatDialogDOList(List<ChatDialogVO> dialogVOList) {
    if (CollectionUtils.isEmpty(dialogVOList)) {
      return Lists.newArrayList();
    }
    return dialogVOList.stream().map(ChatDialogConvert::convert2ChatDialogDO).filter(Objects::nonNull).collect(Collectors.toList());
  }

  public static LlmOpsChatDialogDO convert2ChatDialogDO(ChatDialogVO dialogVO) {
    if (dialogVO == null) {
      return null;
    }
    LlmOpsChatDialogDO dialogDO = new LlmOpsChatDialogDO();
    dialogDO.setId(dialogVO.getId());
    dialogDO.setTenantId(dialogVO.getTenantId());
    dialogDO.setTitle(dialogVO.getName());

    return dialogDO;
  }

  public static List<ChatDialogVO> convert2ChatDialogVOList(List<LlmOpsChatDialogDO> dialogDOList) {
    if (CollectionUtils.isEmpty(dialogDOList)) {
      return Lists.newArrayList();
    }
    return dialogDOList.stream().map(ChatDialogConvert::convert2ChatDialogVO).filter(Objects::nonNull).collect(Collectors.toList());
  }

  public static ChatDialogVO convert2ChatDialogVO(LlmOpsChatDialogDO dialogDO) {
    if (dialogDO == null) {
      return null;
    }
    ChatDialogVO chatDialogVO = new ChatDialogVO();
    chatDialogVO.setId(dialogDO.getId());
    chatDialogVO.setName(dialogDO.getTitle());

    return chatDialogVO;
  }

}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/service/BingWebSearchSample.java
================
package com.emcikem.llm.service.service;

import com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomSearchAPI;
import com.microsoft.azure.cognitiveservices.search.customsearch.BingCustomSearchManager;
import com.microsoft.azure.cognitiveservices.search.customsearch.models.SearchResponse;
import com.microsoft.rest.credentials.ServiceClientCredentials;
import okhttp3.HttpUrl;
import okhttp3.Interceptor;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

import java.io.IOException;

/**
 * Sample code for searching web using Bing Web Search, an Azure Cognitive Service.
 *  - Search the web for "Xbox" with market and count settings and print out the name and url for first web, image, news and videos results.
 */
public class BingWebSearchSample {
    /**
     * Main function which runs the actual sample.
     *
     * @param client instance of the Bing Web Search API client
     * @return true if sample runs successfully
     */
    public static boolean runSample(BingCustomSearchAPI client) {
        try {

            //=============================================================
            // This will look up a single query "Xbox" and print out name and url for first web, image, news and videos results

            System.out.println("Searched Web for \"百度是什么公司\"");
            SearchResponse webData = client.bingCustomInstances().search()
                    .withCustomConfig(0)
                    .withQuery("百度是什么公司")
                    .withMarket("zh-CN")
//                    .withUserAgent("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36")
                    .withCount(10)
                    .execute();

//            //WebPages
//            if (webData != null && webData.webPages() != null && webData.webPages().value() != null &&
//                    !webData.webPages().value().isEmpty()) {
//                // find the first web page
//                WebPage firstWebPagesResult = webData.webPages().value().get(0);
//
//                if (firstWebPagesResult != null) {
//                    System.out.println(String.format("Webpage Results#%d", webData.webPages().value().size()));
//                    System.out.println(String.format("First web page name: %s ", firstWebPagesResult.name()));
//                    System.out.println(String.format("First web page URL: %s ", firstWebPagesResult.url()));
//                } else {
//                    System.out.println("Couldn't find web results!");
//                }
//            } else {
//                System.out.println("Didn't see any Web data..");
//            }
//
//            //Images
//            if (webData != null && webData.images() != null && webData.images().value() != null && !webData.images().value().isEmpty()) {
//                // find the first image result
//                ImageObject firstImageResult = webData.images().value().get(0);
//
//                if (firstImageResult != null) {
//                    System.out.printf("Image Results#%d%n", webData.images().value().size());
//                    System.out.printf("First Image result name: %s %n", firstImageResult.name());
//                    System.out.printf("First Image result URL: %s %n", firstImageResult.contentUrl());
//                } else {
//                    System.out.println("Couldn't find first image results!");
//                }
//            } else {
//                System.out.println("Didn't see any image data..");
//            }
//
//            //News
//            if (webData != null && webData.news() != null && webData.news().value() != null && !webData.news().value().isEmpty()) {
//                // find the first news result
//                NewsArticle firstNewsResult = webData.news().value().get(0);
//
//                if (firstNewsResult != null) {
//                    System.out.printf("News Results#%d%n", webData.news().value().size());
//                    System.out.printf("First news result name: %s %n", firstNewsResult.name());
//                    System.out.printf("First news result URL: %s %n", firstNewsResult.url());
//                } else {
//                    System.out.println("Couldn't find any News results!");
//                }
//            } else {
//                System.out.println("Didn't see first news data..");
//            }
//
//            //Videos
//            if (webData != null && webData.videos() != null && webData.videos().value() != null && webData.videos().value().size() > 0) {
//                // find the first video result
//                VideoObject firstVideoResult = webData.videos().value().get(0);
//
//                if (firstVideoResult != null) {
//                    System.out.printf("Video Results#%s%n", webData.videos().value().size());
//                    System.out.printf("First Video result name: %s %n", firstVideoResult.name());
//                    System.out.printf("First Video result URL: %s %n", firstVideoResult.contentUrl());
//                } else {
//                    System.out.println("Couldn't find first video results!");
//                }
//            } else {
//                System.out.println("Didn't see any video data..");
//            }

            return true;
        } catch (Exception f) {
            System.out.println(f.getMessage());
            f.printStackTrace();
        }
        return false;
    }

    /**
     * Main entry point.
     *
     * @param args the parameters
     */
    public static void main(String[] args) {
        try {
            //=============================================================
            // Authenticate
            // Set the BING_SEARCH_V7_SUBSCRIPTION_KEY environment variable with your subscription key,
            // then reopen your command prompt or IDE. If not, you may get an API key not found exception.
            final String subscriptionKey = "5c3fb12e688b447faae011bd8cf8fae9";
            // new RestClient.Builder().withBaseUrl("https://api.bing.microsoft.com/v7.0/custom/").withCredentials(new ApiKeyCredentials(subscriptionKey))


            ServiceClientCredentials serviceClientCredentials = new ServiceClientCredentials() {
                @Override
                public void applyCredentialsFilter(OkHttpClient.Builder builder) {
                    builder.addNetworkInterceptor(
                            new Interceptor() {
                                @Override
                                public Response intercept(Chain chain) throws IOException {
                                    Request request = null;
                                    Request original = chain.request();
                                    original.url().newBuilder().addQueryParameter("customconfig", "6641c52a-f08b-4c15-9707-aa7b951badb6");
                                    String url=original.url().url().toString();
                                    HttpUrl httpUrl = original.url().newBuilder(url + "&customconfig=6641c52a-f08b-4c15-9707-aa7b951badb6").build();
                                    // Request customization: add request headers
                                    Request.Builder requestBuilder = original.newBuilder()
                                            .addHeader("Ocp-Apim-Subscription-Key", subscriptionKey).addHeader("customconfig", "6641c52a-f08b-4c15-9707-aa7b951badb6");

                                    request = requestBuilder.url(httpUrl).build();

                                    return chain.proceed(request);
                                }
                            });
                }
            };
            BingCustomSearchAPI client = BingCustomSearchManager.authenticate("https://api.bing.microsoft.com/v7.0/custom/", serviceClientCredentials);


            runSample(client);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/service/BuiltinToolService.java
================
package com.emcikem.llm.service.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

/**
 * Create with Emcikem on {DATE}
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Service
@Slf4j
public class BuiltinToolService {

    /**
     *
     */
    public void getBuiltinTools() {
        // 1. 获取所有的提供商
//        List<>
        // 2. 遍历所有的提供商并提取工具消息

        // 3. 除了工具实体，还需要提取工具的inputs代表大语言模型的输入参数信息

        // 4. 组装所有消息为list，并返回
    }

    /**
     *
     * @param providerName 提供者名字
     * @param toolName 工具名字
     */
    public void getBuiltinToolDetail(String providerName, String toolName) {

    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/service/ChatAssistService.java
================
package com.emcikem.llm.service.service;

import com.emcikem.llm.common.enums.ChatMessageRoleTypeEnum;
import com.emcikem.llm.common.enums.ChatModelEnum;
import com.emcikem.llm.common.util.GsonUtil;
import com.emcikem.llm.common.vo.ChatHistoryVO;
import com.emcikem.llm.common.vo.ChatVO;
import com.emcikem.llm.dao.entity.LlmOpsChatDialogDO;
import com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO;
import com.emcikem.llm.dao.mapper.LlmOpsChatDialogDOMapper;
import com.emcikem.llm.dao.mapper.LlmOpsChatHistoryDOMapper;
import com.emcikem.llm.service.aiservice.Assistant;
import com.emcikem.llm.service.aiservice.factory.AssistantFactory;
import com.google.common.collect.Lists;
import jakarta.annotation.Resource;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.Date;
import java.util.List;
import java.util.concurrent.ExecutorService;

/**
 * Create with Emcikem on 2025/1/20
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Service
@Slf4j
public class ChatAssistService {

    @Resource
    private LlmOpsChatDialogDOMapper llmOpsChatDialogDOMapper;

    @Resource
    private LlmOpsChatHistoryDOMapper llmOpsChatHistoryDOMapper;

    @Resource
    private AssistantFactory assistantFactory;

    @Resource
    private ExecutorService historyPool;

    public String chat(ChatVO chatVO) {
        // 1. 查询或者新建dialog
        LlmOpsChatDialogDO chatDialogDO = getOrQueryDialog(chatVO);

        ChatModelEnum chatModelEnum = ChatModelEnum.findByModeId(chatVO.getModelType());
        // 2. 找到智能体
        Assistant assistant = assistantFactory.getAssistant(chatModelEnum.getModelName());
        // 3. 和ai对话
        String aiChat = assistant.chat(chatDialogDO.getId(), chatVO.getPrompt());
        // 4. 插入history数据&&回写dialog
        historyPool.submit(() -> insertHistory(chatVO, aiChat, chatDialogDO.getId()));
        return aiChat;
    }

    private void insertHistory(ChatVO chatVO, String aiChat, Long dialogId) {
        try {
            LlmOpsChatHistoryDO userHistory = buildUserHistory(chatVO, dialogId);
            LlmOpsChatHistoryDO aiHistory = buildAiHistory(chatVO, aiChat, dialogId);

            // TODO:变成batchInsert
            int userResult = llmOpsChatHistoryDOMapper.insertSelective(userHistory);
            int aiResult = llmOpsChatHistoryDOMapper.insertSelective(aiHistory);
            if (userResult < 1 || aiResult < 1) {
                throw new RuntimeException();
            }

            // 将用户数据回写到dialog中
            if (chatVO.getDialogId() == null) {
                //TOOD: 概要
//                llmOpsChatDialogDOMapper.updateByExampleSelective();
            }
        } catch (Exception ex) {
            log.error("insertHistory error, chatVO:{}, aiChat:{}, dialog:{}", chatVO, aiChat, dialogId, ex);
        }
    }

    private LlmOpsChatHistoryDO buildAiHistory(ChatVO chatVO, String aiChat, Long dialogId) {
        LlmOpsChatHistoryDO aiHistory = new LlmOpsChatHistoryDO();
        aiHistory.setRole(ChatMessageRoleTypeEnum.AI.getRole());
        aiHistory.setContent(GsonUtil.toJSONString(aiChat));
        aiHistory.setCtime(new Date());
        aiHistory.setCreator(String.valueOf(chatVO.getTenantId()));
        aiHistory.setTenantId(chatVO.getTenantId());
        aiHistory.setDialogId(dialogId);
        aiHistory.setToken(0L);
        return aiHistory;
    }

    private LlmOpsChatHistoryDO buildUserHistory(ChatVO chatVO, Long dialogId) {
        LlmOpsChatHistoryDO userHistory = new LlmOpsChatHistoryDO();
        userHistory.setRole(ChatMessageRoleTypeEnum.USER.getRole());
        userHistory.setContent(GsonUtil.toJSONString(chatVO.getPrompt()));
        userHistory.setCtime(new Date());
        userHistory.setCreator(String.valueOf(chatVO.getTenantId()));
        userHistory.setTenantId(chatVO.getTenantId());
        userHistory.setDialogId(dialogId);
        userHistory.setToken(0L);
        return userHistory;
    }

    private LlmOpsChatDialogDO getOrQueryDialog(ChatVO chatVO) {
        if (chatVO.getDialogId() == null) {
            // 新建
            LlmOpsChatDialogDO llmOpsChatDialogDO = buildCHatDialogDO(chatVO);
            int insert = llmOpsChatDialogDOMapper.insert(llmOpsChatDialogDO);
            if (insert <= 0) {
                throw new RuntimeException();
            }
            return llmOpsChatDialogDO;
        }
        LlmOpsChatDialogDO chatDialogDO = llmOpsChatDialogDOMapper.selectByPrimaryKey(chatVO.getDialogId());
        if (chatDialogDO == null) {
            throw new RuntimeException();
        }
        return chatDialogDO;
    }

    private LlmOpsChatDialogDO buildCHatDialogDO(ChatVO chatVO) {
        LlmOpsChatDialogDO chatDialogDO = new LlmOpsChatDialogDO();
        chatDialogDO.setTitle("新对话");
        chatDialogDO.setCtime(new Date());
        chatDialogDO.setUtime(new Date());
        chatDialogDO.setOperator(String.valueOf(chatVO.getTenantId()));
        chatDialogDO.setCreator(String.valueOf(chatVO.getTenantId()));
        chatDialogDO.setContent(GsonUtil.toJSONString(Lists.newArrayList()));
        chatDialogDO.setTenantId(chatVO.getTenantId());
        return chatDialogDO;
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/service/ChatDialogService.java
================
package com.emcikem.llm.service.service;

import com.emcikem.llm.common.vo.ChatDialogVO;
import com.emcikem.llm.dao.entity.LlmOpsChatDialogDO;
import com.emcikem.llm.dao.example.LlmOpsChatDialogDOExample;
import com.emcikem.llm.dao.mapper.LlmOpsChatDialogDOMapper;
import com.emcikem.llm.service.convert.ChatDialogConvert;
import jakarta.annotation.Resource;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Create with Emcikem on 2025/1/19
 *
 * @author Emcikem
 * @version 1.0.0
 */
@Service
public class ChatDialogService {

    @Resource
    private LlmOpsChatDialogDOMapper llmOpsChatDialogDOMapper;

    /**
     * 查询最近的100条记录
     * @return
     */
    public List<ChatDialogVO> queryDialogList(Long tenantId) {
        LlmOpsChatDialogDOExample example = new LlmOpsChatDialogDOExample();
        example.createCriteria().andTenantIdEqualTo(tenantId);
        example.setOffset(0);
        example.setRows(100);
        example.orderBy("id desc");
        List<LlmOpsChatDialogDO> llmOpsChatDialogDOS = llmOpsChatDialogDOMapper.selectByExample(example);

        return ChatDialogConvert.convert2ChatDialogVOList(llmOpsChatDialogDOS);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/service/WebContentSample.java
================
package com.emcikem.llm.service.service;

import jakarta.annotation.Resource;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.springframework.context.annotation.Bean;
import org.springframework.http.client.ClientHttpRequestFactory;
import org.springframework.http.client.SimpleClientHttpRequestFactory;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

/**
 * @author zhuleiye02
 * @date 2025/1/26
 */
public class WebContentSample {
    public RestTemplate restTemplate(ClientHttpRequestFactory factory) {
        return new RestTemplate(factory);
    }

    public ClientHttpRequestFactory simpleClientHttpRequestFactory() {
        SimpleClientHttpRequestFactory factory = new SimpleClientHttpRequestFactory();
        factory.setReadTimeout(5000);
        factory.setConnectTimeout(15000);
        // 设置代理
        //factory.setProxy(null);
        return factory;
    }
    public String extractWebContent(String url) {
        RestTemplate restTemplate = restTemplate(simpleClientHttpRequestFactory());
        // 获取原始HTML内容
        String htmlContent = restTemplate.getForObject(url, String.class);

        // 使用Jsoup解析文档
        Document doc = Jsoup.parse(htmlContent);

        // 提取页面标题
        String pageTitle = doc.title();

        // 清理无关内容
        doc.select("script, style, noscript, img, nav, footer, aside, button, iframe").remove();

        // 构建正文内容
        StringBuilder content = new StringBuilder();
        for (Element element : doc.select("p, h1, h2, h3, h4, h5, h6, article")) {
            String text = element.text().trim();
            if (!text.isEmpty()) {
                content.append(text).append("\n\n");
            }
        }

        return formatOutput(pageTitle, content.toString());
    }

    private String formatOutput(String title, String content) {
        return String.format("%s\n\n%s",
                title,
                content.replaceAll("\n{3,}", "\n\n").trim()
        );
    }

    String fetchWebContent(String url) {
        try {
            // 设置请求头和超时
            org.springframework.http.HttpHeaders headers = new org.springframework.http.HttpHeaders();
            headers.set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36");
            RestTemplate restTemplate = restTemplate(simpleClientHttpRequestFactory());

            org.springframework.http.HttpEntity<String> entity = new org.springframework.http.HttpEntity<>(headers);
            org.springframework.http.ResponseEntity<String> response = restTemplate.exchange(
                    url,
                    org.springframework.http.HttpMethod.GET,
                    entity,
                    String.class
            );

            String htmlContent = response.getBody();
            if (htmlContent == null || htmlContent.trim().isEmpty()) {
                return "无法获取页面内容";
            }

            // 使用Jsoup解析文档
            Document doc = Jsoup.parse(htmlContent);
            doc.select("script, style, noscript, iframe, .advertisement").remove();

            // 提取页面标题
            String pageTitle = doc.title();

            // 构建正文内容
            StringBuilder content = new StringBuilder();

            // 扩大选择器范围，包含更多可能的内容容器
            String[] selectors = {
                    "article", "main", ".content", ".article", ".post",
                    "p", "h1", "h2", "h3", "h4", "h5", "h6",
                    ".article-content", "#content", "#main-content"
            };

            for (String selector : selectors) {
                for (Element element : doc.select(selector)) {
                    String text = element.text().trim();
                    if (!text.isEmpty() && text.length() > 10) { // 过滤太短的内容
                        content.append(text).append("\n\n");
                    }
                }
            }

            String result = content.toString().trim();
            if (result.isEmpty()) {
                return "未能提取到有效内容";
            }

            return String.format("标题：%s\n\n正文：\n%s",
                    pageTitle,
                    result.replaceAll("\n{3,}", "\n\n")
            );

        } catch (Exception e) {
            return "获取内容失败: " + e.getMessage();
        }
    }

    public static void main(String[] args) {
        WebContentSample sample = new WebContentSample();
        String url = "https://news.qq.com/rain/a/20220110A06U1G00";
        String content = sample.fetchWebContent(url);
        System.out.println(content);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/util/CacheUtil.java
================
package com.emcikem.llm.service.util;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;

import static com.emcikem.llm.service.constant.LLMOpsConstant.SEARCH_FAILED;

public class CacheUtil {
    private static final Map<String, String> cache = new ConcurrentHashMap<>();
    private static final long expires = 10 * 60 * 1000;
    private static final Gson gson = new Gson();

    public static <T> T cacheFunc(String key, Function<Void, T> function) {
        long current = System.currentTimeMillis();
        if (cache.containsKey(key)) {
            String obj = cache.get(key);
            int timeIdx = obj.indexOf("&");
            long last = Long.parseLong(obj.substring(0, timeIdx));
            if (current - last < expires) {
                return gson.fromJson(obj.substring(timeIdx + 1), new TypeToken<T>() {}.getType());
            }
        }
        T result = function.apply(null);
        if (result != null && !SEARCH_FAILED.equals(String.valueOf(result))) {
            cache.put(key, current + "&" + gson.toJson(result));
        }
        return result;
    }

    public static void reset() {
        cache.clear();
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/util/CommonUtil.java
================
package com.emcikem.llm.service.util;

import org.jetbrains.annotations.NotNull;

import java.lang.reflect.Field;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class CommonUtil {
    public static int randomIndex(int bound) {
        Random random = new Random();
        return random.nextInt(bound);
    }

    public static String encode(String str) {
        return Base64.getUrlEncoder().encodeToString(str.getBytes(StandardCharsets.UTF_8));
    }

    public static String decode(String str) {
        return new String(Base64.getUrlDecoder().decode(str));
    }

    public static String tail(String str, int len) {
        if (str.length() <= len) {
            return str;
        }
        return str.substring(str.length() - len);
    }

    public static String removeSuffix(String str, String suffix) {
        if (str.endsWith(suffix)) {
            return str.substring(0, str.length() - suffix.length());
        }
        return str;
    }

    public static String convertToCamelCase(String input) {
        StringBuilder result = new StringBuilder();
        String[] words = input.toLowerCase().split("_");

        for (int i = 0; i < words.length; i++) {
            String word = words[i];
            if (i > 0 && !word.isEmpty()) {
                word = Character.toUpperCase(word.charAt(0)) + word.substring(1);
            }
            result.append(word);
        }

        return result.toString();
    }

    public static String convertToSnakeCase(String input) {
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < input.length(); i++) {
            char currentChar = input.charAt(i);

            if (Character.isUpperCase(currentChar)) {
                result.append("_").append(Character.toLowerCase(currentChar));
            } else {
                result.append(currentChar);
            }
        }

        return result.toString().toUpperCase();
    }

    public static String digest(String input) {
        StringBuilder sb = new StringBuilder();
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] digest = md.digest(input.getBytes());
            for (byte b : digest) {
                sb.append(String.format("%02x", b));
            }
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return sb.toString();
    }

    public static Class<?> getPrimitiveType(Class<?> wrapperClass) {
        if (wrapperClass == Integer.class) {
            return int.class;
        } else if (wrapperClass == Double.class) {
            return double.class;
        } else if (wrapperClass == Boolean.class) {
            return boolean.class;
        } else if (wrapperClass == Character.class) {
            return char.class;
        } else if (wrapperClass == Byte.class) {
            return byte.class;
        } else if (wrapperClass == Short.class) {
            return short.class;
        } else if (wrapperClass == Long.class) {
            return long.class;
        } else if (wrapperClass == Float.class) {
            return float.class;
        } else if (wrapperClass == String.class) {
            return String.class;
        } else {
            return null;
        }
    }

    public static boolean isMatch(String str, String regex) {
        Pattern r2 = Pattern.compile(regex);
        Matcher m2 = r2.matcher(str);
        return m2.find();
    }

    @SuppressWarnings("ALL")
    public static <T> T getFieldValue(@NotNull Object object, String fieldName, Class<T> targetClz) {
        Class<?> myClass = object.getClass();
        Field privateField;
        try {
            privateField = myClass.getDeclaredField(fieldName);
            privateField.setAccessible(true);
            Object fieldValue = privateField.get(object);
            privateField.setAccessible(false);
            return (T) fieldValue;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/util/ConfigUtil.java
================
package com.emcikem.llm.service.util;

import com.emcikem.llm.service.constant.LLMOpsConstant;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import org.jetbrains.annotations.NotNull;
import org.yaml.snakeyaml.Yaml;

import java.io.File;
import java.io.FileReader;
import java.io.InputStream;
import java.util.*;
import java.util.stream.Collectors;

public class ConfigUtil {
    private static final String yamlFilePath = "custom-config.yml";
    private static final Gson gson = new Gson();
    private static JsonObject configJson = new JsonObject();

    static {
        loadDefaultConfig();
    }

    private static void loadDefaultConfig() {
        Yaml yaml = new Yaml();
        try (InputStream in = ConfigUtil.class.getClassLoader().getResourceAsStream(yamlFilePath)) {
            Map<String, Object> config = yaml.load(in);
            String json = gson.toJson(config);
            configJson = gson.fromJson(json, JsonObject.class);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void updateConfigJson(JsonObject oldJson, JsonObject newJson) {
        for (String key : newJson.keySet()) {
            JsonElement newVal = newJson.get(key);
            if (oldJson.has(key) && oldJson.get(key).isJsonObject() && newVal.isJsonObject()) {
                updateConfigJson(oldJson.getAsJsonObject(key), newVal.getAsJsonObject());
            } else {
                oldJson.add(key, newVal);
            }
        }
    }

    public static void loadCustomConfig(String pluginFolder) {
        Yaml yaml = new Yaml();
        String configFilePath = String.format("plugins/%s/%s", pluginFolder, yamlFilePath);
        File configFile = new File(Constant.USER_DIR, configFilePath);
        try (FileReader reader = new FileReader(configFile)) {
            Map<String, Object> config = yaml.load(reader);
            String json = gson.toJson(config);
            JsonObject customConfigJson = gson.fromJson(json, JsonObject.class);
            updateConfigJson(configJson, customConfigJson);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static <T> List<T> getConfigArr(@NotNull String key, Class<T> clazz) {
        try {
            String[] path = key.split("\\.");
            int index = 0;
            JsonObject curJson = configJson;
            while (index < path.length - 1) {
                curJson = curJson.getAsJsonObject(path[index]);
                if (curJson == null) {
                    return null;
                }
                index++;
            }
            String leaf = path[path.length - 1];
            JsonElement leafElement = curJson.get(leaf);
            if (leafElement == null) {
                return null;
            }
            if (leafElement.isJsonArray()) {
                JsonArray jsonArray = leafElement.getAsJsonArray();
                return jsonArray
                        .asList().stream()
                        .map(element -> gson.fromJson(element, clazz))
                        .collect(Collectors.toList());
            } else {
                return Collections.singletonList(gson.fromJson(leafElement, clazz));
            }
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public static List<String> getConfigArr(@NotNull String key) {
        return Optional.ofNullable(getConfigArr(key, Object.class)).orElse(new ArrayList<>()).stream()
                .map(String::valueOf)
                .collect(Collectors.toList());
    }

    public static <T> T getConfig(@NotNull String key, Class<T> clazz, T defaultValue) {
        List<T> list = getConfigArr(key, clazz);
        if (list == null || list.isEmpty()) {
            return defaultValue;
        }
        return list.get(0);
    }

    public static <T> T getConfig(@NotNull String key, Class<T> clazz) {
        return getConfig(key, clazz, null);
    }

    public static String getConfig(@NotNull String key) {
        return getConfig(key, String.class);
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/util/CrawlerUtil.java
================
package com.emcikem.llm.service.util;

import com.emcikem.llm.service.aiservice.tools.crawler.IpPort;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.safety.Safelist;

import java.io.IOException;
import java.net.Proxy;
import java.util.Arrays;
import java.util.List;

public class CrawlerUtil {
    public static final List<String> USER_AGENTS = Arrays.asList(
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.1 Safari/603.1.30",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393",
            "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.3; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.1 Safari/603.1.30",
            "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/602.4.8 (KHTML, like Gecko) Version/10.0.3 Safari/602.4.8",
            "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (X11; Linux x86_64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/603.2.4 (KHTML, like Gecko) Version/10.1.1 Safari/603.2.4",
            "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0",
            "Mozilla/5.0 (iPad; CPU OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.0 Mobile/14E304 Safari/602.1",
            "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Windows NT 5.1; rv:52.0) Gecko/20100101 Firefox/52.0",
            "Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
            "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0;  Trident/5.0)",
            "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;  Trident/5.0)",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36 OPR/44.0.2510.1449",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063",
            "Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0",
            "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/603.1.30 (KHTML, like Gecko) Version/10.1 Safari/603.1.30",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/58.0.3029.81 Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:52.0) Gecko/20100101 Firefox/52.0",
            "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.110 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0",
            "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML, like Gecko) Version/9.1.2 Safari/601.7.7",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/58.0.3029.96 Chrome/58.0.3029.96 Safari/537.36",
            "Mozilla/5.0 (Windows NT 6.1; rv:52.0) Gecko/20100101 Firefox/52.0",
            "Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko",
            "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:53.0) Gecko/20100101 Firefox/53.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/601.7.8 (KHTML, like Gecko) Version/9.1.3 Safari/537.86.7",
            "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36 OPR/44.0.2510.857",
            "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.1144"
    );

    public static final List<String> IGNORE_URLS = Arrays.asList(
            "google",
            "baidu.com",
            "bing.com",
            "sogou.com",
            "so.com",
            "quark.sm.cn",
            "miit.gov.cn",
            "microsoft.com"
    );

    public static final int TIMEOUT = 10000;

    public static final Safelist SAFELIST = Safelist.simpleText().addTags("p");

    public static final ThreadLocal<List<IpPort>> IP_PORT_THREAD_LOCAL = new ThreadLocal<>();

    public static Document getDocument(String url) {
        IpPort ipPort = getIpPort();
        try {
            return Jsoup.connect(url).userAgent(getUserAgent())
                    .proxy(ipPort != null ? ipPort.toProxy() : Proxy.NO_PROXY)
                    .timeout(TIMEOUT).get();
        } catch (IOException e) {
            e.printStackTrace();
            return new Document("");
        }
    }

    public static String getUserAgent() {
        return USER_AGENTS.get(CommonUtil.randomIndex(USER_AGENTS.size()));
    }

    public static IpPort getIpPort() {
        List<IpPort> ipPorts = IP_PORT_THREAD_LOCAL.get();
        if (ipPorts != null && ipPorts.size() > 0) {
            return ipPorts.get(CommonUtil.randomIndex(ipPorts.size()));
        }
        return null;
    }
}

================
File: llmops-service/src/main/java/com/emcikem/llm/service/util/FileUtil.java
================
package com.emcikem.llm.service.util;

import java.io.*;
import java.net.URI;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.stream.Stream;

public class FileUtil {
    public static File pngConverter(URI uri) {
        File outputFile = null;
        try (InputStream inputStream = uri.toURL().openStream();
             OutputStream outputStream = Files.newOutputStream(Paths.get(uri.getPath() + ".png"))) {

            byte[] buffer = new byte[1024];
            int length;
            while ((length = inputStream.read(buffer)) > 0) {
                outputStream.write(buffer, 0, length);
            }

            outputFile = new File(uri.getPath() + ".png");
            Files.delete(Paths.get(uri));
        } catch (IOException e) {
            e.printStackTrace();
        }
        return outputFile;
    }

    public static void pngCleaner(Path path) {
        try (Stream<Path> stream = Files.list(path)) {
            stream.filter(Files::isRegularFile)
                    .filter(file -> file.toString().endsWith(".png"))
                    .forEach(file -> {
                        try {
                            Files.delete(file);
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    });
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void mkDir(Path path) {
        try {
            Files.createDirectories(path);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void mkFile(Path path) {
        try {
            if (Files.exists(path)) {
                return;
            }
            Files.createFile(path);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void delete(Path path) {
        try {
            Files.deleteIfExists(path);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static String readJson(Path path) {
        FileUtil.mkFile(path);
        try {
            return new String(Files.readAllBytes(path), StandardCharsets.UTF_8);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }

    public static void writeJson(Path path, String json) {
        FileUtil.mkFile(path);
        try (FileWriter fileWriter = new FileWriter(path.toString())) {
            fileWriter.write(json);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

================
File: llmops-service/pom.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.emcikem</groupId>
        <artifactId>llmops</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>llmops-service</artifactId>

    <dependencies>
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-open-ai-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- for Flux<String> support -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-reactor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>com.emcikem</groupId>
            <artifactId>llmops-dao</artifactId>
        </dependency>
        <dependency>
            <groupId>com.emcikem</groupId>
            <artifactId>llmops-common</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure.cognitiveservices</groupId>
            <artifactId>azure-cognitiveservices-websearch</artifactId>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure.cognitiveservices</groupId>
            <artifactId>azure-cognitiveservices-customsearch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-http</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

</project>

================
File: llmops-web/src/main/java/com/emcikem/llm/web/controller/ApiToolsController.java
================
package com.emcikem.llm.web.controller;

import cn.hutool.core.collection.CollectionUtil;
import com.emcikem.llm.common.entity.ApiResponse;
import com.emcikem.llm.common.util.GsonUtil;
import com.emcikem.llm.common.vo.tools.*;
import com.emcikem.llm.dao.entity.LlmOpsApiToolProviderDO;
import com.emcikem.llm.dao.example.LlmOpsApiToolProviderDOExample;
import com.emcikem.llm.dao.mapper.LlmOpsApiToolProviderDOMapper;
import com.google.common.collect.Lists;
import jakarta.annotation.Resource;
import opennlp.tools.util.StringUtil;
import org.apache.commons.lang3.StringUtils;
import org.springframework.web.bind.annotation.*;

import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

/**
 * Create with Emcikem on 2025/3/2
 *
 * @author Emcikem
 * @version 1.0.0
 */
@RestController
@RequestMapping("/api-tools")
public class ApiToolsController {

    @Resource
    private LlmOpsApiToolProviderDOMapper llmOpsApiToolProviderDOMapper;

    @GetMapping("/list")
    public ApiResponse<ApiProviderListVO> getAllApiTools(String search_word, Integer current_page, Integer page_size) {
        LlmOpsApiToolProviderDOExample example = new LlmOpsApiToolProviderDOExample();
        example.setOffset(current_page - 1);
        example.setRows(page_size);
        if (StringUtils.isNoneEmpty(search_word)) {
            example.createCriteria().andNameLike("%" + search_word + "%");
        }
        List<LlmOpsApiToolProviderDO> opsApiToolProviderList = llmOpsApiToolProviderDOMapper.selectByExample(example);
        long count = llmOpsApiToolProviderDOMapper.countByExample(example);

        Paginator paginator = new Paginator();
        paginator.setCurrent_page(current_page);
        paginator.setPage_size(page_size);
        paginator.setTotal_page((int) ((count + page_size - 1) / page_size));
        paginator.setTotal_record((int) (count));

        List<ApiProviderVO> apiProviderList = opsApiToolProviderList.stream().map(llmOpsApiToolProviderDO -> {
            ApiProviderVO apiProviderVO = new ApiProviderVO();
            apiProviderVO.setDescription(llmOpsApiToolProviderDO.getDescription());
            apiProviderVO.setIcon(llmOpsApiToolProviderDO.getIcon());
            apiProviderVO.setId(llmOpsApiToolProviderDO.getProviderId());
            apiProviderVO.setHeaders(GsonUtil.parseList(llmOpsApiToolProviderDO.getHeaders(), ApiToolHeaderVO.class));
            apiProviderVO.setTools(Lists.newArrayList());
            apiProviderVO.setName(llmOpsApiToolProviderDO.getName());
            apiProviderVO.setCreated_at(llmOpsApiToolProviderDO.getCreatedAt().getTime());
            return apiProviderVO;
        }).collect(Collectors.toList());

        ApiProviderListVO apiProviderListVO = new ApiProviderListVO();
        apiProviderListVO.setPaginator(paginator);
        apiProviderListVO.setList(apiProviderList);
        return ApiResponse.success(apiProviderListVO);
    }

    @PostMapping("/create")
    public ApiResponse<Void> createApiTools(@RequestBody CreateProviderDetailVO createToolProviderParam) {
        LlmOpsApiToolProviderDO providerDO = new LlmOpsApiToolProviderDO();
        providerDO.setCreatedAt(new Date());
        providerDO.setIcon(createToolProviderParam.getIcon());
        providerDO.setUpdatedAt(new Date());
        providerDO.setProviderId(UUID.randomUUID().toString());
        providerDO.setOpenapiSchema(createToolProviderParam.getOpenapi_schema());
        providerDO.setAccountId(UUID.randomUUID().toString());
        providerDO.setHeaders(GsonUtil.toJSONString(createToolProviderParam.getHeaders()));
        providerDO.setDescription("");
        providerDO.setName(createToolProviderParam.getName());
        int insert = llmOpsApiToolProviderDOMapper.insert(providerDO);
        return ApiResponse.success(null);
    }

    @PostMapping("/update/{provider_id}")
    public ApiResponse<Void> updateApiTools(@PathVariable String provider_id, @RequestBody UpdateProviderDetailVO updateProviderParam) {
        LlmOpsApiToolProviderDO providerDO = new LlmOpsApiToolProviderDO();
        providerDO.setUpdatedAt(new Date());
        providerDO.setOpenapiSchema(updateProviderParam.getOpenapi_schema());
        providerDO.setIcon(updateProviderParam.getIcon());
        providerDO.setName(updateProviderParam.getName());
        providerDO.setProviderId(provider_id);
        providerDO.setHeaders(GsonUtil.toJSONString(updateProviderParam.getHeaders()));
        LlmOpsApiToolProviderDOExample example = new LlmOpsApiToolProviderDOExample();
        example.createCriteria().andProviderIdEqualTo(provider_id);
        int i = llmOpsApiToolProviderDOMapper.updateByExampleSelective(providerDO, example);
        return ApiResponse.success(null);
    }

    @GetMapping("/detail/{provider_id}")
    public ApiResponse<ApiToolsDetailVO> getApiToolsDetail(@PathVariable String provider_id) {
        LlmOpsApiToolProviderDOExample example = new LlmOpsApiToolProviderDOExample();
        example.createCriteria().andProviderIdEqualTo(provider_id);
        List<LlmOpsApiToolProviderDO> opsApiToolProviderList = llmOpsApiToolProviderDOMapper.selectByExample(example);
        if (CollectionUtil.isEmpty(opsApiToolProviderList)) {
            return ApiResponse.success(null);
        }
        LlmOpsApiToolProviderDO providerDO = opsApiToolProviderList.get(0);
        ApiToolsDetailVO apiToolsDetailVO = new ApiToolsDetailVO();
        apiToolsDetailVO.setHeaders(GsonUtil.parseList(providerDO.getHeaders(), ApiToolHeaderVO.class));
        apiToolsDetailVO.setName(providerDO.getName());
        apiToolsDetailVO.setIcon(providerDO.getIcon());
        apiToolsDetailVO.setCreated_at(providerDO.getCreatedAt().getTime());
        apiToolsDetailVO.setOpenapi_schema(providerDO.getOpenapiSchema());

//        String str = "{\"id\":\"46db3xd1-3199-4e79-a0cd-abf12fa6858f\",\"name\":\"高德工具包\",\"icon\":\"https://www.99it.com.cn/uploads/allimg/220622/114A52915-0.jpg\",\"openapi_schema\":null,\"headers\":[{\"key\":\"Authorization\",\"value\":\"Bearer QQYnRFerJTSEcrfB89fw8proaObmrch8\"}],\"created_at\":1721460914}";
//        String schema = "{\"description\":\"这是一个查询对应英文单词字典的工具\",\"server\":\"https://dict.youdao.com\",\"paths\":{\"/suggest\":{\"get\":{\"description\":\"根据传递的单词查询其字典信息\",\"operationId\":\"youdaoSuggest\",\"parameters\":[{\"name\":\"q\",\"in\":\"query\",\"description\":\"要检索查询的单词，例如love/computer\",\"required\":true,\"type\":\"str\"},{\"name\":\"doctype\",\"in\":\"query\",\"description\":\"返回的数据类型，支持json和xml两种格式，默认情况下json数据\",\"required\":false,\"type\":\"str\"}]}}}";
//        apiToolsDetailVO.setOpenapi_schema(schema);
        return ApiResponse.success(apiToolsDetailVO);
    }

    @PostMapping("/validate-openapi-schema")
    public ApiResponse<Void> validateOpenApiSchema(@RequestBody ApiValidateOpenApiSchemaVO schemaVO) {
        return ApiResponse.success(null);
    }

    @PostMapping("/{provider_id}/delete")
    public ApiResponse<Void> delete(@PathVariable String provider_id) {
        LlmOpsApiToolProviderDOExample example = new LlmOpsApiToolProviderDOExample();
        example.createCriteria().andProviderIdEqualTo(provider_id);
        int i = llmOpsApiToolProviderDOMapper.deleteByExample(example);
        return ApiResponse.success(null);
    }
}

================
File: llmops-web/src/main/java/com/emcikem/llm/web/controller/AssistantController.java
================
package com.emcikem.llm.web.controller;

import com.emcikem.llm.common.entity.ApiResponse;
import com.emcikem.llm.common.vo.AiChatResponse;
import com.emcikem.llm.common.vo.ChatVO;
import com.emcikem.llm.service.service.ChatAssistService;
import jakarta.annotation.Resource;
import org.springframework.web.bind.annotation.*;

/**
 * 对话接口
 */
@RestController
@RequestMapping("/assistant")
public class AssistantController {

    @Resource
    private ChatAssistService chatAssistService;

    @PostMapping(value = "/chat")
    public ApiResponse<AiChatResponse> chat(@RequestBody ChatVO chatVO) {
        String chat = chatAssistService.chat(chatVO);
        AiChatResponse response = new AiChatResponse();
        response.setContent(chat);
        return ApiResponse.success(response);
    }
}

================
File: llmops-web/src/main/java/com/emcikem/llm/web/controller/ChatDialogController.java
================
package com.emcikem.llm.web.controller;

import com.emcikem.llm.common.entity.ApiResponse;
import com.emcikem.llm.common.enums.ResponseStatusEnum;
import com.emcikem.llm.common.vo.ChatDialogVO;
import com.emcikem.llm.service.service.ChatDialogService;
import jakarta.annotation.Resource;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

/**
 * Create with Emcikem on 2025/1/19
 *
 * @author Emcikem
 * @version 1.0.0
 * 对话数据接口
 */
@RestController
@RequestMapping("/dialog")
@Slf4j
public class ChatDialogController {

    @Resource
    private ChatDialogService chatDialogService;

    /**
     * 对话列表页
     * @param tenantId
     */
    @GetMapping("/list")
    public ApiResponse<List<ChatDialogVO>> list(Long tenantId) {
        try {
            List<ChatDialogVO> chatDialogList = chatDialogService.queryDialogList(tenantId);
            return ApiResponse.success(chatDialogList);
        } catch (Exception ex) {
            log.error("ChatDialogController list Failed, req:{}", tenantId, ex);
            return ApiResponse.error(ResponseStatusEnum.SYSTEM_ERROR);
        }
    }

    /**
     * 删除对话
     * @param dialogId
     * @param tenantId
     */
    @PostMapping("/delete")
    public void delete(Long dialogId, Long tenantId) {

    }

    /**
     * 修改对话名称
     * @param request
     */
    @PostMapping("/editName")
    public ApiResponse<Void> editName(ChatDialogVO request) {
        return new ApiResponse<>();
    }

    /**
     * 创建新的对话
     */
    @PostMapping("/create")
    public void create() {

    }
}

================
File: llmops-web/src/main/java/com/emcikem/llm/web/controller/PersonSpaceController.java
================
package com.emcikem.llm.web.controller;

import org.springframework.web.bind.annotation.RestController;

/**
 * Create with Emcikem on 2025/1/14
 *
 * @author Emcikem
 * @version 1.0.0
 */
@RestController
public class PersonSpaceController {
}

================
File: llmops-web/src/main/java/com/emcikem/llm/web/controller/PingController.java
================
package com.emcikem.llm.web.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class PingController {

    @GetMapping("/ping")
    public String ping() {
        return "pong";
    }
}

================
File: llmops-web/src/main/java/com/emcikem/llm/web/controller/PluginController.java
================
package com.emcikem.llm.web.controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * Create with Emcikem on 2025/1/14
 *
 * @author Emcikem
 * @version 1.0.0
 */
@RestController
@RequestMapping("/plug")
public class PluginController {
}

================
File: llmops-web/src/main/java/com/emcikem/llm/web/ApplicationLoader.java
================
package com.emcikem.llm.web;

import lombok.extern.slf4j.Slf4j;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/**
 * Create with Emcikem on ${DATE}
 * 
 * @author Emcikem
 * @version 1.0.0
 */
@Slf4j
@SpringBootApplication(scanBasePackages = "com.emcikem.llm")
@MapperScan("com.emcikem.llm.dao.mapper")  // 扫描 dao 模块中的 Mapper 接口
public class ApplicationLoader {
    public static void main(String[] args) {
        SpringApplication application = new SpringApplication(ApplicationLoader.class);
        application.setAdditionalProfiles();
        application.run(args);
        log.info("-------------------------------------------------------------------------------");
        log.info("|                                      |                                      |");
        log.info("|                                --====|====--                                |");
        log.info("|                                      |                                      |");
        log.info("|                                                                             |");
        log.info("|                                  .-'''''-.                                  |");
        log.info("|                                .'_________'.                                |");
        log.info("|                               /_/_|__|__|_\\_\\                               |");
        log.info("|                              ;'-._       _.-';                              |");
        log.info("|         ,--------------------|    `-. .-'    |--------------------,         |");
        log.info("|          ``''--..__    ___   ;       '       ;   ___    __..--''``          |");
        log.info("|                    `'-// \\\\.._\\             /_..// \\\\- '`                   |");
        log.info("|                       \\\\_//    '._       _.'      \\\\_//                     |");
        log.info("-------------------------------------------------------------------------------");
    }
}

================
File: llmops-web/src/main/resources/doc/接口文档/插件模块.md
================
# 1. 插件模块
## 1. 获取自定义API工具提供者列表
GET：/api-tools
```bash
GET:/api-tools?search_word=&current_page=1&page_size=21
```
```json
{
  "code": "success",
  "message": "",
  "data": {
    "list": [
      {
        "id": "46db30d1-3199-4e79-a0cd-abf12fa6858f",
        "name": "高德地图",
        "icon": "https://cdn.imooc.com/gaode.png",
        "description": "查询ip所在地、天气预报、路线规划等搞得工具包",
        "tools": [
          {
            "id": "d400cec0-892f-49ab-8f72-821b88c1aaa9",
            "description": "根据传递的城市名获取制定城市的天气预报、例如：广州",
            "name": "GetCurrentWeather",
            "inputs": [
              {
                "type": "str",
                "required": true,
                "name": "query",
                "description": "需要搜素的查询语句"
              }
            ]
          }
        ],
        "headers": [
          {"key": "Authorization", "value": "Bearer QQYnRerJTSEcrf889fw8prOaOberch8"}
        ],
        "created_at": 1721460914
      }
    ],
    "paginator": {
      "current_page": 1,
      "page_size": 21,
      "total_page": 1,
      "total_record": 2
    }
  }
}
```
## 2. 创建自定义API工具提供者
POST:/api-tools
入参：
```json
[
  {
    "name": "谷歌搜索",
    "icon": "https://cdn.imoc.com/google.png",
    "openapi_schema": "{\"description\":\"这是一个查询对应英文单词字典的工具\",\"server\":\"https://dict.youdao.com/\",\"paths\":{\"/suggest\":{\"get\":{\"description\":\"根据传递的单词查询其字典信息\",\"operationId\":\"youdaosuggest\",\"parameters\":[{\"name\":\"q\",\"in\":\"query\",\"description\":\"要检索查询的单词，例如love/computer\",\"required\":true,\"type\":\"str\"},{\"name\":\"doctype\",\"in\":\"query\",\"description\":\"返回的数据类型，支持json和xml两种格式，默认情况下json数据\",\"required\":false,\"type\":\"str\"}]}}}",
    "headers": [
      {
        "key": "Authorization",
        "value": "Bearer QQYnRFerJTSEcrfB89fw8pr0a0bmrch8"
      }
    ]
  }
]
```
```json
{
  "code": "success",
  "data": {},
  "message": "创建自定义API插件成功"
}
```
## 3. 删除自定义API工具提供者
POST:/api-tools/:api_tool_provider_id/delete
```bach
POST:/api-tools/e1baf52a-1be2-4b93-ad62-6fad72f1ec37/delete
```
```json
{
  "code": "success",
  "data": {},
  "message": "删除自定义API插件成功"
}
```
## 4. 更新自定义API工具提供者
POST：/api-tools/:provider_id
```bash
POST:/api-tools/e1baf52a-1be2-4b93-ad62-6fad72f1ec37
```
```json
{
    "name": "",
    "icon": "",
    "openapi_schema": "{\"description\":\"这是一个查询对应英文单词字典的工具\",\"server\":\"https://dict.youdao.com\",\"paths\":{\"/suggest\":{\"get\":{\"description\":\"根据传递的单词查询其字典信息\",\"operationId\":\"youdaoSuggest\",\"parameters\":[{\"name\":\"q\",\"in\":\"query\",\"description\":\"要检索查询的单词，例如love/computer\",\"required\":true,\"type\":\"str\"},{\"name\":\"doctype\",\"in\":\"query\",\"description\":\"返回的数据类型，支持json和xml两种格式，默认情况下json数据\",\"required\":false,\"type\":\"str\"}]}}}",
    "headers": [
        {"key": "Authorization", "value": "Bearer QQYnRFerJTSEcrfB89fw8proaObmrch8"}
    ]
}
```
```json
{
  "code": "success",
  "data": {},
  "message": "更新自定义API插件成功"
}
```
## 5. 获取指定API工具提供者信息
GET:/api-tools/:provider_id
```bash
GET:/api-tools/e1baf52a-1be2-4b93-ad62-6fad72f1ec37
```
```json
{
    "code": "success",
    "data": {
        "id": "46db30d1-3199-4e79-a0cd-abf12fa6858f",
        "name": "高德工具包",
        "icon": "https://cdn.imoooc.com/google.png",
        "openapi_schema": "{\"description\":\"这是一个查询对应英文单词字典的工具\",\"server\":\"https://dict.youdao.com\",\"paths\":{\"/suggest\":{\"get\":{\"description\":\"根据传递的单词查询其字典信息\",\"operationId\":\"youdaoSuggest\",\"parameters\":[{\"name\":\"q\",\"in\":\"query\",\"description\":\"要检索查询的单词，例如love/computer\",\"required\":true,\"type\":\"str\"},{\"name\":\"doctype\",\"in\":\"query\",\"description\":\"返回的数据类型，支持json和xml两种格式，默认情况下json数据\",\"required\":false,\"type\":\"str\"}]}}}",
        "headers": [
            {
                "key": "Authorization",
                "value": "Bearer QQYnRFerJTSEcrfB89fw8proaObmrch8"
            }
        ],
        "created_at": 1721460914
    },
    "message": ""
}
```

## 6. 校验 OpenAPI字符串是否正确
POST:/api-tools/validate-openapi-schema
```json
{
  "openapi_schema": "{\"description\":\"这是一个查询对应英文单词字典的工具\",\"server\":\"https://dict.youdao.com\",\"paths\":{\"/suggest\":{\"get\":{\"description\":\"根据传递的单词查询其字典信息\",\"operationId\":\"youdaoSuggest\",\"parameters\":[{\"name\":\"q\",\"in\":\"query\",\"description\":\"要检索查询的单词，例如love/computer\",\"required\":true,\"type\":\"str\"},{\"name\":\"doctype\",\"in\":\"query\",\"description\":\"返回的数据类型，支持json和xml两种格式，默认情况下json数据\",\"required\":false,\"type\":\"str\"}]}}}"
}
```

```json
{
  "code": "success",
  "data": {},
  "message": "openapi-schema数据格式无误"
}
```
```json
{
  "code": "validaye_error",
  "data": {},
  "message": "openapi-schema校验失败，info不能为空"
}
```

================
File: llmops-web/src/main/resources/doc/接口文档/文件上传模块.md
================
# 文件
## 1. 将文件上传到腾讯云cos
POST:/upload-files/file
```json
{
  "code": "success",
  "message": "",
  "data": {
    "id": "46db30d1-3199-4e79-a0cd-abf12fa6858f",
    "account_id": "e1baf52a-1be2-4b93-6fad72flec37",
    "name": "项目API文档.md",
    "key": "2024/05/14/21e85217-ab10-4634-9681-022867955f1b.md",
    "size": 30241,
    "extension": "md",
    "mine_type": "txt",
    "created_at": 1721460914
  }
}
```

## 2. 将图片上传到腾讯云cos
POST:/upload-files/image
```json
{
  "code": "success",
  "data": {
    "image_url": "https://cdn.imooc.com2024/05/14/218e5217-ab10-4634-9681-022867955f1b.png",
  },
  "message": ""
}
```

================
File: llmops-web/src/main/resources/doc/接口文档/知识库模块.md
================
# 知识库
## 1. 获取知识库列表
GET:/datasets
```bash
GET:/datasets?search_word=&current_page=1&page_size=21
```

```json
{
  "code": "success",
  "message": "",
  "data": {
    "list": [
      {
        "id": "46db30d1-3199-4e79-a0cd-abf12fa6858f",
        "name": "慕课LLMOps知识库",
        "icon": "https://cdn.imooc.com/dataset.png",
        "description": "JavaScript是一种高级编程语言，用于创建交互式网页和动态效果，JavaScript在前端开发中扮演着非常重要的角色，因此学习 JavaScript 对于初级前端工程师来说非常必要。JavaScrip..."，
        "document_count": 10, // 知识库下的文档数
        "character_count": 14651, // 知识库拥有的文档的总字符数
        "related_app_count": 2, // 该知识库关联的APP数量
        "updated_at": 1721460914,
        "created_at": 1721460914
      }
    ],
    "paginator": {
      "current_page": 1,
      "page_size": 10,
      "total_page": 10,
      "total_record": 10
    }
  }
}
```
## 2. 创建知识库
POST:/datasets
```json
{
  "name": "慕课LLMOps知识库",
  "icon": "https://cdn.imooc.com/dataset.jpg",
  "description": "useful for when you want to answer queries about the 慕课LLMOps知识库"
}
```
```json
{
  "code": "success",
  "message": "创建知识库成功",
  "data": {}
}
```

## 3. 更新制定知识库信息
POST:/datasets/:datasets_id
```bash
POST:/dataset/e1baf52a-1be2-4b93-ad62-6fad72f1ec37
```
```json
{
  "name": "慕课LLMOps知识库",
  "icon": "https://cdn.imooc.com/dataset.jpg",
  "description": "useful for when you want to answer queries about the 慕课LLMOps知识库"
}
```
```json
{
  "code": "success",
  "message": "更新知识库成功",
  "data": {}
}
```

## 4. 删除指定的知识库
删除知识库，关联的应用配置、知识库下的所有文档/文档片段/查询语句也进行一并删除
才用异步/消息队列的形式来实现
POST:/datasets/:dataset_id/delete
```bash
POST:/dataset/e1baf52a-1be2-4b93-ad62-6fad72f1ec37/delete
```
```json
{
  "code": "success",
  "message": "删除知识库成功",
  "data": {}
}
```

## 5. 获取指定的知识库详情
GET:/datasets/:dataset_id
```bash
GET:/dataset/e1baf52a-1be2-4b93-ad62-6fad72f1e37
```
```json
{
  "code": "success",
  "message": "",
  "data": {
    "id": "46db30d1-3199-4e79-a0cd-abf12fa6858f",
    "name": "慕课LLMOps知识库",
    "icon": "https://cdn.imooc.com/dataset.png",
    "description": "",
    "document_count": 10,
    "character_count": 14651,
    "hit_count": 10, // 知识库的文档总命中次数，该知识库下的每一个文档被命中，则次数+1，如果一次查询命中多个同属于同一个文档的片段，该文档的命中次数也只+1，这样计算会更加均衡 
    "related_app_count": 2,
    "updated_at": 1721460914,
    "created_at": 1721460914
  }
}
```

## 6. 指定知识库进行召回测试
POST:/datasets/:dataset_id/hit
入参
|字段名|类型|说明|
| ---- | ---- | ---- |
|dataset_id|uuid|路由参数，需进行召回测试的知识库id|
|query|str|进行召回测试的查询语句，长度不超200个字符|
|retrieval_strategy|str|检索策略，支持值为full_text（全文/关键词检索）、semantic（向量/相似性检索）、hybrid（混合检索）|
|k|int|最大召回数量，数据范围0 - 10，必填参数|
|score|float|最小匹配度，范围0 - 1，保留2位小数，数字越大相似度越高| 
出参
| 字段名 | 类型 | 说明 |
| ---- | ---- | ---- |
| id | uuid | 文档片段的id |
| document | dict | 片段归属的文档信息 |
| document.id | uuid | 文档id |
| document.name | string | 文档的名称 |
| dataset_id | uuid | 片段归属的知识库id |
| score | float | 片段的召回得分，范围0 - 1 |
| position | int | 片段在文档内的位置，数字越小越靠前 |
| content | str | 片段的内容 |
| keywords | list[str] | 关键词列表 |
| character_count | int | 片段的字符串长度 |
| token_count | int | 片段的token数 |
| hit_count | int | 片段被命中的次数 |
| enabled | bool | 片段是否启用，status为completed时才可能为true  |
| disabled_at | int | 片段被人为禁用的时间，0表示未被禁用 |
| status | string | 片段的状态，包括waiting、indexing等 |
| error | string | 后端程序处理错误时的错误信息 |
| updated_at | int | 片段的最后更新时间（时间戳） |
| created_at | int | 片段的创建时间（时间戳） | 
```bash
POST:/dataset/e1baf52a-1be2-4b93-ad62-6fad72f1ec37/hit
```
```json
{
  "query": "LLMOps",
  "retrieval_strategy": "hybrid",
  "k": 10,
  "score": 0.4
}
```

```json
{
  "code": "success",
  "message": "",
  "data": [
    {
      "id": "",
      "document": {
        "id": "",
        "name": "慕课LLMOps项目API文档.md"
      },
      "dataset_id": "",
      "position": 1,
      "score": 0.54,
      "content": "",
      "keywords": ["社交","App","成本","功能", "内容分发"],
      "character_count": 487,
      "token_count": 407,
      "hit_count": 1,
      "enabled": true,
      "disabled_at": 0,
      "status": "completed",
      "error": "",
      "updated_at": 1726858854,
      "created_at": 1726858854
    }
  ]
}
```
## 7. 获取制定知识库最近的查询列表
```bash
GET:/dataset/e1baf52a-1be2-4b93-ad62-6fad72f1ec37/query
```
```json
{
  "code": "success",
  "message": "",
  "data": [
    {
      "id": "26834b62-8bb4-410b-a626-00aded4892b9",
      "dataset_id": "e1baf52a-1be2-4b93-ad62-6fad72f1ec37",
      "query": "慕课网LLMOps是什么？",
      "source": "Hit Testing",
      "created_at": 1726858849
    }
  ]
}
``` 
## 8. 获取指定知识库的文档列表
GET:/datasets/:dataset_id/documents
| 字段名 | 类型 | 说明 |
| ---- | ---- | ---- |
| list | list | 分页后的文档列表信息 |
| id | uuid | 文档的id，类型为uuid |
| name | str | 文档的名字，类型为字符串 |
| character_count | int | 文档的字符总数，类型为整型 |
| hit_count | int | 文档的召回命中次数，类型为整型 |
| position | int | 文档在知识库中的位置，数字越小越靠前 |
| enabled | bool | 文档是否开启，true表示开启，false表示关闭，只有状态为completed时该接口才可设为true |
| disabled_at | int | 文档的禁用时间（人为禁用时记录），类型为时间戳，开启则为0 |
| status | string | 文档的状态，涵盖waiting、parsing、splitting、indexing、completed、error等，构建完成时enabled才起作用 |
| error | string | 错误信息，无错则为空字符串，出错时前端UI可提示 |
| updated_at | int | 文档的更新时间戳，类型为整型 |
| created_at | int | 文档的创建时间戳，类型为整型 |
| paginator | dict | 分页信息字典 |
| current_page | int | 当前的页数 |
| page_size | int | 每页的条数 |
| total_page | int | 总页数 |
| total_record | int | 总记录条数 | 
```bash
GET:/datasets/46db301d1-3199-4e79-a0cd-abf12fa6858f/documents
```

```json
{
  "code": "success",
  "message": "",
  "data": {
    "list": [
      {
        "id": "bde70d64-cbcc-47e7-a0f5-b51200b87c7c",
        "name": "LLMOps项目提示词",
        "character_count": 4700,
        "hint_count": 0,
        "position": 21,
        "enabled": true,
        "disabled_at": 0,
        "status": "completed",
        "error": "",
        "updated_at": 1726949586,
        "created_at": 1726949586
      }
    ],
    "paginator": {
      "current_page": 1,
      "page_size": 21,
      "total_page": 1,
      "total_record": 2
    }
  }
}
```
## 9. 在指定知识库下新增文档
POST:/datasets/:dataset_id/documents
该接口用于在指定知识库下添加新文档，后端处理耗时较长，创建基础文档信息后即响应前端，前端操作不影响后端执行，且一次最多上传10份文档。
| 字段名 | 类型 | 说明 |
| ---- | ---- | ---- |
| dataset_id | uuid | 路由参数，标识要添加文档的知识库id |
| upload_file_ids | list[uuid] | 必填，需新增到知识库的文件id列表，最多10份，可通过文件上传接口获取 |
| process_type | str | 必填，处理类型，支持automatic（自动模式）和custom（自定义） |
| rule | dict | 处理类型为custom时必填 |
| pre_process_rule | list | 预处理规则列表，含id和enabled属性 |
| id | str | 预处理标识，支持remove_extra_space（移除多余空格）和remove_url_and_email（移除链接和邮箱） |
| enabled | bool | 对应预处理是否开启 |
| segment | dict | 片段处理规则，含分隔符、片段大小、片段重叠 |
| separators | list[str] | 片段分隔符列表，支持正则匹配 |
| chunk_size | int | 每个片段最大Token数 |
| chunk_overlap | int | 每个片段间重叠度 | 


| 字段名 | 类型 | 说明 |
| ---- | ---- | ---- |
| documents | list | 返回处理的文档列表，包含文档基础信息 |
| id | uuid | 创建的文档id |
| name | str | 创建的文档名字 |
| status | str | 当前文档状态，如waiting、parsing等 |
| created_at | int | 文档的创建时间戳 |
| batch | str | 当前处理的批次标识，可用于获取文档处理信息 ，格式为%Y%m%d%H%M%S + 100000 - 999999随机字符串| 

```bash
POST:/datasets/46db301d1-3199-4e79-a0cd-abf12fa6858f/documents
```
```json
{
  "upload_file_ids": [
    "5537fc7d-22ef-416e-9535-e4faec532c54",
    "fbd81b3f-3d57-42c8-bfaa-c4b564b1306d",
    "c8bd1894-f64b-46d3-9928-54e452669f9e"
  ],
  "process_type": "custom",
  "rule": {
    "pre_process_rule": [
      {"id": "remove_extra_space","enabled": true},
      {"id": "remove_url_and_email","enabled": false}
    ],
    "segment": {
      "separators": ["\n"],
      "chunk_size": 500,
      "chunk_overlap": 50
    }
  }
}
```
```json
{
  "code": "success",
  "data": {
    "documents": [
      {
        "id": "c8bd1894-f64b-46d3-9928-54e452669f9e",
        "name": "慕课LLMOps项目API文档.md",
        "status": "waiting",
        "created_at": 1726858840
      },
      {
        "id": "f16fa6a3-3088-4b6c-9609-85827f45e9d5",
        "name": "慕课LLMOps课程提示词.md",
        "status": "waiting",
        "created_at": 1726858837
      }
    ],
    "batch": "20240516234156542163"
  },
  "message": ""
}
```
## 10. 根据批次处理标识或取处理进度
GET:/datasets/:dataset_id/documents/batch/:batch
| 字段名 | 类型 | 说明 |
| ---- | ---- | ---- |
| id | uuid | 处理文档的id |
| segment_count | int | 该文档下的文档片段数 |
| completed_segment_count | int | 该文档下已处理完成的文档片段数 |
| error | str | 文档片段处理出错时的记录字段 |
| status | str | 文档状态，包括waiting、parsing等 |
| processing_started_at | int | 开始处理时间，未完成则为0 |
| parsing_completed_at | int | 解析完成时间，未完成则为0 |
| splitting_completed_at | int | 分割完成时间，未完成则为0 |
| completed_at | int | 构建完成时间，未完成则为0 |
| stopped_at | int | 停止时间，未停止则为0 ，出错时记录 |
| created_at | int | 文档的记录创建时间戳 | 
```bash
GET:/datasets/46db30d1-3199-4e79-a0cd-abf12fa6858f/documents/batch/20240516234156542163
```
```json
{
  "code": "success",
  "message": "",
  "data": [
    {
      "id": "46db30d1-3199-4e79-a0cd-abf12fa6858f",
      "segment_count": 21,
      "completed_segment_count": 14,
      "error": "",
      "status": "indexing",
      "processing_started_at": 1726907852,
      "parsing_completed_at": 1726907852,
      "splitting_completed_at": 1726907852,
      "completed_at": 0,
      "stopped_at": 0,
      "created_at": 1726907852
    }
  ]
}
```
## 11. 更新制定文档基础信息
在同一个知识库下，文档名称可以重复，总长度不能超过100个字符
POST:/datasets/:dataset_id/documents/:document_id

```bash
POST:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d
{
  "name": "基于工具调研的智能体设计与实现.md"
}
```
```json
{
  "code": "success",
  "message": "更新文档信息成功",
  "data": {}
}
```

## 12. 更新制定文档的启用状态
POST:/datasets/:dataset_id/documents/:document_id/enabled
```bash
POST:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d/enabled
{
  "enabled": "false"
}
```
```json
{
  "code": "success",
  "message": "更新文档启用状态成功",
  "data": {}
}
```

## 13. 获取指定文档基础信息
GET:/datasets/:dataset_id/documents/:document_id
| 字段名 | 类型 | 说明 |
| ---- | ---- | ---- |
| id | uuid | 文档的id |
| dataset_id | uuid | 文档归属的知识库id |
| name | str | 文档的名称 |
| segment_count | int | 文档的片段总数 |
| character_count | int | 文档的字符数 |
| hit_count | int | 文档的命中次数 |
| position | int | 文档的位置，数字越小越靠前 |
| enabled | bool | 文档的启用状态，true表示启用，false表示禁用 |
| disabled_at | int | 文档的禁用时间，默认0表示无人工禁用 |
| status | string | 文档状态，涵盖waiting、parsing等，构建完成时enabled才起作用 |
| error | string | 错误信息，无错则为空字符串 |
| updated_at | int | 文档的更新时间戳 |
| created_at | int | 文档的创建时间戳 | 
```bash
GET:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d
```
```json
{
  "code": "success",
  "message": "",
  "data": {
        "id": "6196a3bc-2c81-40b8-83a5-25ad837f5a84",
        "dataset_id": "bde70d64-cbcc-47e7-a0f5-b51200b87c7c",
        "name": "基于工具调用的智能体设计与实现.md",
        "segment_count": 15,
        "character_count": 4700,
        "hit_count": 0,
        "position": 21,
        "enabled": true,
        "disabled_at": 0,
        "status": "completed",
        "error": "",
        "updated_at": 1726949586,
        "created_at": 1726949586
    }  
}
```

## 14. 删除指定文档信息
该接口会根据传递的信息删除文档信息，并删除该文档下的片段信息，同时会将操作同步到向量数据库，在向量数据库中删除归属该文档的所有片段信息，该接口属于耗时接口，所以在后端使用异步任务队列的方式进行操作，完成基础信息的删除(例如文档记录)后，接口即会正常响应前端。 
POST:/datasets/:dataset_id/documents/:document_id/delete

```bash
POST:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d
```
```json
{
  "code": "success",
  "message": "删除文档成功",
  "data": {}
}
```

## 15 获取指定文档的片段列表
```bash
GET:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d/segments
```
```json
{
  "code": "success",
  "message": "",
  "data": {
    "list": [
      {
        "id": "b7087193-8e1b-4e88-8ae4-48a0f90a8ad5",
        "document_id": "6a266b4b-d03b-4066-a4bb-f64abfe23b9d",
        "dataset_id": "bde70d64-cbcc-47e7-a0f5-b51200b87c7c",
        "position": 1,
        "content": "为了提倡社交产品的流量，让用户主动分享APP中的内容到社交平台来达到拉新和促活的目的，市场上的绝大多数APP都有第三发分享的功能，它是内容分发的最有效途径，并且大大降低了企..."，
        "keywords": ["社交","App", "成本","功能","内容分发"],
        "character_count": 487,
        "token_count": 407,
        "hit_count": 1,
        "enabled": true,
        "disabled_at": 0,
        "status": "completed",
        "error": "",
        "updated_at": 1726858854,
        "created_at": 1726858854
      }
    ],
    "paginator": {
      "current_page": 1,
      "page_size": 10,
      "total_page": 10,
      "total_record": 10
    }
  }
}
```
## 16. 新增文档片段消息
POST:/datasets/:dataset_id/document_id/segments
| 字段名 | 类型 | 说明 |
| ---- | ---- | ---- |
| dataset_id | uuid | 路由参数，片段归属的知识库id |
| document_id | uuid | 路由参数，片段归属的文档id |
| content | str | 片段内容，原则上长度不超1000个token |
| keywords | list[str] | 片段对应的关键词列表，可选，未传时后端用分词服务获取关键词  | 

```bash
POST:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d/segments
{
  "content": "## 角色，你是一个拥有10年经验的资深Python工程师，精通Flask，Flask-SQLAchemy，Postgres，以及其他Python开发工具，能够为用户剔除的需求或者提供的代码生成制定的",
  "keywords": ["Python", "Flask", "工程师"]
}
```

```json
{
  "code": "success",
  "message": "新增文档片段成功",
  "data": {}
}
```

## 17. 删除对应的文档片段信息
该接口用于删除对应的文档片段信息，该操作会同步到向量数据库中并行删除，因操作数据较少、无耗时操作，无需在后端异步执行，执行完成后接口会正常响应。 
```bash
POST:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d/segments/26834b62-8bb4-410b-a626-00aded4892b9/delete
```
```json
{
  "code": "success",
  "message": "",
  "data": {}
}
```
## 18. 修改文档片段内容
```bash
POST:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d/segments/26834b62-8bb4-410b-a626-00aded4892b9
{
    "content": "## 角色 你是一个拥有10年经验的资深Python工程师，精通Flask，Flask-SQLAlchemy，Postgres，以及其他Python开发工具，能够为用户提出的需求或者提供的代码段生成指定的",
    "keywords": ["Python", "Flask", "工程师"]
} 
```
```json
{
  "code": "success",
  "message": "",
  "data": {}
}
```
## 19. 更新文档片段的启用状态
接口说明：该接口主要用于更新文档片段的启用状态（启用或禁用），会同步更新业务数据库和向量数据库，因耗时较短，无需执行异步任务。 
```bash
POST:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d/segments/26834b62-8bb4-410b-a626-00aded4892b9
{
    "enabled": false
}
```
```json
{
  "code": "success",
  "message": "修改片段状态成功",
  "data": {}
}
```

## 20. 查询文档片段信息
GET:/datasets/:dataset_id/documents/:document_Id/segments/:segment_id
|字段名|类型|说明|
| ---- | ---- | ---- |
|id|uuid|文档片段的id|
|document_id|uuid|片段归属的文档id|
|dataset_id|uuid|片段归属的知识库id|
|position|int|片段在文档内的位置，数字越小越靠前|
|content|str|片段的内容|
|keywords|list[str]|关键词列表|
|character_count|int|片段的字符串长度|
|token_count|int|片段的token数|
|hit_count|int|片段被命中的次数|
|hash|str|片段内容的哈希值，用于确定唯一的片段内容|
|enabled|bool|片段是否启用，只有status为completed时，enabled才可能为true|
|disabled_at|int|片段被人为禁用的时间，为0表示没有人为禁用|
|status|string|片段的状态，涵盖waiting、indexing等|
|error|string|后端程序处理出错时的错误信息|
|updated_at|int|片段的最后更新时间（时间戳）|
|created_at|int|片段的创建时间（时间戳）| 

```bash
GET:/datasets/bde70d64-cbcc-47e7-a0f5-b51200b87c7c/documents/6a266b4b-d03b-4066-a4bb-f64abfe23b9d/segments/26834b62-8bb4-410b-a626-00aded4892b9
```
```json
{
    "code": "success",
    "data": {
        "id": "b7087193-8e1b-4e88-8ae4-48a0f90a8ad5",
        "document_id": "6a266b4b-d03b-4066-a4bb-f64abfe23b9d",
        "dataset_id": "bde70d64-cbcc-47e7-a0f5-b51200b87c7c",
        "position": 1,
        "content": "为了借助社交产品的流量，让用户主动分享APP中的内容到社交平台来达到拉新和促活的目的，市场上绝大多数APP都有第三方分享的功能，它是内容分发的最有效途径，并且大大降低了企...",
        "keywords": ["社交", "App", "成本", "功能", "内容分发"],
        "character_count": 487,
        "token_count": 407,
        "hit_count": 1,
        "hash": "6d867db429d26ea426d6b67a88fce43e74760d039e9e2925f0083b7acb1f066a",
        "enabled": true,
        "disabled_at": 0,
        "status": "completed",
        "error": "",
        "updated_at": 1726858854,
        "created_at": 1726858854
    },
    "message": ""
}
```

================
File: llmops-web/src/main/resources/doc/LLMOps数据库ER图.drawio
================
<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36" version="24.8.3">
  <diagram id="R2lEEEUBdFMjLlhIrx00" name="Page-1">
    <mxGraphModel dx="4195" dy="2348" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" background="none" math="0" shadow="0" extFonts="Permanent Marker^https://fonts.googleapis.com/css?family=Permanent+Marker">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="vUAwSDsnT3aca96v4Chr-23" value="app（AI应用表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;labelBackgroundColor=none;fillColor=#5D7F99;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="1" vertex="1">
          <mxGeometry x="-10" y="480" width="320" height="360" as="geometry">
            <mxRectangle x="60" y="250" width="120" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-24" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="30" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-25" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-24" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-26" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-24" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-27" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="60" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-28" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-27" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-29" value="account_id uuid NOT NULL 账号id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-27" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-1" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="90" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-2" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="bStc-ceA4CuMDwlJqUTg-1" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-3" value="published_app_config_id uuid NULL 已发布配置id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="bStc-ceA4CuMDwlJqUTg-1" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-4" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="120" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-5" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="bStc-ceA4CuMDwlJqUTg-4" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-6" value="drafted_app_config_id uuid NULL 草稿配置id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="bStc-ceA4CuMDwlJqUTg-4" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-129" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="150" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-130" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-129" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-131" value="debug_conversion_id uuid NOT NULL 调试会话id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-129" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-30" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="180" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-31" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-30" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-32" value="name varchar(255) NOT NULL &quot;&quot; 应用名称" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-30" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-33" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="210" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-34" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-33" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-35" value="icon varchar(255) NOT NULL &quot;&quot; 应用图标" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-33" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-41" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="240" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-42" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-41" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-43" value="description text NOT NULL &quot;&quot; 应用描述" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;labelBackgroundColor=none;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-41" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-44" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="270" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-45" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-44" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-46" value="status char(100) NOT NULL &quot;&quot; 应用状态" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-44" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-47" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="300" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-48" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-47" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-49" value="updated_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-47" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-50" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-23" vertex="1">
          <mxGeometry y="330" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-51" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-50" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-52" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;strokeColor=#D0CEE2;fontColor=#1A1A1A;rounded=1;" parent="vUAwSDsnT3aca96v4Chr-50" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-70" value="app_config（应用配置表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="-350" y="480" width="300" height="240" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-71" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-70" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-72" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-71" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-73" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-71" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-83" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-70" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-84" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=0;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-83" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-85" value="app_id uuid NOT NULL 应用id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=0;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-83" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-74" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-70" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-75" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-74" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-76" value="model_config JSONB 模型配置" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-74" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-91" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-70" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-92" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-91" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-93" value="memory_mode string NOT NULL 记忆类型" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-91" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-7" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-70" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-8" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="bStc-ceA4CuMDwlJqUTg-7" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bStc-ceA4CuMDwlJqUTg-9" value="status char(100) NOT NULL &quot;&quot; 状态" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="bStc-ceA4CuMDwlJqUTg-7" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-77" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-70" vertex="1">
          <mxGeometry y="180" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-78" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-77" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-79" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-77" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-80" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-70" vertex="1">
          <mxGeometry y="210" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-81" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-80" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-82" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;created_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-80" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-133" value="message（消息表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="750" y="-180" width="300" height="660" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-134" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-135" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-134" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-136" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-134" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-31" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-32" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-31" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-33" value="app_id uuid NOT NULL 应用id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-31" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-152" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-153" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-152" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-154" value="conversation_id uuid NOT NULL 会话id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-152" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-34" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-35" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-34" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-36" value="invoke_from varchar(255) NOT NULL 调用来源" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-34" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-137" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-138" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-137" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-139" value="created_by uuid NOT NULL 创建账号id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-137" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-140" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="180" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-141" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-140" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-142" value="query text NOT NULL &quot;&quot; 消息的原始问题" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-140" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-38" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="210" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-39" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-38" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-40" value="message jsonb NOT NULL {} 最终消息列表" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-38" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-41" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="240" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-42" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-41" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-43" value="message_token_count int NOT NULL 0 token数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-41" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-44" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="270" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-45" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-44" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-46" value="message_unit_price float NOT NULL 0 单价" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-44" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-47" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="300" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-48" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-47" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-49" value="message_price_unit float NOT NULL 0 价格单位" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-47" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-143" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="330" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-144" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-143" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-145" value="answer text NOT NULL &quot;&quot; AI生成内容" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-143" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-156" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="360" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-157" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-156" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-158" value="answer_token_count int NOT NULL 0 token数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-156" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-50" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="390" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-51" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-50" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-52" value="answer_unit_price float NOT NULL 0 单价" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-50" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-53" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="420" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-54" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-53" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-55" value="answer_price_unit float NOT NULL 0 价格单位" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-53" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-159" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="450" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-160" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-159" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-161" value="latency float NOT NULL 0 响应耗时" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-159" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-66" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="480" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-67" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-66" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-68" value="total_token_count int NOT NULL 0 总token数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-66" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-62" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="510" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-63" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-62" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-64" value="total_price float NOT NULL 0 消息总价格" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-62" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-56" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="540" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-57" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-56" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-58" value="status varchar(255) NOT NULL &quot;&quot; 状态" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-56" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-59" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="570" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-60" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-59" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-61" value="error text NOT NULL &quot;&quot; 错误日志" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-59" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-146" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="600" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-147" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-146" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-148" value="updated_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-146" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-149" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-133" vertex="1">
          <mxGeometry y="630" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-150" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-149" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-151" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-149" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-163" value="account（账号表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="385" y="800" width="310" height="300" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-164" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-163" vertex="1">
          <mxGeometry y="30" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-165" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-164" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-166" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-164" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-167" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-163" vertex="1">
          <mxGeometry y="60" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-168" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-167" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-169" value="name varchar(255) NOT NULL &quot;&quot; 账号名称" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-167" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-170" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-163" vertex="1">
          <mxGeometry y="90" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-171" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-170" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-172" value="email varchar(255) NOT NULL &quot;&quot; 绑定邮箱" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-170" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-187" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-163" vertex="1">
          <mxGeometry y="120" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-188" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-187" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-189" value="password varchar(255) &quot;&quot; 密码" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-187" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-2" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" vertex="1" parent="vUAwSDsnT3aca96v4Chr-163">
          <mxGeometry y="150" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-3" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-2">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-4" value="password_salt varchar(255) 密码盐值" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-2">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-5" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" vertex="1" parent="vUAwSDsnT3aca96v4Chr-163">
          <mxGeometry y="180" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-6" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-5">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-7" value="last_login_at timestamp NOT NULL 最后登录时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-5">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-8" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" vertex="1" parent="vUAwSDsnT3aca96v4Chr-163">
          <mxGeometry y="210" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-9" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-8">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-10" value="last_login_ip varchar(255) NOT NULL 最后登录ip" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-8">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-173" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-163" vertex="1">
          <mxGeometry y="240" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-174" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-173" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-175" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-173" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-178" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-163" vertex="1">
          <mxGeometry y="270" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-179" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-178" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-180" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-178" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-27" value="api_tool_provider（API工具提供者）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="385" y="1130" width="310" height="300" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-28" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="30" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-29" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-28" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-30" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-28" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-34" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="60" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-35" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-34" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-36" value="account_id uuid NOT NULL 关联的用户id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-34" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-31" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="90" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-32" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-31" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-33" value="name varchar(255) NOT NULL &quot;&quot; 提供商名称" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-31" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-37" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="120" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-38" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-37" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-39" value="icon varchar(255) NOT NULL &quot;&quot; 提供商图标" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-37" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-46" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="150" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-47" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-46" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-48" value="description text NOT NULL &quot;&quot; 提供商描述" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-46" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-49" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="180" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-50" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-49" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-51" value="openapi_schema JSON NOT NULL 规范描述" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-49" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-52" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="210" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-53" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-52" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-54" value="headers JSON NOT NULL 提供商对应的请求头" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-52" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-40" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="240" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-41" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-40" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-42" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-40" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-43" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-27" vertex="1">
          <mxGeometry y="270" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-44" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-43" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-45" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-43" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-56" value="api_tool（API工具）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="385" y="1460" width="310" height="330" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-57" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="30" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-58" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-57" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-59" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-57" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-60" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="60" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-61" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-60" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-62" value="account_id uuid NOT NULL 关联的用户id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-60" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-84" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="90" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-85" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-84" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-86" value="provider_id uuid NOT NULL 关联的提供者id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-84" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-63" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="120" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-64" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-63" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-65" value="name varchar(255) NOT NULL &quot;&quot; 工具名称" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-63" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-69" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="150" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-70" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-69" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-71" value="description text NOT NULL &quot;&quot; 工具描述" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-69" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-100" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="180" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-101" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-100" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-102" value="url varchar(255) NOT NULL &quot;&quot; 工具API地址" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-100" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-97" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="210" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-98" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-97" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-99" value="method varchar(255) NOT NULL &quot;&quot; 路由方法" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-97" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-91" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="240" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-92" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-91" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-93" value="parameters JSON NOT NULL [] 工具参数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="IanLP2ZzHl4gmPyYAZ94-91" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-78" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="270" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-79" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-78" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-80" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-78" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-81" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-56" vertex="1">
          <mxGeometry y="300" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-82" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-81" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IanLP2ZzHl4gmPyYAZ94-83" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="IanLP2ZzHl4gmPyYAZ94-81" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-45" value="&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;upload_file（上传文件）&lt;/span&gt;" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="-10" y="860" width="320" height="330" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-46" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="30" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-47" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-46" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-48" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-46" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-49" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="60" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-50" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-49" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-51" value="&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;account_id uuid NOT NULL 上传文件的用户id&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-49" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-52" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="90" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-53" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-52" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-54" value="name varchar(255) NOT NULL &quot;&quot; 上传的文件名" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-52" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-55" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="120" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-56" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-55" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-57" value="&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;key varchar(255) NOT NULL &quot;&quot; 对象存储文件路径&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-55" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-58" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="150" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-59" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-58" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-60" value="size int NOT NULL 0 上传文件的大小" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-58" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-61" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="180" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-62" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-61" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-63" value="extension varchar(255) NOT NULL &quot;&quot; 文件的扩展名" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-61" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-64" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="210" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-65" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-64" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-66" value="mime_type varchar(255) NOT NULL &quot;&quot; mimetype" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-64" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-67" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="240" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-68" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-67" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-69" value="hash varchar(255) NOT NULL &quot;&quot; 文件内容的哈希值" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="dS2zVylGR0kERSjscxNz-67" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-70" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="270" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-71" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-70" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-72" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-70" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-73" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-45" vertex="1">
          <mxGeometry y="300" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-74" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-73" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dS2zVylGR0kERSjscxNz-75" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="dS2zVylGR0kERSjscxNz-73" vertex="1">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-1" value="dataset（知识库）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="750" y="660" width="300" height="240" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-2" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-1" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-3" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-2" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-4" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-2" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-5" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-1" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-6" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-5" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-7" value="account_id uuid NOT NULL 关联的用户id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-5" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-8" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-1" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-9" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-8" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-10" value="name varchar(255) NOT NULL &quot;&quot; 知识库名称" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-8" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-11" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-1" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-12" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-11" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-13" value="icon varchar(255) NOT NULL &quot;&quot; 知识库图标" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-11" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-14" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-1" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-15" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-14" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-16" value="description text NOT NULL &quot;&quot; 知识库描述" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-14" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-26" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-1" vertex="1">
          <mxGeometry y="180" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-27" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-26" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-28" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-26" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-29" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-1" vertex="1">
          <mxGeometry y="210" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-30" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-29" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-31" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-29" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-32" value="dataset_query（知识库查询）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="1140" y="660" width="300" height="270" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-33" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-34" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-33" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-35" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-33" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-36" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-37" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-36" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-38" value="dataset_id uuid NOT NULL 关联的知识库id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-36" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-39" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-40" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-39" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-41" value="query text NOT NULL &quot;&quot; 查询query语句" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-39" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-42" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-43" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-42" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-44" value="source varchar(255) NOT NULL 查询的来源" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-42" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-45" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-46" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-45" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-47" value="source_app_id uuid 查询关联的应用id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-45" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-56" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="180" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-57" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-56" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-58" value="created_by uuid NOT NULL 创建查询的账号id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-56" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-280" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="210" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-281" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-280" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-282" value="updated_at timestamp NOT NULL 更新时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-280" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-51" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-32" vertex="1">
          <mxGeometry y="240" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-52" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-51" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-53" value="created_at timestamp NOT NULL 创建时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-51" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-82" value="process_rule（处理规则表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="1140" y="960" width="300" height="240" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-83" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-82" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-84" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-83" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-85" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-83" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-86" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-82" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-87" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-86" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-88" value="account_id uuid NOT NULL 关联的用户id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-86" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-283" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-82" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-284" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-283" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-285" value="dataset_id uuid NOT NULL 归属知识库id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-283" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-92" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-82" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-93" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-92" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-94" value="mode varchar(255) NOT NULL 处理模式" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-92" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-95" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-82" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-96" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-95" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-97" value="rule JSONB NOT NULL 处理规则" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-95" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-98" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-82" vertex="1">
          <mxGeometry y="180" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-99" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-98" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-100" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL 更新时间&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-98" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-101" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-82" vertex="1">
          <mxGeometry y="210" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-102" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-101" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-103" value="created_at timestamp NOT NULL 创建时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-101" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-104" value="segment（文档片段）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="750" y="1639" width="300" height="690" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-105" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-106" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-105" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-107" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-105" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-108" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-109" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-108" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-110" value="account_id uuid NOT NULL 关联的用户id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-108" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-111" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-112" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-111" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-113" value="dataset_id uuid NOT NULL 关联的知识库id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-111" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-114" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-115" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-114" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-116" value="document_id uuid NOT NULL 关联的文档id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-114" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-205" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-206" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-205" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-207" value="node_id uuid 向量数据库节点id用于快速查找" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-205" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-117" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="180" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-118" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-117" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-119" value="position int NOT NULL 1 片段在文档的位置" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-117" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-129" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="210" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-130" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-129" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-131" value="content text NOT NULL &quot;&quot; 片段内容" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-129" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-132" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="240" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-133" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-132" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-134" value="character_count int NOT NULL 0 片段长度" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-132" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-135" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="270" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-136" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-135" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-137" value="token_count int NOT NULL 0 token词数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-135" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-138" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="300" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-139" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-138" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-140" value="keywords JSONB NOT NULL [] 关键词列表" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-138" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-141" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="330" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-142" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-141" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-143" value="hash varchar(255) NOT NULL &quot;&quot; 内容哈希值" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-141" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-144" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="360" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-145" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-144" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-146" value="hit_count int NOT NULL 0 命中次数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-144" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-147" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="390" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-148" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-147" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-149" value="enabled boolean NOT NULL False 是否启用" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-147" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-150" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="420" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-151" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-150" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-152" value="disabled_at timestamp 禁用时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-150" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-286" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="450" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-287" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-286" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-288" value="processing_started_at timestamp 开始处理时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-286" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-156" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="480" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-157" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-156" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-158" value="indexing_completed_at timestamp 索引完成时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-156" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-159" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="510" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-160" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-159" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-161" value="completed_at timestamp 构建完成时间戳" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-159" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-162" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="540" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-163" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-162" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-164" value="stopped_at timestamp 停止时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-162" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-165" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="570" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-166" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-165" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-167" value="error text NOT NULL &quot;&quot; 错误日志" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-165" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-153" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="600" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-154" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-153" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-155" value="status varchar(255) NOT NULL &quot;waiting&quot; 状态" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-153" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-120" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="630" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-121" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-120" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-122" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL 更新时间&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-120" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-123" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-104" vertex="1">
          <mxGeometry y="660" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-124" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-123" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-125" value="created_at timestamp NOT NULL 创建时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-123" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-60" value="document（文档）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="750" y="920" width="300" height="690" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-61" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-62" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-61" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-63" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-61" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-64" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-65" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-64" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-66" value="account_id uuid NOT NULL 关联的用户id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-64" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-67" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-68" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-67" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-69" value="dataset_id uuid NOT NULL 关联的知识库id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-67" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-70" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-71" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-70" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-72" value="upload_file_id uuid NOT NULL 关联的文件id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-70" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-208" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-209" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-208" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-210" value="process_rule_id uuid NOT NULL 处理规则id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-208" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-218" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="180" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-219" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-218" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-220" value="batch varchar(255) NOT NULL &quot;&quot; 文档处理批次" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-218" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-215" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="210" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-216" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-215" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-217" value="name varchar(255) NOT NULL &quot;&quot; 文档名字" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-215" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-73" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="240" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-74" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-73" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-75" value="position int NOT NULL 1 文档位置" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-73" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-221" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="270" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-222" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-221" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-223" value="character_count int NOT NULL 0 文档字符数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-221" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-224" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="300" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-225" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-224" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-226" value="token_count int NOT NULL 0 文档token总数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-224" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-227" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="330" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-228" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-227" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-229" value="processing_started_at timestamp 开始处理时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-227" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-230" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="360" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-231" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-230" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-232" value="parsing_completed_at timestamp 解析结束时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-230" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-233" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="390" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-234" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-233" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-235" value="splitting_completed_at timestamp 分割结束时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-233" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-236" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="420" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-237" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-236" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-238" value="indexing_completed_at timestamp 索引结束时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-236" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-239" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="450" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-240" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-239" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-241" value="completed_at timestamp 构建完成时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-239" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-242" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="480" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-243" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-242" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-244" value="stopped_at timestamp 停止时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-242" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-245" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="510" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-246" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-245" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-247" value="error text NOT NULL &quot;&quot; 错误日志" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-245" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-248" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="540" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-249" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-248" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-250" value="enabled boolean NOT NULL False 是否启用" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-248" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-251" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="570" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-252" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-251" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-253" value="disabled_at timestamp 人为禁用时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-251" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-254" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="600" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-255" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-254" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-256" value="status varchar(255) NOT NULL &quot;&quot; 状态" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-254" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-76" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="630" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-77" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-76" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-78" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-76" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-79" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-60" vertex="1">
          <mxGeometry y="660" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-80" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-79" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-81" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-79" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-178" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-61" target="SeaHfr5syAc9D6wxpbcK-114" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-179" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;flowAnimation=1;curved=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-2" target="SeaHfr5syAc9D6wxpbcK-67" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-180" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-2" target="SeaHfr5syAc9D6wxpbcK-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-182" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="SeaHfr5syAc9D6wxpbcK-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-183" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="SeaHfr5syAc9D6wxpbcK-64" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-184" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="vUAwSDsnT3aca96v4Chr-137" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-186" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="SeaHfr5syAc9D6wxpbcK-108" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-187" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="IanLP2ZzHl4gmPyYAZ94-34" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-188" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;curved=1;flowAnimation=1;" parent="1" source="IanLP2ZzHl4gmPyYAZ94-28" target="IanLP2ZzHl4gmPyYAZ94-84" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-189" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="IanLP2ZzHl4gmPyYAZ94-60" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="350" y="845" />
              <mxPoint x="350" y="1536" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-190" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="vUAwSDsnT3aca96v4Chr-101" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-192" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-24" target="vUAwSDsnT3aca96v4Chr-98" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-193" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="vUAwSDsnT3aca96v4Chr-27" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-194" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="dS2zVylGR0kERSjscxNz-49" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-211" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-83" target="SeaHfr5syAc9D6wxpbcK-208" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-257" value="keyword_table（关键词表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="1140" y="460" width="300" height="180" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-258" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-257" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-259" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-258" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-260" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-258" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-261" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-257" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-262" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-261" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-263" value="dataset_id uuid NOT NULL 关联的知识库id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-261" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-264" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-257" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-265" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-264" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-266" value="keyword_table JSONB NOT NULL {} 关键词表" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-264" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-273" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-257" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-274" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-273" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-275" value="updated_at timestamp NOT NULL 更新时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-273" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-276" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-257" vertex="1">
          <mxGeometry y="150" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-277" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-276" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-278" value="created_at timestamp NOT NULL 创建时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-276" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-279" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-2" target="SeaHfr5syAc9D6wxpbcK-261" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-290" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-95" target="vUAwSDsnT3aca96v4Chr-152" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="665" y="645" as="sourcePoint" />
            <mxPoint x="760" y="415" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-291" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-2" target="SeaHfr5syAc9D6wxpbcK-283" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-292" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-2" target="SeaHfr5syAc9D6wxpbcK-111" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1080" y="705" />
              <mxPoint x="1080" y="1744" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-293" value="app_dataset_join（应用关联知识库表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="750" y="500" width="300" height="150" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-294" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-293" vertex="1">
          <mxGeometry y="30" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-295" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-294" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-296" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-294" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-300" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="SeaHfr5syAc9D6wxpbcK-293" vertex="1">
          <mxGeometry y="60" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-301" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-300" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-302" value="app_id uuid NOT NULL 关联的应用id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="SeaHfr5syAc9D6wxpbcK-300" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-297" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-293" vertex="1">
          <mxGeometry y="90" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-298" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-297" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-299" value="dataset_id uuid NOT NULL 关联的知识库id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-297" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-306" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-293" vertex="1">
          <mxGeometry y="120" width="300" height="30" as="geometry" />
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-307" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-306" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-308" value="created_at timestamp NOT NULL 创建时间" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="SeaHfr5syAc9D6wxpbcK-306" vertex="1">
          <mxGeometry x="30" width="270" height="30" as="geometry">
            <mxRectangle width="270" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="SeaHfr5syAc9D6wxpbcK-309" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="SeaHfr5syAc9D6wxpbcK-2" target="SeaHfr5syAc9D6wxpbcK-297" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-24" target="vUAwSDsnT3aca96v4Chr-83" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-3" value="message_agent_thought（智能体消息推理表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="385" y="-410" width="310" height="840" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-4" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="30" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-5" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-4" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-6" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-4" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-69" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="60" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-70" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-69" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-71" value="app_id uuid NOT NULL 关联应用id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-69" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-7" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="90" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-8" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-7" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-9" value="conversation_id uuid NOT NULL 会话id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-7" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-10" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="120" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-11" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-10" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-12" value="message_id uuid NOT NULL 关联消息id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-10" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-13" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="150" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-14" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-13" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-15" value="invoke_from varchar(255) NOT NULL &quot;&quot; 来源" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-13" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-16" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="180" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-17" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-16" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-18" value="created_by uuid NOT NULL 创建者id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-16" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-19" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="210" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-20" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-19" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-21" value="position int NOT NULL 0 推理步骤位置" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-19" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-22" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="240" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-23" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-22" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-24" value="event varchar(255) NOT NULL &quot;&quot; 事件类型" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-22" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-25" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="270" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-26" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-25" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-27" value="thought text NOT NULL &quot;&quot; 推理内容" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-25" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-28" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="300" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-29" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-28" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-30" value="observation text NOT NULL &quot;&quot; 观察内容" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="G67dtJhjpFkqrb54gwfP-28" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-76" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="330" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-77" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-76" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-78" value="tool text NOT NULL &quot;&quot; 工具名称" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-76" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-79" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="360" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-80" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-79" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-81" value="tool_label text NOT NULL &quot;&quot; 工具标签" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-79" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-82" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="390" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-83" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-82" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-84" value="tool_params jsonb NOT NULL {} 工具配置参数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-82" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-85" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="420" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-86" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-85" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-87" value="tool_input jsonb NOT NULL {} 工具LLM输入" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-85" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-88" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="450" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-89" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-88" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-90" value="message jsonb NOT NULL [] 推理的消息列表" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-88" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-91" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="480" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-92" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-91" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-93" value="message_token_count int NOT NULL 0 token数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-91" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-94" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="510" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-95" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-94" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-96" value="message_unit_price float NOT NULL 0 单价" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-94" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-97" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="540" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-98" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-97" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-99" value="message_price_unit float NOT NULL 0 价格单位" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-97" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-100" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="570" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-101" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-100" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-102" value="answer text NOT NULL &quot;&quot; 答案" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-100" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-103" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="600" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-104" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-103" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-105" value="answer_token_count int NOT NULL 0 token数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-103" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-106" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="630" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-107" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-106" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-108" value="answer_unit_price float NOT NULL 0 单价" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-106" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-109" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="660" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-110" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-109" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-111" value="answer_price_unit float NOT NULL 0 价格单位" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-109" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-112" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="690" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-113" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-112" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-114" value="total_token_count int NOT NULL 0 总token数" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-112" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-115" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="720" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-116" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-115" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-117" value="total_price float NOT NULL 0 总价格" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-115" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-118" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="750" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-119" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-118" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-120" value="latency float NOT NULL 0 响应耗时" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-118" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-121" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="780" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-122" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-121" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-123" value="updated_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-121" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-124" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="G67dtJhjpFkqrb54gwfP-3" vertex="1">
          <mxGeometry y="810" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-125" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-124" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-126" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="G67dtJhjpFkqrb54gwfP-124" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-37" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="vUAwSDsnT3aca96v4Chr-24" target="SeaHfr5syAc9D6wxpbcK-300" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="320" y="525" />
              <mxPoint x="320" y="430" />
              <mxPoint x="710" y="430" />
              <mxPoint x="710" y="575" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-94" value="conversation（会话表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" parent="1" vertex="1">
          <mxGeometry x="385" y="447" width="310" height="330" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-95" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="30" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-96" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-95" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-97" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-95" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-98" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="60" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-99" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-98" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-100" value="app_id uuid NOT NULL 应用id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-98" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-1" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="90" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-2" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-1" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-3" value="name varchar(255) NOT NULL &quot;&quot; 会话名称" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-1" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-7" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="120" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-8" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-7" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-9" value="summary text NOT NULL &quot;&quot; 会话摘要" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-7" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-10" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="150" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-11" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-10" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-12" value="is_pinned bool NOT NULL False 是否置顶" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-10" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-13" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="180" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-14" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-13" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-15" value="is_delete bool NOT NULL False 是否删除" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-13" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-19" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="210" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-20" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-19" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="HwKiP5mA6iNmb-caJ3qU-21" value="invoke_from varchar(255) NOT NULL &quot;&quot; 来源" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" parent="HwKiP5mA6iNmb-caJ3qU-19" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-101" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="240" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-102" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-101" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-103" value="created_by uuid NOT NULL 创建会话的id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-101" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-104" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="270" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-105" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-104" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-106" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-104" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-121" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-94" vertex="1">
          <mxGeometry y="300" width="310" height="30" as="geometry" />
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-122" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-121" vertex="1">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="vUAwSDsnT3aca96v4Chr-123" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" parent="vUAwSDsnT3aca96v4Chr-121" vertex="1">
          <mxGeometry x="30" width="280" height="30" as="geometry">
            <mxRectangle width="280" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-72" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-24" target="G67dtJhjpFkqrb54gwfP-69" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-74" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-95" target="G67dtJhjpFkqrb54gwfP-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="G67dtJhjpFkqrb54gwfP-75" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" parent="1" source="vUAwSDsnT3aca96v4Chr-134" target="G67dtJhjpFkqrb54gwfP-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-11" value="account_oauth（账号第三方授权表）" style="shape=table;startSize=30;container=1;collapsible=1;childLayout=tableLayout;fixedRows=1;rowLines=0;fontStyle=1;align=center;resizeLast=1;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;fillColor=#5D7F99;" vertex="1" parent="1">
          <mxGeometry x="-10" y="1210" width="320" height="240" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-12" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-11">
          <mxGeometry y="30" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-13" value="PK" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;fontStyle=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-12">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-14" value="id uuid NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;fontStyle=5;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-12">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-15" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-11">
          <mxGeometry y="60" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-16" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-15">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-17" value="account_id uuid NOT NULL 关联账号id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-15">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-18" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-11">
          <mxGeometry y="90" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-19" value="IDX" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-18">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-20" value="provider varchar(255) NOT NULL &quot;&quot; 提供商名字" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-18">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-21" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-11">
          <mxGeometry y="120" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-22" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-21">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-23" value="openid varchar(255) NOT NULL &quot;&quot; 开放id" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-21">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-24" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;" vertex="1" parent="5601572up16xsN8RLKQe-11">
          <mxGeometry y="150" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-25" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-24">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-26" value="encrypted_token varchar(255) NOT NULL &quot;&quot; 加密凭证" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;" vertex="1" parent="5601572up16xsN8RLKQe-24">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-33" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-11">
          <mxGeometry y="180" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-34" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-33">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-35" value="&lt;span style=&quot;text-wrap: nowrap;&quot;&gt;updated_at timestamp NOT NULL&lt;/span&gt;" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;whiteSpace=wrap;html=1;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-33">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-36" value="" style="shape=tableRow;horizontal=0;startSize=0;swimlaneHead=0;swimlaneBody=0;fillColor=none;collapsible=0;dropTarget=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;top=0;left=0;right=0;bottom=0;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-11">
          <mxGeometry y="210" width="320" height="30" as="geometry" />
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-37" value="" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;editable=1;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-36">
          <mxGeometry width="30" height="30" as="geometry">
            <mxRectangle width="30" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-38" value="created_at timestamp NOT NULL" style="shape=partialRectangle;connectable=0;fillColor=none;top=0;left=0;bottom=0;right=0;align=left;spacingLeft=6;overflow=hidden;rounded=1;strokeColor=#D0CEE2;fontColor=#1A1A1A;" vertex="1" parent="5601572up16xsN8RLKQe-36">
          <mxGeometry x="30" width="290" height="30" as="geometry">
            <mxRectangle width="290" height="30" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="5601572up16xsN8RLKQe-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;curved=1;flowAnimation=1;" edge="1" parent="1" source="vUAwSDsnT3aca96v4Chr-164" target="5601572up16xsN8RLKQe-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>

================
File: llmops-web/src/main/resources/doc/openApischeme.json
================
{
    "description": "这是一个查询对应英文单词字典的工具",
    "server": "https://dict.youdao.com",
    "paths": {
        "/suggest": {
            "get": {
                "description": "根据传递的单词查询其字典信息",
                "operationId": "YoudaoSuggest",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "要检索查询的单词，例如love/computer",
                        "required": true,
                        "type": "str"
                    },
                    {
                        "name": "doctype",
                        "in": "query",
                        "description": "返回的数据类型，支持json和xml两种格式，默认配置下json数据",
                        "required": false,
                        "type": "str"
                    }
                ]
            }
        }
    }   
}

================
File: llmops-web/src/main/resources/application.properties
================
langchain4j.open-ai.chat-model.api-key=${OPENAI_API_KEY}
langchain4j.open-ai.chat-model.kimi-api-key=${OPENAI_API_KEY}

langchain4j.open-ai.streaming-chat-model.api-key=moonshot-v1-8k
langchain4j.open-ai.streaming-chat-model.model-name=${OPENAI_API_KEY}
langchain4j.open-ai.streaming-chat-model.base-url=https://api.moonshot.cn/v1

langchain4j.open-ai.chat-model.log-requests=true
langchain4j.open-ai.chat-model.log-responses=true
logging.level.dev.langchain4j=DEBUG
logging.level.dev.ai4j.openai4j=DEBUG


# ?????
spring.datasource.url=jdbc:mysql://127.0.0.1/llmops?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MyBatis ??
mybatis.mapper-locations=classpath*:mapper/*.xml  # ?? dao ???? Mapper XML ??
mybatis.type-aliases-package=com.emcikem.llm.dao.entity  # ??????
mybatis.configuration.map-underscore-to-camel-case=true  # ????????

# ????????
logging.level.com.emcikem.llm.dao.mapper=DEBUG
logging.level.org.mybatis=DEBUG

================
File: llmops-web/src/main/resources/log4j2.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="INFO">
    <Appenders>
        <!-- 控制台日志输出 -->
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>

        <!-- 按天和大小切分的文件Appender -->
        <RollingFile name="InfoLog" fileName="logs/info.log"
                     filePattern="logs/info-%d{yyyy-MM-dd}-%i.log">
            <Filters>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="512 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="WarnLog" fileName="logs/warn.log"
                     filePattern="logs/warn-%d{yyyy-MM-dd}-%i.log">
            <Filters>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="512 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="ErrorLog" fileName="logs/error.log"
                     filePattern="logs/error-%d{yyyy-MM-dd}-%i.log">
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <SizeBasedTriggeringPolicy size="512 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>
    </Appenders>

    <Loggers>
        <Root level="info">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="InfoLog"/>
            <AppenderRef ref="WarnLog"/>
            <AppenderRef ref="ErrorLog"/>
        </Root>
    </Loggers>
</Configuration>

================
File: llmops-web/pom.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.emcikem</groupId>
        <artifactId>llmops</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>llmops-web</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.emcikem</groupId>
            <artifactId>llmops-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.emcikem</groupId>
            <artifactId>llmops-dao</artifactId>
        </dependency>
        <dependency>
            <groupId>com.emcikem</groupId>
            <artifactId>llmops-service</artifactId>
        </dependency>
        <dependency>
            <groupId>com.emcikem</groupId>
            <artifactId>llmops-common</artifactId>
        </dependency>

        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-open-ai-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- for Flux<String> support -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-reactor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

================
File: .gitignore
================
.classpath
.eclipse
.DS_Store
.idea
.settings
.project
bin
target
*.iml
**/.settings
**/.classpath
**/.eclipse
**/.projectx
**/.idea
**/.DS_Store
**/bin
**/target
MANIFEST.MF
\.DS_Store
*/.DS_Store
.DS_Store?
.Trashes
# 排除所有日志文件
*.log
*.log.*
# 排除日志目录
logs/

================
File: pom.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.emcikem</groupId>
    <artifactId>llmops</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>llmops-client</module>
        <module>llmops-dao</module>
        <module>llmops-service</module>
        <module>llmops-web</module>
        <module>llmops-common</module>
    </modules>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project-sub.version>1.0-SNAPSHOT</project-sub.version>
        <spring-boot.version>3.2.4</spring-boot.version>
        <langchain4j.version>1.0.0-alpha1</langchain4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.26</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.10.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>30.1.1-jre</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-spring-boot-starter</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-open-ai-spring-boot-starter</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-open-ai</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-reactor</artifactId>
                <version>${langchain4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.emcikem</groupId>
                <artifactId>llmops-client</artifactId>
                <version>${project-sub.version}</version>
            </dependency>
            <dependency>
                <groupId>com.emcikem</groupId>
                <artifactId>llmops-dao</artifactId>
                <version>${project-sub.version}</version>
            </dependency>
            <dependency>
                <groupId>com.emcikem</groupId>
                <artifactId>llmops-service</artifactId>
                <version>${project-sub.version}</version>
            </dependency>
            <dependency>
                <groupId>com.emcikem</groupId>
                <artifactId>llmops-web</artifactId>
                <version>${project-sub.version}</version>
            </dependency>
            <dependency>
                <groupId>com.emcikem</groupId>
                <artifactId>llmops-common</artifactId>
                <version>${project-sub.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
                <version>3.5.9</version>
            </dependency>

            <!-- MySQL 驱动 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.26</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>3.3</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.azure.cognitiveservices</groupId>
                <artifactId>azure-cognitiveservices-websearch</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.azure.cognitiveservices</groupId>
                <artifactId>azure-cognitiveservices-customsearch</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <!-- jsoup HTML parser library @ https://jsoup.org/ -->
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>1.18.3</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-http</artifactId>
                <version>5.8.11</version> <!-- 请根据实际情况使用最新版本 -->
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>

================
File: README.md
================
# llmops
An llmops platform based on LangChain and an interface based on the OpenAI API specification.

# technology stack
language：Java（Java17）

Framework：springboot（springboot4） + mybatis + langchain4j

DB：MySQL（MySQL7）

# features
- 基础的聊天机器人，对接deepseek，Kimi
- 记忆模块，解决，LLM无状态/记忆，持久化对话



================================================================
End of Codebase
================================================================
